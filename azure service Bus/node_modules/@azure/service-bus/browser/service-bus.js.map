{"version":3,"file":"service-bus.js","sources":["../../../../common/temp/node_modules/.pnpm/registry.npmjs.org/tslib/1.10.0/node_modules/tslib/tslib.es6.js","../../../../common/temp/node_modules/.pnpm/registry.npmjs.org/process/0.11.10/node_modules/process/browser.js","../../../../common/temp/node_modules/.pnpm/registry.npmjs.org/ms/2.1.2/node_modules/ms/index.js","../../../../common/temp/node_modules/.pnpm/registry.npmjs.org/debug/4.1.1/node_modules/debug/src/common.js","../../../../common/temp/node_modules/.pnpm/registry.npmjs.org/debug/4.1.1/node_modules/debug/src/browser.js","../src/log.ts","../src/util/constants.ts","../../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@azure/amqp-common/1.0.0-preview.11/node_modules/@azure/amqp-common/src/util/constants.ts","../../../../common/temp/node_modules/.pnpm/registry.npmjs.org/base64-js/1.3.1/node_modules/base64-js/index.js","../../../../common/temp/node_modules/.pnpm/registry.npmjs.org/ieee754/1.1.13/node_modules/ieee754/index.js","../../../../common/temp/node_modules/.pnpm/registry.npmjs.org/buffer/5.4.3/node_modules/buffer/index.js","../../../../common/temp/node_modules/.pnpm/registry.npmjs.org/util/0.12.1/node_modules/util/support/isBufferBrowser.js","../../../../common/temp/node_modules/.pnpm/registry.npmjs.org/is-arguments/1.0.4/node_modules/is-arguments/index.js","../../../../common/temp/node_modules/.pnpm/registry.npmjs.org/is-generator-function/1.0.7/node_modules/is-generator-function/index.js","../../../../common/temp/node_modules/.pnpm/registry.npmjs.org/util/0.12.1/node_modules/util/support/types.js","../../../../common/temp/node_modules/.pnpm/registry.npmjs.org/inherits/2.0.4/node_modules/inherits/inherits_browser.js","../../../../common/temp/node_modules/.pnpm/registry.npmjs.org/util/0.12.1/node_modules/util/util.js","../../../../common/temp/node_modules/.pnpm/registry.npmjs.org/rhea/1.0.18/node_modules/rhea/lib/errors.js","../../../../common/temp/node_modules/.pnpm/registry.npmjs.org/rhea/1.0.18/node_modules/rhea/lib/util.js","../../../../common/temp/node_modules/.pnpm/registry.npmjs.org/rhea/1.0.18/node_modules/rhea/lib/types.js","../../../../common/temp/node_modules/.pnpm/registry.npmjs.org/rhea/1.0.18/node_modules/rhea/lib/frames.js","../../../../common/temp/node_modules/.pnpm/registry.npmjs.org/debug/3.2.6/node_modules/debug/src/common.js","../../../../common/temp/node_modules/.pnpm/registry.npmjs.org/debug/3.2.6/node_modules/debug/src/browser.js","../../../../common/temp/node_modules/.pnpm/registry.npmjs.org/rhea/1.0.18/node_modules/rhea/lib/log.js","../../../../common/temp/node_modules/.pnpm/registry.npmjs.org/rhea/1.0.18/node_modules/rhea/lib/transport.js","../../../../common/temp/node_modules/.pnpm/registry.npmjs.org/rhea/1.0.18/node_modules/rhea/lib/sasl.js","../../../../common/temp/node_modules/.pnpm/registry.npmjs.org/rhea/1.0.18/node_modules/rhea/lib/endpoint.js","../../../../common/temp/node_modules/.pnpm/registry.npmjs.org/rhea/1.0.18/node_modules/rhea/lib/message.js","../../../../common/temp/node_modules/.pnpm/registry.npmjs.org/rhea/1.0.18/node_modules/rhea/lib/terminus.js","../../../../common/temp/node_modules/.pnpm/registry.npmjs.org/events/3.1.0/node_modules/events/events.js","../../../../common/temp/node_modules/.pnpm/registry.npmjs.org/rhea/1.0.18/node_modules/rhea/lib/link.js","../../../../common/temp/node_modules/.pnpm/registry.npmjs.org/rhea/1.0.18/node_modules/rhea/lib/session.js","../../../../common/temp/node_modules/.pnpm/registry.npmjs.org/rhea/1.0.18/node_modules/rhea/lib/connection.js","../../../../common/temp/node_modules/.pnpm/registry.npmjs.org/rhea/1.0.18/node_modules/rhea/lib/eventTypes.js","../../../../common/temp/node_modules/.pnpm/registry.npmjs.org/rhea/1.0.18/node_modules/rhea/lib/ws.js","../../../../common/temp/node_modules/.pnpm/registry.npmjs.org/rhea/1.0.18/node_modules/rhea/lib/filter.js","../../../../common/temp/node_modules/.pnpm/registry.npmjs.org/rhea/1.0.18/node_modules/rhea/lib/container.js","../../../../common/temp/node_modules/.pnpm/registry.npmjs.org/rhea-promise/0.1.15/node_modules/rhea-promise/lib/log.ts","../../../../common/temp/node_modules/.pnpm/registry.npmjs.org/rhea-promise/0.1.15/node_modules/rhea-promise/lib/util/utils.ts","../../../../common/temp/node_modules/.pnpm/registry.npmjs.org/rhea-promise/0.1.15/node_modules/rhea-promise/lib/entity.ts","../../../../common/temp/node_modules/.pnpm/registry.npmjs.org/rhea-promise/0.1.15/node_modules/rhea-promise/lib/operationTimeoutError.ts","../../../../common/temp/node_modules/.pnpm/registry.npmjs.org/rhea-promise/0.1.15/node_modules/rhea-promise/lib/link.ts","../../../../common/temp/node_modules/.pnpm/registry.npmjs.org/rhea-promise/0.1.15/node_modules/rhea-promise/lib/receiver.ts","../../../../common/temp/node_modules/.pnpm/registry.npmjs.org/rhea-promise/0.1.15/node_modules/rhea-promise/lib/sender.ts","../../../../common/temp/node_modules/.pnpm/registry.npmjs.org/rhea-promise/0.1.15/node_modules/rhea-promise/lib/session.ts","../../../../common/temp/node_modules/.pnpm/registry.npmjs.org/rhea-promise/0.1.15/node_modules/rhea-promise/lib/container.ts","../../../../common/temp/node_modules/.pnpm/registry.npmjs.org/rhea-promise/0.1.15/node_modules/rhea-promise/lib/util/constants.ts","../../../../common/temp/node_modules/.pnpm/registry.npmjs.org/rhea-promise/0.1.15/node_modules/rhea-promise/lib/connection.ts","../../../../common/temp/node_modules/.pnpm/registry.npmjs.org/rhea-promise/0.1.15/node_modules/rhea-promise/lib/eventContext.ts","../../../../common/temp/node_modules/.pnpm/registry.npmjs.org/rhea-promise/0.1.15/node_modules/rhea-promise/lib/index.ts","../../../../common/temp/node_modules/.pnpm/registry.npmjs.org/async-lock/1.2.2/node_modules/async-lock/lib/index.js","../../../../common/temp/node_modules/.pnpm/registry.npmjs.org/async-lock/1.2.2/node_modules/async-lock/index.js","../../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@azure/amqp-common/1.0.0-preview.11/node_modules/@azure/amqp-common/src/util/utils.ts","../../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@azure/amqp-common/1.0.0-preview.11/node_modules/@azure/amqp-common/src/errors.ts","../../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@azure/amqp-common/1.0.0-preview.11/node_modules/@azure/amqp-common/src/log.ts","../../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@azure/amqp-common/1.0.0-preview.11/node_modules/@azure/amqp-common/src/util/checkNetworkConnection.browser.ts","../../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@azure/amqp-common/1.0.0-preview.11/node_modules/@azure/amqp-common/src/retry.ts","../../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@azure/amqp-common/1.0.0-preview.11/node_modules/@azure/amqp-common/src/requestResponseLink.ts","../../../../common/temp/node_modules/.pnpm/registry.npmjs.org/is-buffer/2.0.4/node_modules/is-buffer/index.js","../../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@azure/amqp-common/1.0.0-preview.11/node_modules/@azure/amqp-common/src/dataTransformer.ts","../../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@azure/amqp-common/1.0.0-preview.11/node_modules/@azure/amqp-common/src/auth/token.ts","../../../../common/temp/node_modules/.pnpm/registry.npmjs.org/jssha/2.3.1/node_modules/jssha/src/sha.js","../../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@azure/amqp-common/1.0.0-preview.11/node_modules/@azure/amqp-common/src/auth/sas.ts","../../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@azure/amqp-common/1.0.0-preview.11/node_modules/@azure/amqp-common/src/connectionConfig/connectionConfig.ts","../../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@azure/amqp-common/1.0.0-preview.11/node_modules/@azure/amqp-common/src/connectionConfig/eventhubConnectionConfig.ts","../../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@azure/amqp-common/1.0.0-preview.11/node_modules/@azure/amqp-common/src/connectionConfig/iothubConnectionConfig.ts","../../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@azure/amqp-common/1.0.0-preview.11/node_modules/@azure/amqp-common/src/cbs.ts","../../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@azure/amqp-common/1.0.0-preview.11/node_modules/@azure/amqp-common/src/messageHeader.ts","../../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@azure/amqp-common/1.0.0-preview.11/node_modules/@azure/amqp-common/src/messageProperties.ts","../../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@azure/amqp-common/1.0.0-preview.11/node_modules/@azure/amqp-common/src/ConnectionContextBase.ts","../src/connectionContext.ts","../src/client.ts","../../../../common/temp/node_modules/.pnpm/registry.npmjs.org/long/4.0.0/node_modules/long/src/long.js","../src/util/utils.ts","../src/util/errors.ts","../src/serviceBusMessage.ts","../src/core/linkEntity.ts","../src/core/messageSender.ts","../src/sender.ts","../src/core/messageReceiver.ts","../src/core/streamingReceiver.ts","../src/core/batchingReceiver.ts","../src/session/messageSession.ts","../src/receiver.ts","../src/core/managementClient.ts","../src/util/concurrentExpiringMap.ts","../src/util/semaphore.ts","../src/session/sessionManager.ts","../src/clientEntityContext.ts","../src/queueClient.ts","../src/topicClient.ts","../src/subscriptionClient.ts","../src/serviceBusClient.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* Active `debug` instances.\n\t*/\n\tcreateDebug.instances = [];\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn match;\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.enabled = createDebug.enabled(namespace);\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = selectColor(namespace);\n\t\tdebug.destroy = destroy;\n\t\tdebug.extend = extend;\n\t\t// Debug.formatArgs = formatArgs;\n\t\t// debug.rawLog = rawLog;\n\n\t\t// env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\tcreateDebug.instances.push(debug);\n\n\t\treturn debug;\n\t}\n\n\tfunction destroy() {\n\t\tconst index = createDebug.instances.indexOf(this);\n\t\tif (index !== -1) {\n\t\t\tcreateDebug.instances.splice(index, 1);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0; i < createDebug.instances.length; i++) {\n\t\t\tconst instance = createDebug.instances[i];\n\t\t\tinstance.enabled = createDebug.enabled(instance.namespace);\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n","/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\nfunction log(...args) {\n\t// This hackery is required for IE8/9, where\n\t// the `console.log` function doesn't have 'apply'\n\treturn typeof console === 'object' &&\n\t\tconsole.log &&\n\t\tconsole.log(...args);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport debugModule from \"debug\";\n/**\n * @internal\n * log statements for linkEntity\n */\nexport const link = debugModule(\"azure:service-bus:linkEntity\");\n/**\n * @internal\n * log statements for error\n */\nexport const error = debugModule(\"azure:service-bus:error\");\n/**\n * @internal\n * log statements for warning\n */\nexport const warning = debugModule(\"azure:service-bus:warning\");\n/**\n * @internal\n * log statements for management\n */\nexport const mgmt = debugModule(\"azure:service-bus:management\");\n/**\n * @internal\n * log statements for sender\n */\nexport const sender = debugModule(\"azure:service-bus:sender\");\n/**\n * @internal\n * log statements for receiver\n */\nexport const receiver = debugModule(\"azure:service-bus:receiver\");\n/**\n * @internal\n * log statements for receiverbatching\n */\nexport const batching = debugModule(\"azure:service-bus:receiverbatching\");\n/**\n * @internal\n * log statements for receiverstreaming\n */\nexport const streaming = debugModule(\"azure:service-bus:receiverstreaming\");\n/**\n * @internal\n * log statements for connectionContext\n */\nexport const connectionCtxt = debugModule(\"azure:service-bus:connectionContext\");\n/**\n * @internal\n * log statements for clientEntityContext\n */\nexport const entityCtxt = debugModule(\"azure:service-bus:clientEntityContext\");\n/**\n * @internal\n * log statements for namespace\n */\nexport const ns = debugModule(\"azure:service-bus:namespace\");\n/**\n * @internal\n * log statements for servicebusMessage\n */\nexport const message = debugModule(\"azure:service-bus:servicebusMessage\");\n/**\n * @internal\n * log statements for map\n */\nexport const map = debugModule(\"azure:service-bus:concurrentMap\");\n/**\n * @internal\n * log statements for utils\n */\nexport const utils = debugModule(\"azure:service-bus:utils\");\n/**\n * @internal\n * log statements for messageSession\n */\nexport const messageSession = debugModule(\"azure:service-bus:messageSession\");\n/**\n * @internal\n * log statements for semaphore\n */\nexport const semaphore = debugModule(\"azure:service-bus:semaphore\");\n/**\n * @internal\n * log statements for sessionManager\n */\nexport const sessionManager = debugModule(\"azure:service-bus:sessionManager\");\n/**\n * @internal\n * log statements for Atom XML management API over HTTP\n */\nexport const httpAtomXml = debugModule(\"azure:service-bus:atom-xml\");\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nexport const packageJsonInfo = {\n  name: \"@azure/service-bus\",\n  version: \"1.1.4\"\n};\n\nexport const messageDispositionTimeout = 20000;\n\nexport const max32BitNumber = Math.pow(2, 31) - 1;\n\n/**\n * Queue name identifier\n */\nexport const QUEUE_NAME = \"QueueName\";\n\n/**\n * Topic name identifier\n */\nexport const TOPIC_NAME = \"TopicName\";\n\n/**\n * Subscription name identifier\n */\nexport const SUBSCRIPTION_NAME = \"SubscriptionName\";\n\n/**\n * Rule name identifier\n */\nexport const RULE_NAME = \"RuleName\";\n\n/**\n * Accessed at field\n */\nexport const ACCESSED_AT = \"AccessedAt\";\n\n/**\n * Updated at field\n */\nexport const UPDATED_AT = \"UpdatedAt\";\n\n/**\n * Created at field\n */\nexport const CREATED_AT = \"CreatedAt\";\n\n/**\n * Authorization rules on the entity\n */\nexport const AUTHORIZATION_RULES = \"AuthorizationRules\";\n\n/**\n * Is Anonymous Accessible field\n */\nexport const IS_ANONYMOUS_ACCESSIBLE = \"IsAnonymousAccessible\";\n\n/**\n * Entity Availability Status field\n */\nexport const ENTITY_AVAILABILITY_STATUS = \"EntityAvailabilityStatus\";\n\n/**\n * Enable express option\n */\nexport const ENABLE_EXPRESS = \"EnableExpress\";\n\n/**\n * Is express option\n */\nexport const IS_EXPRESS = \"IsExpress\";\n\n/**\n * Enable Subscription Partitioning option\n */\nexport const ENABLE_SUBSCRIPTION_PARTITIONING = \"EnableSubscriptionPartitioning\";\n\n/**\n * Filtering Messages Before Publishing option\n */\nexport const FILTER_MESSAGES_BEFORE_PUBLISHING = \"FilteringMessagesBeforePublishing\";\n\n/**\n * Indicates the default rule description.\n *\n */\nexport const DEFAULT_RULE_DESCRIPTION = \"DefaultRuleDescription\";\n\n/**\n * The entity's size in bytes.\n *\n */\nexport const SIZE_IN_BYTES = \"SizeInBytes\";\n\n/**\n * The entity's message count.\n *\n */\nexport const MESSAGE_COUNT = \"MessageCount\";\n\n/**\n * The topic's subscription count.\n *\n */\nexport const SUBSCRIPTION_COUNT = \"SubscriptionCount\";\n\n/**\n * The topic / subscription's count details.\n *\n */\nexport const COUNT_DETAILS = \"CountDetails\";\n\n/**\n * The default rule name.\n *\n */\nexport const DEFAULT_RULE_NAME = \"$Default\";\n\n/**\n * Max idle time before entity is deleted.\n * This is specified in ISO-8601 duration format such as \"PT1M\" for 1 minute, \"PT5S\" for 5 seconds.\n */\nexport const AUTO_DELETE_ON_IDLE = \"AutoDeleteOnIdle\";\n\n/**\n * The status information on response\n *\n */\nexport const STATUS = \"Status\";\n\n/**\n * The URL of Service Bus entity to forward messages to.\n *\n */\nexport const FORWARD_TO = \"ForwardTo\";\n\n/**\n * The user meta data information\n *\n */\nexport const USER_METADATA = \"UserMetadata\";\n\n/**\n * The maximum size in megabytes.\n *\n */\nexport const MAX_SIZE_IN_MEGABYTES = \"MaxSizeInMegabytes\";\n\n/**\n * The default message time to live.\n * This is specified in ISO-8601 duration format such as \"PT1M\" for 1 minute, \"PT5S\" for 5 seconds.\n */\nexport const DEFAULT_MESSAGE_TIME_TO_LIVE = \"DefaultMessageTimeToLive\";\n\n/**\n * The lock duration.\n * This is specified in ISO-8601 duration format such as \"PT1M\" for 1 minute, \"PT5S\" for 5 seconds.\n */\nexport const LOCK_DURATION = \"LockDuration\";\n\n/**\n * The indication if session is required or not.\n *\n */\nexport const REQUIRES_SESSION = \"RequiresSession\";\n\n/**\n * The indication if duplicate detection is required or not.\n *\n */\nexport const REQUIRES_DUPLICATE_DETECTION = \"RequiresDuplicateDetection\";\n\n/**\n * The indication if dead lettering on message expiration. If it is enabled and a message expires,\n * the Service Bus moves the message from the queue into the entity dead-letter sub-queue.\n * If disabled, message will be permanently deleted from the main entity.\n * Settable only at entity creation time.\n *\n */\nexport const DEAD_LETTERING_ON_MESSAGE_EXPIRATION = \"DeadLetteringOnMessageExpiration\";\n\n/**\n * The indication if dead lettering on filter evaluation exceptions.\n *\n */\nexport const DEAD_LETTERING_ON_FILTER_EVALUATION_EXCEPTIONS =\n  \"DeadLetteringOnFilterEvaluationExceptions\";\n\n/**\n * The history time window for duplicate detection.\n * This is specified in ISO-8601 duration format such as \"PT1M\" for 1 minute, \"PT5S\" for 5 seconds.\n */\nexport const DUPLICATE_DETECTION_HISTORY_TIME_WINDOW = \"DuplicateDetectionHistoryTimeWindow\";\n\n/**\n * The maximum delivery count of messages after which if it is still not settled, gets moved to the dead-letter sub-queue.\n *\n */\nexport const MAX_DELIVERY_COUNT = \"MaxDeliveryCount\";\n\n/**\n * Indicates if the queue has enabled batch operations.\n *\n */\nexport const ENABLE_BATCHED_OPERATIONS = \"EnableBatchedOperations\";\n\n/**\n * Indicates whether the topic can be ordered\n *\n */\nexport const SUPPORT_ORDERING = \"SupportOrdering\";\n\n/**\n * Indicates whether the topic/queue should be split across multiple partitions\n *\n */\nexport const ENABLE_PARTITIONING = \"EnablePartitioning\";\n\n/**\n * The URL of Service Bus entity to forward deadlettered messages to.\n *\n */\nexport const FORWARD_DEADLETTERED_MESSAGES_TO = \"ForwardDeadLetteredMessagesTo\";\n\n/**\n * Query string parameter to set Service Bus API version\n *\n */\nexport const API_VERSION_QUERY_KEY = \"api-version\";\n\n/**\n * Current API version being sent to service bus\n *\n */\nexport const CURRENT_API_VERSION = \"2017-04\";\n\n/**\n * Constant representing the Odata Error 'message' property\n *\n * @const\n * @type {string}\n */\nexport const ODATA_ERROR_MESSAGE = \"message\";\n/**\n * Constant representing the 'value' property of Odata Error 'message' property\n *\n * @const\n * @type {string}\n */\nexport const ODATA_ERROR_MESSAGE_VALUE = \"value\";\n\n/**\n * Marker for atom metadata.\n *\n * @const\n * @type {string}\n */\nexport const XML_METADATA_MARKER = \"$\";\n\n/**\n * Marker for atom value.\n *\n * @const\n * @type {string}\n */\nexport const XML_VALUE_MARKER = \"_\";\n\n/**\n * Constant representing the property where the atom default elements are stored.\n *\n * @const\n * @type {string}\n */\nexport const ATOM_METADATA_MARKER = \"_\";\n\n/**\n * Known HTTP status codes as documented and referenced in ATOM based management API feature\n * https://docs.microsoft.com/en-us/dotnet/api/system.net.httpstatuscode?view=netframework-4.8\n */\nexport const HttpResponseCodes = {\n  100: \"Continue\",\n  101: \"SwitchingProtocols\",\n  200: \"Ok\",\n  201: \"Created\",\n  202: \"Accepted\",\n  203: \"NonAuthoritativeInformation\",\n  204: \"NoContent\",\n  205: \"ResetContent\",\n  206: \"PartialContent\",\n  300: \"MultipleChoices\",\n  301: \"Moved\",\n  302: \"Redirect\",\n  303: \"RedirectMethod\",\n  304: \"NotModified\",\n  305: \"UseProxy\",\n  306: \"Unused\",\n  400: \"BadRequest\",\n  401: \"Unauthorized\",\n  402: \"PaymentRequired\",\n  403: \"Forbidden\",\n  404: \"NotFound\",\n  405: \"MethodNotAllowed\",\n  406: \"NotAcceptable\",\n  407: \"ProxyAuthenticationRequired\",\n  409: \"Conflict\",\n  410: \"Gone\",\n  411: \"LengthRequired\",\n  412: \"PreconditionFailed\",\n  413: \"RequestEntityTooLarge\",\n  414: \"RequestUriTooLong\",\n  415: \"UnsupportedMediaType\",\n  416: \"RequestRangeNotSatisfiable\",\n  417: \"ExpectationFailed\",\n  426: \"UpgradeRequired\",\n  500: \"InternalServerError\",\n  501: \"NotImplemented\",\n  502: \"BadGateway\",\n  503: \"ServiceUnavailable\",\n  504: \"GatewayTimeout\",\n  505: \"HttpVersionNotSupported\"\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License. See License.txt in the project root for license information.\nexport const associatedLinkName = \"associated-link-name\";\nexport const partitionKey = \"x-opt-partition-key\";\nexport const sequenceNumber = \"x-opt-sequence-number\";\nexport const enqueueSequenceNumber = \"x-opt-enqueue-sequence-number\";\nexport const enqueuedTime = \"x-opt-enqueued-time\";\nexport const scheduledEnqueueTime = \"x-opt-scheduled-enqueue-time\";\nexport const offset = \"x-opt-offset\";\nexport const lockedUntil = \"x-opt-locked-until\";\nexport const partitionIdName = \"x-opt-partition-id\";\nexport const publisher = \"x-opt-publisher-name\";\nexport const viaPartitionKey = \"x-opt-via-partition-key\";\nexport const deadLetterSource = \"x-opt-deadletter-source\";\nexport const enqueuedTimeAnnotation = `amqp.annotation.${enqueuedTime}`;\nexport const offsetAnnotation = `amqp.annotation.${offset}`;\nexport const sequenceNumberAnnotation = `amqp.annotation.${sequenceNumber}`;\nexport const guidSize = 16;\nexport const message = \"message\";\nexport const error = \"error\";\nexport const statusCode = \"status-code\";\nexport const statusDescription = \"status-description\";\nexport const errorCondition = \"error-condition\";\nexport const management = \"$management\";\nexport const partition = \"partition\";\nexport const partitionId = \"partitionId\";\nexport const readOperation = \"READ\";\nexport const TLS = \"tls\";\nexport const establishConnection = \"establishConnection\";\nexport const defaultConsumerGroup = \"$default\";\nexport const eventHub = \"eventhub\";\nexport const cbsEndpoint = \"$cbs\";\nexport const cbsReplyTo = \"cbs\";\nexport const operationPutToken = \"put-token\";\nexport const aadEventHubsAudience = \"https://eventhubs.azure.net/\";\nexport const aadServiceBusAudience = \"https://servicebus.azure.net/\";\nexport const maxUserAgentLength = 512;\nexport const vendorString = \"com.microsoft\";\nexport const attachEpoch = `${vendorString}:epoch`;\nexport const receiverIdentifierName = `${vendorString}:receiver-name`;\nexport const enableReceiverRuntimeMetricName = `${vendorString}:enable-receiver-runtime-metric`;\nexport const timespan = `${vendorString}:timespan`;\nexport const uri = `${vendorString}:uri`;\nexport const dateTimeOffset = `${vendorString}:datetime-offset`;\nexport const sessionFilterName = `${vendorString}:session-filter`;\nexport const receiverError = \"receiver_error\";\nexport const senderError = \"sender_error\";\nexport const sessionError = \"session_error\";\nexport const connectionError = \"connection_error\";\nexport const defaultOperationTimeoutInSeconds = 60;\nexport const defaultConnectionIdleTimeoutInMs = 60000;\nexport const managementRequestKey = \"managementRequest\";\nexport const negotiateCbsKey = \"negotiateCbs\";\nexport const negotiateClaim = \"negotiateClaim\";\nexport const ensureContainerAndBlob = \"ensureContainerAndBlob\";\nexport const defaultPrefetchCount = 1000;\nexport const reconnectLimit = 100;\nexport const maxMessageIdLength = 128;\nexport const maxPartitionKeyLength = 128;\nexport const maxSessionIdLength = 128;\nexport const pathDelimiter = \"/\";\nexport const ruleNameMaximumLength = 50;\nexport const maximumSqlFilterStatementLength = 1024;\nexport const maximumSqlRuleActionStatementLength = 1024;\nexport const maxDeadLetterReasonLength = 4096;\n// https://stackoverflow.com/questions/11526504/minimum-and-maximum-date for js\n// However we are setting this to the TimeSpan.MaxValue of C#.\nexport const maxDurationValue = 922337203685477;\nexport const minDurationValue = -922337203685477;\n// https://github.com/Azure/azure-amqp/blob/master/Microsoft.Azure.Amqp/Amqp/AmqpConstants.cs#L47\nexport const maxAbsoluteExpiryTime = new Date(\"9999-12-31T07:59:59.000Z\").getTime();\nexport const aadTokenValidityMarginSeconds = 5;\nexport const connectionReconnectDelay = 300;\nexport const defaultRetryAttempts = 3;\nexport const defaultConnectionRetryAttempts = 150;\nexport const defaultDelayBetweenOperationRetriesInSeconds = 5;\nexport const defaultDelayBetweenRetriesInSeconds = 15;\nexport const receiverSettleMode = \"receiver-settle-mode\";\nexport const dispositionStatus = \"disposition-status\";\nexport const fromSequenceNumber = \"from-sequence-number\";\nexport const messageCount = \"message-count\";\nexport const lockTokens = \"lock-tokens\";\nexport const messageIdMapKey = \"message-id\";\nexport const sequenceNumberMapKey = \"sequence-number\";\nexport const lockTokenMapKey = \"lock-token\";\nexport const sessionIdMapKey = \"session-id\";\nexport const sequenceNumbers = \"sequence-numbers\";\nexport const deadLetterReason = \"deadletter-reason\";\nexport const deadLetterDescription = \"deadletter-description\";\nexport const propertiesToModify = \"properties-to-modify\";\nexport const deadLetterName = \"com.microsoft:dead-letter\";\nexport const trackingId = \"com.microsoft:tracking-id\";\nexport const serverTimeout = \"com.microsoft:server-timeout\";\nexport const operations = {\n  putToken: \"put-token\",\n  read: \"READ\",\n  cancelScheduledMessage: \"com.microsoft:cancel-scheduled-message\",\n  scheduleMessage: \"com.microsoft:schedule-message\",\n  renewLock: \"com.microsoft:renew-lock\",\n  peekMessage: \"com.microsoft:peek-message\",\n  receiveBySequenceNumber: \"com.microsoft:receive-by-sequence-number\",\n  updateDisposition: \"com.microsoft:update-disposition\",\n  renewSessionLock: \"com.microsoft:renew-session-lock\",\n  setSessionState: \"com.microsoft:set-session-state\",\n  getSessionState: \"com.microsoft:get-session-state\",\n  enumerateSessions: \"com.microsoft:get-message-sessions\",\n  addRule: \"com.microsoft:add-rule\",\n  removeRule: \"com.microsoft:remove-rule\",\n  enumerateRules: \"com.microsoft:enumerate-rules\"\n};\nexport const descriptorCodes = {\n  ruleDescriptionList: 1335734829060,\n  sqlFilterList: 83483426822,\n  correlationFilterList: 83483426825,\n  sqlRuleActionList: 1335734829062,\n  trueFilterList: 83483426823,\n  falseFilterList: 83483426824\n};\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol.for === 'function')\n    ? Symbol.for('nodejs.util.inspect.custom')\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    var proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\n// Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\nif (typeof Symbol !== 'undefined' && Symbol.species != null &&\n    Buffer[Symbol.species] === Buffer) {\n  Object.defineProperty(Buffer, Symbol.species, {\n    value: null,\n    configurable: true,\n    enumerable: false,\n    writable: false\n  })\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayLike(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  var valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  var b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(\n      value[Symbol.toPrimitive]('string'), encodingOrOffset, length\n    )\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      buf = Buffer.from(buf)\n    }\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  var len = string.length\n  var mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  var strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n        : (firstByte > 0xBF) ? 2\n          : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (var i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    var len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nvar hexSliceLookupTable = (function () {\n  var alphabet = '0123456789abcdef'\n  var table = new Array(256)\n  for (var i = 0; i < 16; ++i) {\n    var i16 = i * 16\n    for (var j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}","'use strict';\n\nvar hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\nvar toStr = Object.prototype.toString;\n\nvar isStandardArguments = function isArguments(value) {\n\tif (hasToStringTag && value && typeof value === 'object' && Symbol.toStringTag in value) {\n\t\treturn false;\n\t}\n\treturn toStr.call(value) === '[object Arguments]';\n};\n\nvar isLegacyArguments = function isArguments(value) {\n\tif (isStandardArguments(value)) {\n\t\treturn true;\n\t}\n\treturn value !== null &&\n\t\ttypeof value === 'object' &&\n\t\ttypeof value.length === 'number' &&\n\t\tvalue.length >= 0 &&\n\t\ttoStr.call(value) !== '[object Array]' &&\n\t\ttoStr.call(value.callee) === '[object Function]';\n};\n\nvar supportsStandardArguments = (function () {\n\treturn isStandardArguments(arguments);\n}());\n\nisStandardArguments.isLegacyArguments = isLegacyArguments; // for tests\n\nmodule.exports = supportsStandardArguments ? isStandardArguments : isLegacyArguments;\n","'use strict';\n\nvar toStr = Object.prototype.toString;\nvar fnToStr = Function.prototype.toString;\nvar isFnRegex = /^\\s*(?:function)?\\*/;\nvar hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\nvar getProto = Object.getPrototypeOf;\nvar getGeneratorFunc = function () { // eslint-disable-line consistent-return\n\tif (!hasToStringTag) {\n\t\treturn false;\n\t}\n\ttry {\n\t\treturn Function('return function*() {}')();\n\t} catch (e) {\n\t}\n};\nvar generatorFunc = getGeneratorFunc();\nvar GeneratorFunction = generatorFunc ? getProto(generatorFunc) : {};\n\nmodule.exports = function isGeneratorFunction(fn) {\n\tif (typeof fn !== 'function') {\n\t\treturn false;\n\t}\n\tif (isFnRegex.test(fnToStr.call(fn))) {\n\t\treturn true;\n\t}\n\tif (!hasToStringTag) {\n\t\tvar str = toStr.call(fn);\n\t\treturn str === '[object GeneratorFunction]';\n\t}\n\treturn getProto(fn) === GeneratorFunction;\n};\n","// Currently in sync with Node.js lib/internal/util/types.js\n// https://github.com/nodejs/node/commit/112cc7c27551254aa2b17098fb774867f05ed0d9\n\n'use strict';\n\nvar isBuffer = require('./isBuffer');\n\nvar isArgumentsObject = require('is-arguments');\nvar isGeneratorFunction = require('is-generator-function');\n\nfunction uncurryThis(f) {\n  return f.call.bind(f);\n}\n\nvar BigIntSupported = typeof BigInt !== 'undefined';\nvar SymbolSupported = typeof Symbol !== 'undefined';\nvar SymbolToStringTagSupported = SymbolSupported && typeof Symbol.toStringTag !== 'undefined';\nvar Uint8ArraySupported = typeof Uint8Array !== 'undefined';\nvar ArrayBufferSupported = typeof ArrayBuffer !== 'undefined';\n\nif (Uint8ArraySupported && SymbolToStringTagSupported) {\n  var TypedArrayPrototype = Object.getPrototypeOf(Uint8Array.prototype);\n\n  var TypedArrayProto_toStringTag =\n      uncurryThis(\n        Object.getOwnPropertyDescriptor(TypedArrayPrototype,\n                                        Symbol.toStringTag).get);\n\n}\n\nvar ObjectToString = uncurryThis(Object.prototype.toString);\n\nvar numberValue = uncurryThis(Number.prototype.valueOf);\nvar stringValue = uncurryThis(String.prototype.valueOf);\nvar booleanValue = uncurryThis(Boolean.prototype.valueOf);\n\nif (BigIntSupported) {\n  var bigIntValue = uncurryThis(BigInt.prototype.valueOf);\n}\n\nif (SymbolSupported) {\n  var symbolValue = uncurryThis(Symbol.prototype.valueOf);\n}\n\nfunction checkBoxedPrimitive(value, prototypeValueOf) {\n  if (typeof value !== 'object') {\n    return false;\n  }\n  try {\n    prototypeValueOf(value);\n    return true;\n  } catch(e) {\n    return false;\n  }\n}\n\nexports.isArgumentsObject = isArgumentsObject;\n\nexports.isGeneratorFunction = isGeneratorFunction;\n\n// Taken from here and modified for better browser support\n// https://github.com/sindresorhus/p-is-promise/blob/cda35a513bda03f977ad5cde3a079d237e82d7ef/index.js\nfunction isPromise(input) {\n\treturn (\n\t\t(\n\t\t\ttypeof Promise !== 'undefined' &&\n\t\t\tinput instanceof Promise\n\t\t) ||\n\t\t(\n\t\t\tinput !== null &&\n\t\t\ttypeof input === 'object' &&\n\t\t\ttypeof input.then === 'function' &&\n\t\t\ttypeof input.catch === 'function'\n\t\t)\n\t);\n}\nexports.isPromise = isPromise;\n\nfunction isArrayBufferView(value) {\n  if (ArrayBufferSupported && ArrayBuffer.isView) {\n    return ArrayBuffer.isView(value);\n  }\n\n  return (\n    isTypedArray(value) ||\n    isDataView(value)\n  );\n}\nexports.isArrayBufferView = isArrayBufferView;\n\nfunction isTypedArray(value) {\n  if (Uint8ArraySupported && SymbolToStringTagSupported) {\n    return TypedArrayProto_toStringTag(value) !== undefined;\n  } else {\n    return (\n      isUint8Array(value) ||\n      isUint8ClampedArray(value) ||\n      isUint16Array(value) ||\n      isUint32Array(value) ||\n      isInt8Array(value) ||\n      isInt16Array(value) ||\n      isInt32Array(value) ||\n      isFloat32Array(value) ||\n      isFloat64Array(value) ||\n      isBigInt64Array(value) ||\n      isBigUint64Array(value)\n    );\n  }\n}\nexports.isTypedArray = isTypedArray;\n\nfunction isUint8Array(value) {\n  if (Uint8ArraySupported && SymbolToStringTagSupported) {\n    return TypedArrayProto_toStringTag(value) === 'Uint8Array';\n  } else {\n    return (\n      ObjectToString(value) === '[object Uint8Array]' ||\n      // If it's a Buffer instance _and_ has a `.buffer` property,\n      // this is an ArrayBuffer based buffer; thus it's an Uint8Array\n      // (Old Node.js had a custom non-Uint8Array implementation)\n      isBuffer(value) && value.buffer !== undefined\n    );\n  }\n}\nexports.isUint8Array = isUint8Array;\n\nfunction isUint8ClampedArray(value) {\n  if (Uint8ArraySupported && SymbolToStringTagSupported) {\n    return TypedArrayProto_toStringTag(value) === 'Uint8ClampedArray';\n  } else {\n    return ObjectToString(value) === '[object Uint8ClampedArray]';\n  }\n}\nexports.isUint8ClampedArray = isUint8ClampedArray;\n\nfunction isUint16Array(value) {\n  if (Uint8ArraySupported && SymbolToStringTagSupported) {\n    return TypedArrayProto_toStringTag(value) === 'Uint16Array';\n  } else {\n    return ObjectToString(value) === '[object Uint16Array]';\n  }\n}\nexports.isUint16Array = isUint16Array;\n\nfunction isUint32Array(value) {\n  if (Uint8ArraySupported && SymbolToStringTagSupported) {\n    return TypedArrayProto_toStringTag(value) === 'Uint32Array';\n  } else {\n    return ObjectToString(value) === '[object Uint32Array]';\n  }\n}\nexports.isUint32Array = isUint32Array;\n\nfunction isInt8Array(value) {\n  if (Uint8ArraySupported && SymbolToStringTagSupported) {\n    return TypedArrayProto_toStringTag(value) === 'Int8Array';\n  } else {\n    return ObjectToString(value) === '[object Int8Array]';\n  }\n}\nexports.isInt8Array = isInt8Array;\n\nfunction isInt16Array(value) {\n  if (Uint8ArraySupported && SymbolToStringTagSupported) {\n    return TypedArrayProto_toStringTag(value) === 'Int16Array';\n  } else {\n    return ObjectToString(value) === '[object Int16Array]';\n  }\n}\nexports.isInt16Array = isInt16Array;\n\nfunction isInt32Array(value) {\n  if (Uint8ArraySupported && SymbolToStringTagSupported) {\n    return TypedArrayProto_toStringTag(value) === 'Int32Array';\n  } else {\n    return ObjectToString(value) === '[object Int32Array]';\n  }\n}\nexports.isInt32Array = isInt32Array;\n\nfunction isFloat32Array(value) {\n  if (Uint8ArraySupported && SymbolToStringTagSupported) {\n    return TypedArrayProto_toStringTag(value) === 'Float32Array';\n  } else {\n    return ObjectToString(value) === '[object Float32Array]';\n  }\n}\nexports.isFloat32Array = isFloat32Array;\n\nfunction isFloat64Array(value) {\n  if (Uint8ArraySupported && SymbolToStringTagSupported) {\n    return TypedArrayProto_toStringTag(value) === 'Float64Array';\n  } else {\n    return ObjectToString(value) === '[object Float64Array]';\n  }\n}\nexports.isFloat64Array = isFloat64Array;\n\nfunction isBigInt64Array(value) {\n  if (Uint8ArraySupported && SymbolToStringTagSupported) {\n    return TypedArrayProto_toStringTag(value) === 'BigInt64Array';\n  } else {\n    return ObjectToString(value) === '[object BigInt64Array]';\n  }\n}\nexports.isBigInt64Array = isBigInt64Array;\n\nfunction isBigUint64Array(value) {\n  if (Uint8ArraySupported && SymbolToStringTagSupported) {\n    return TypedArrayProto_toStringTag(value) === 'BigUint64Array';\n  } else {\n    return ObjectToString(value) === '[object BigUint64Array]';\n  }\n}\nexports.isBigUint64Array = isBigUint64Array;\n\nfunction isMapToString(value) {\n  return ObjectToString(value) === '[object Map]';\n}\nisMapToString.working = (\n  typeof Map !== 'undefined' &&\n  isMapToString(new Map())\n);\n\nfunction isMap(value) {\n  if (typeof Map === 'undefined') {\n    return false;\n  }\n\n  return isMapToString.working\n    ? isMapToString(value)\n    : value instanceof Map;\n}\nexports.isMap = isMap;\n\nfunction isSetToString(value) {\n  return ObjectToString(value) === '[object Set]';\n}\nisSetToString.working = (\n  typeof Set !== 'undefined' &&\n  isSetToString(new Set())\n);\nfunction isSet(value) {\n  if (typeof Set === 'undefined') {\n    return false;\n  }\n\n  return isSetToString.working\n    ? isSetToString(value)\n    : value instanceof Set;\n}\nexports.isSet = isSet;\n\nfunction isWeakMapToString(value) {\n  return ObjectToString(value) === '[object WeakMap]';\n}\nisWeakMapToString.working = (\n  typeof WeakMap !== 'undefined' &&\n  isWeakMapToString(new WeakMap())\n);\nfunction isWeakMap(value) {\n  if (typeof WeakMap === 'undefined') {\n    return false;\n  }\n\n  return isWeakMapToString.working\n    ? isWeakMapToString(value)\n    : value instanceof WeakMap;\n}\nexports.isWeakMap = isWeakMap;\n\nfunction isWeakSetToString(value) {\n  return ObjectToString(value) === '[object WeakSet]';\n}\nisWeakSetToString.working = (\n  typeof WeakSet !== 'undefined' &&\n  isWeakSetToString(new WeakSet())\n);\nfunction isWeakSet(value) {\n  return isWeakSetToString(value);\n  if (typeof WeakSet === 'undefined') {\n    return false;\n  }\n\n  return isWeakSetToString.working\n    ? isWeakSetToString(value)\n    : value instanceof WeakSet;\n}\nexports.isWeakSet = isWeakSet;\n\nfunction isArrayBufferToString(value) {\n  return ObjectToString(value) === '[object ArrayBuffer]';\n}\nisArrayBufferToString.working = (\n  typeof ArrayBuffer !== 'undefined' &&\n  isArrayBufferToString(new ArrayBuffer())\n);\nfunction isArrayBuffer(value) {\n  if (typeof ArrayBuffer === 'undefined') {\n    return false;\n  }\n\n  return isArrayBufferToString.working\n    ? isArrayBufferToString(value)\n    : value instanceof ArrayBuffer;\n}\nexports.isArrayBuffer = isArrayBuffer;\n\nfunction isDataViewToString(value) {\n  return ObjectToString(value) === '[object DataView]';\n}\nisDataViewToString.working = (\n  typeof ArrayBuffer !== 'undefined' &&\n  typeof DataView !== 'undefined' &&\n  isDataViewToString(new DataView(new ArrayBuffer(1), 0, 1))\n);\nfunction isDataView(value) {\n  if (typeof DataView === 'undefined') {\n    return false;\n  }\n\n  return isDataViewToString.working\n    ? isDataViewToString(value)\n    : value instanceof DataView;\n}\nexports.isDataView = isDataView;\n\nfunction isSharedArrayBufferToString(value) {\n  return ObjectToString(value) === '[object SharedArrayBuffer]';\n}\nisSharedArrayBufferToString.working = (\n  typeof SharedArrayBuffer !== 'undefined' &&\n  isSharedArrayBufferToString(new SharedArrayBuffer())\n);\nfunction isSharedArrayBuffer(value) {\n  if (typeof SharedArrayBuffer === 'undefined') {\n    return false;\n  }\n\n  return isSharedArrayBufferToString.working\n    ? isSharedArrayBufferToString(value)\n    : value instanceof SharedArrayBuffer;\n}\nexports.isSharedArrayBuffer = isSharedArrayBuffer;\n\nfunction isAsyncFunction(value) {\n  return ObjectToString(value) === '[object AsyncFunction]';\n}\nexports.isAsyncFunction = isAsyncFunction;\n\nfunction isMapIterator(value) {\n  return ObjectToString(value) === '[object Map Iterator]';\n}\nexports.isMapIterator = isMapIterator;\n\nfunction isSetIterator(value) {\n  return ObjectToString(value) === '[object Set Iterator]';\n}\nexports.isSetIterator = isSetIterator;\n\nfunction isGeneratorObject(value) {\n  return ObjectToString(value) === '[object Generator]';\n}\nexports.isGeneratorObject = isGeneratorObject;\n\nfunction isWebAssemblyCompiledModule(value) {\n  return ObjectToString(value) === '[object WebAssembly.Module]';\n}\nexports.isWebAssemblyCompiledModule = isWebAssemblyCompiledModule;\n\nfunction isNumberObject(value) {\n  return checkBoxedPrimitive(value, numberValue);\n}\nexports.isNumberObject = isNumberObject;\n\nfunction isStringObject(value) {\n  return checkBoxedPrimitive(value, stringValue);\n}\nexports.isStringObject = isStringObject;\n\nfunction isBooleanObject(value) {\n  return checkBoxedPrimitive(value, booleanValue);\n}\nexports.isBooleanObject = isBooleanObject;\n\nfunction isBigIntObject(value) {\n  return BigIntSupported && checkBoxedPrimitive(value, bigIntValue);\n}\nexports.isBigIntObject = isBigIntObject;\n\nfunction isSymbolObject(value) {\n  return SymbolSupported && checkBoxedPrimitive(value, symbolValue);\n}\nexports.isSymbolObject = isSymbolObject;\n\nfunction isBoxedPrimitive(value) {\n  return (\n    isNumberObject(value) ||\n    isStringObject(value) ||\n    isBooleanObject(value) ||\n    isBigIntObject(value) ||\n    isSymbolObject(value)\n  );\n}\nexports.isBoxedPrimitive = isBoxedPrimitive;\n\nfunction isAnyArrayBuffer(value) {\n  return Uint8ArraySupported && (\n    isArrayBuffer(value) ||\n    isSharedArrayBuffer(value)\n  );\n}\nexports.isAnyArrayBuffer = isAnyArrayBuffer;\n\n['isProxy', 'isExternal', 'isModuleNamespaceObject'].forEach(function(method) {\n  Object.defineProperty(exports, method, {\n    enumerable: false,\n    value: function() {\n      throw new Error(method + ' is not supported in userland');\n    }\n  });\n});\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors ||\n  function getOwnPropertyDescriptors(obj) {\n    var keys = Object.keys(obj);\n    var descriptors = {};\n    for (var i = 0; i < keys.length; i++) {\n      descriptors[keys[i]] = Object.getOwnPropertyDescriptor(obj, keys[i]);\n    }\n    return descriptors;\n  };\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  if (typeof process !== 'undefined' && process.noDeprecation === true) {\n    return fn;\n  }\n\n  // Allow for deprecating things in the process of starting up.\n  if (typeof process === 'undefined') {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnvRegex = /^$/;\n\nif (process.env.NODE_DEBUG) {\n  var debugEnv = process.env.NODE_DEBUG;\n  debugEnv = debugEnv.replace(/[|\\\\{}()[\\]^$+?.]/g, '\\\\$&')\n    .replace(/\\*/g, '.*')\n    .replace(/,/g, '$|^')\n    .toUpperCase();\n  debugEnvRegex = new RegExp('^' + debugEnv + '$', 'i');\n}\nexports.debuglog = function(set) {\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (debugEnvRegex.test(set)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nexports.types = require('./support/types');\n\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\nexports.types.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\nexports.types.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\nexports.types.isNativeError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nvar kCustomPromisifiedSymbol = typeof Symbol !== 'undefined' ? Symbol('util.promisify.custom') : undefined;\n\nexports.promisify = function promisify(original) {\n  if (typeof original !== 'function')\n    throw new TypeError('The \"original\" argument must be of type Function');\n\n  if (kCustomPromisifiedSymbol && original[kCustomPromisifiedSymbol]) {\n    var fn = original[kCustomPromisifiedSymbol];\n    if (typeof fn !== 'function') {\n      throw new TypeError('The \"util.promisify.custom\" argument must be of type Function');\n    }\n    Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n      value: fn, enumerable: false, writable: false, configurable: true\n    });\n    return fn;\n  }\n\n  function fn() {\n    var promiseResolve, promiseReject;\n    var promise = new Promise(function (resolve, reject) {\n      promiseResolve = resolve;\n      promiseReject = reject;\n    });\n\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n    args.push(function (err, value) {\n      if (err) {\n        promiseReject(err);\n      } else {\n        promiseResolve(value);\n      }\n    });\n\n    try {\n      original.apply(this, args);\n    } catch (err) {\n      promiseReject(err);\n    }\n\n    return promise;\n  }\n\n  Object.setPrototypeOf(fn, Object.getPrototypeOf(original));\n\n  if (kCustomPromisifiedSymbol) Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n    value: fn, enumerable: false, writable: false, configurable: true\n  });\n  return Object.defineProperties(\n    fn,\n    getOwnPropertyDescriptors(original)\n  );\n}\n\nexports.promisify.custom = kCustomPromisifiedSymbol\n\nfunction callbackifyOnRejected(reason, cb) {\n  // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).\n  // Because `null` is a special error value in callbacks which means \"no error\n  // occurred\", we error-wrap so the callback consumer can distinguish between\n  // \"the promise rejected with null\" or \"the promise fulfilled with undefined\".\n  if (!reason) {\n    var newReason = new Error('Promise was rejected with a falsy value');\n    newReason.reason = reason;\n    reason = newReason;\n  }\n  return cb(reason);\n}\n\nfunction callbackify(original) {\n  if (typeof original !== 'function') {\n    throw new TypeError('The \"original\" argument must be of type Function');\n  }\n\n  // We DO NOT return the promise as it gives the user a false sense that\n  // the promise is actually somehow related to the callback's execution\n  // and that the callback throwing will reject the promise.\n  function callbackified() {\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n\n    var maybeCb = args.pop();\n    if (typeof maybeCb !== 'function') {\n      throw new TypeError('The last argument must be of type Function');\n    }\n    var self = this;\n    var cb = function() {\n      return maybeCb.apply(self, arguments);\n    };\n    // In true node style we process the callback on `nextTick` with all the\n    // implications (stack, `uncaughtException`, `async_hooks`)\n    original.apply(this, args)\n      .then(function(ret) { process.nextTick(cb.bind(null, null, ret)) },\n            function(rej) { process.nextTick(callbackifyOnRejected.bind(null, rej, cb)) });\n  }\n\n  Object.setPrototypeOf(callbackified, Object.getPrototypeOf(original));\n  Object.defineProperties(callbackified,\n                          getOwnPropertyDescriptors(original));\n  return callbackified;\n}\nexports.callbackify = callbackify;\n","/*\n * Copyright 2015 Red Hat Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nvar util = require('util');\n\nfunction ProtocolError(message) {\n    Error.call(this);\n    this.message = message;\n    this.name = 'ProtocolError';\n}\nutil.inherits(ProtocolError, Error);\n\nfunction TypeError(message) {\n    ProtocolError.call(this, message);\n    this.message = message;\n    this.name = 'TypeError';\n}\n\nutil.inherits(TypeError, ProtocolError);\n\nfunction ConnectionError(message, condition, connection) {\n    Error.call(this, message);\n    this.message = message;\n    this.name = 'ConnectionError';\n    this.condition = condition;\n    this.description = message;\n    this.connection = connection;\n}\n\nutil.inherits(ConnectionError, Error);\n\nConnectionError.prototype.toJSON = function () {\n    return {\n        type: this.name,\n        code: this.condition,\n        message: this.description\n    };\n};\n\nmodule.exports = {\n    ProtocolError: ProtocolError,\n    TypeError: TypeError,\n    ConnectionError: ConnectionError\n};\n","/*\n * Copyright 2015 Red Hat Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nvar errors = require('./errors.js');\n\nvar util = {};\n\nutil.allocate_buffer = function (size) {\n    return Buffer.alloc ? Buffer.alloc(size) : new Buffer(size);\n};\n\nutil.generate_uuid = function () {\n    return util.uuid_to_string(util.uuid4());\n};\n\nutil.uuid4 = function () {\n    var bytes = util.allocate_buffer(16);\n    for (var i = 0; i < bytes.length; i++) {\n        bytes[i] = Math.random()*255|0;\n    }\n\n    // From RFC4122, the version bits are set to 0100\n    bytes[7] &= 0x0F;\n    bytes[7] |= 0x40;\n\n    // From RFC4122, the top two bits of byte 8 get set to 01\n    bytes[8] &= 0x3F;\n    bytes[8] |= 0x80;\n\n    return bytes;\n};\n\n\nutil.uuid_to_string = function (buffer) {\n    if (buffer.length === 16) {\n        var chunks = [buffer.slice(0, 4), buffer.slice(4, 6), buffer.slice(6, 8), buffer.slice(8, 10), buffer.slice(10, 16)];\n        return chunks.map(function (b) { return b.toString('hex'); }).join('-');\n    } else {\n        throw new errors.TypeError('Not a UUID, expecting 16 byte buffer');\n    }\n};\n\nvar parse_uuid = /^([0-9a-f]{8})-([0-9a-f]{4})-([0-9a-f]{4})-([0-9a-f]{4})-([0-9a-f]{12})$/;\n\nutil.string_to_uuid = function (uuid_string) {\n    var parts = parse_uuid.exec(uuid_string.toLowerCase());\n    if (parts) {\n        return Buffer.from(parts.slice(1).join(''), 'hex');\n    } else {\n        throw new errors.TypeError('Not a valid UUID string: ' + uuid_string);\n    }\n};\n\nutil.clone = function (o) {\n    var copy = Object.create(o.prototype || {});\n    var names = Object.getOwnPropertyNames(o);\n    for (var i = 0; i < names.length; i++) {\n        var key = names[i];\n        copy[key] = o[key];\n    }\n    return copy;\n};\n\nutil.and = function (f, g) {\n    if (g === undefined) return f;\n    return function (o) {\n        return f(o) && g(o);\n    };\n};\n\nutil.is_sender = function (o) { return o.is_sender(); };\nutil.is_receiver = function (o) { return o.is_receiver(); };\nutil.sender_filter = function (filter) { return util.and(util.is_sender, filter); };\nutil.receiver_filter = function (filter) { return util.and(util.is_receiver, filter); };\n\nutil.is_defined = function (field) {\n    return field !== undefined && field !== null;\n};\n\nmodule.exports = util;\n","/*\n * Copyright 2015 Red Hat Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nvar errors = require('./errors.js');\nvar util = require('./util.js');\n\nvar CAT_FIXED = 1;\nvar CAT_VARIABLE = 2;\nvar CAT_COMPOUND = 3;\nvar CAT_ARRAY = 4;\n\nfunction Typed(type, value, code, descriptor) {\n    this.type = type;\n    this.value = value;\n    if (code) {\n        this.array_constructor = {'typecode':code};\n        if (descriptor) {\n            this.array_constructor.descriptor = descriptor;\n        }\n    }\n}\n\nTyped.prototype.toString = function() {\n    return this.value ? this.value.toString() : null;\n};\n\nTyped.prototype.toLocaleString = function() {\n    return this.value ? this.value.toLocaleString() : null;\n};\n\nTyped.prototype.valueOf = function() {\n    return this.value;\n};\n\nTyped.prototype.toJSON = function() {\n    return this.value && this.value.toJSON ? this.value.toJSON() : this.value;\n};\n\nfunction TypeDesc(name, typecode, props, empty_value) {\n    this.name = name;\n    this.typecode = typecode;\n    var subcategory = typecode >>> 4;\n    switch (subcategory) {\n    case 0x4:\n        this.width = 0;\n        this.category = CAT_FIXED;\n        break;\n    case 0x5:\n        this.width = 1;\n        this.category = CAT_FIXED;\n        break;\n    case 0x6:\n        this.width = 2;\n        this.category = CAT_FIXED;\n        break;\n    case 0x7:\n        this.width = 4;\n        this.category = CAT_FIXED;\n        break;\n    case 0x8:\n        this.width = 8;\n        this.category = CAT_FIXED;\n        break;\n    case 0x9:\n        this.width = 16;\n        this.category = CAT_FIXED;\n        break;\n    case 0xA:\n        this.width = 1;\n        this.category = CAT_VARIABLE;\n        break;\n    case 0xB:\n        this.width = 4;\n        this.category = CAT_VARIABLE;\n        break;\n    case 0xC:\n        this.width = 1;\n        this.category = CAT_COMPOUND;\n        break;\n    case 0xD:\n        this.width = 4;\n        this.category = CAT_COMPOUND;\n        break;\n    case 0xE:\n        this.width = 1;\n        this.category = CAT_ARRAY;\n        break;\n    case 0xF:\n        this.width = 4;\n        this.category = CAT_ARRAY;\n        break;\n    default:\n        //can't happen\n        break;\n    }\n\n    if (props) {\n        if (props.read) {\n            this.read = props.read;\n        }\n        if (props.write) {\n            this.write = props.write;\n        }\n        if (props.encoding) {\n            this.encoding = props.encoding;\n        }\n    }\n\n    var t = this;\n    if (subcategory === 0x4) {\n        // 'empty' types don't take a value\n        this.create = function () {\n            return new Typed(t, empty_value);\n        };\n    } else if (subcategory === 0xE || subcategory === 0xF) {\n        this.create = function (v, code, descriptor) {\n            return new Typed(t, v, code, descriptor);\n        };\n    } else {\n        this.create = function (v) {\n            return new Typed(t, v);\n        };\n    }\n}\n\nTypeDesc.prototype.toString = function () {\n    return this.name + '#' + hex(this.typecode);\n};\n\nfunction hex(i) {\n    return Number(i).toString(16);\n}\n\nvar types = {'by_code':{}};\nObject.defineProperty(types, 'MAX_UINT', {value: 4294967295, writable: false, configurable: false});\nObject.defineProperty(types, 'MAX_USHORT', {value: 65535, writable: false, configurable: false});\n\nfunction define_type(name, typecode, annotations, empty_value) {\n    var t = new TypeDesc(name, typecode, annotations, empty_value);\n    t.create.typecode = t.typecode;//hack\n    types.by_code[t.typecode] = t;\n    types[name] = t.create;\n}\n\nfunction buffer_uint8_ops() {\n    return {\n        'read': function (buffer, offset) { return buffer.readUInt8(offset); },\n        'write': function (buffer, value, offset) { buffer.writeUInt8(value, offset); }\n    };\n}\n\nfunction buffer_uint16be_ops() {\n    return {\n        'read': function (buffer, offset) { return buffer.readUInt16BE(offset); },\n        'write': function (buffer, value, offset) { buffer.writeUInt16BE(value, offset); }\n    };\n}\n\nfunction buffer_uint32be_ops() {\n    return {\n        'read': function (buffer, offset) { return buffer.readUInt32BE(offset); },\n        'write': function (buffer, value, offset) { buffer.writeUInt32BE(value, offset); }\n    };\n}\n\nfunction buffer_int8_ops() {\n    return {\n        'read': function (buffer, offset) { return buffer.readInt8(offset); },\n        'write': function (buffer, value, offset) { buffer.writeInt8(value, offset); }\n    };\n}\n\nfunction buffer_int16be_ops() {\n    return {\n        'read': function (buffer, offset) { return buffer.readInt16BE(offset); },\n        'write': function (buffer, value, offset) { buffer.writeInt16BE(value, offset); }\n    };\n}\n\nfunction buffer_int32be_ops() {\n    return {\n        'read': function (buffer, offset) { return buffer.readInt32BE(offset); },\n        'write': function (buffer, value, offset) { buffer.writeInt32BE(value, offset); }\n    };\n}\n\nfunction buffer_floatbe_ops() {\n    return {\n        'read': function (buffer, offset) { return buffer.readFloatBE(offset); },\n        'write': function (buffer, value, offset) { buffer.writeFloatBE(value, offset); }\n    };\n}\n\nfunction buffer_doublebe_ops() {\n    return {\n        'read': function (buffer, offset) { return buffer.readDoubleBE(offset); },\n        'write': function (buffer, value, offset) { buffer.writeDoubleBE(value, offset); }\n    };\n}\n\nvar MAX_UINT = 4294967296; // 2^32\nvar MIN_INT = -2147483647;\nfunction write_ulong(buffer, value, offset) {\n    if ((typeof value) === 'number' || value instanceof Number) {\n        var hi = Math.floor(value / MAX_UINT);\n        var lo = value % MAX_UINT;\n        buffer.writeUInt32BE(hi, offset);\n        buffer.writeUInt32BE(lo, offset + 4);\n    } else {\n        value.copy(buffer, offset);\n    }\n}\n\nfunction read_ulong(buffer, offset) {\n    var hi = buffer.readUInt32BE(offset);\n    var lo = buffer.readUInt32BE(offset + 4);\n    if (hi < 2097153) {\n        return hi * MAX_UINT + lo;\n    } else {\n        return buffer.slice(offset, offset + 8);\n    }\n}\n\nfunction write_long(buffer, value, offset) {\n    if ((typeof value) === 'number' || value instanceof Number) {\n        var abs = Math.abs(value);\n        var hi = Math.floor(abs / MAX_UINT);\n        var lo = abs % MAX_UINT;\n        buffer.writeInt32BE(hi, offset);\n        buffer.writeUInt32BE(lo, offset + 4);\n        if (value < 0) {\n            var carry = 1;\n            for (var i = 0; i < 8; i++) {\n                var index = offset + (7 - i);\n                var v = (buffer[index] ^ 0xFF) + carry;\n                buffer[index] = v & 0xFF;\n                carry = v >> 8;\n            }\n        }\n    } else {\n        value.copy(buffer, offset);\n    }\n}\n\nfunction read_long(buffer, offset) {\n    var hi = buffer.readInt32BE(offset);\n    var lo = buffer.readUInt32BE(offset + 4);\n    if (hi < 2097153 && hi > -2097153) {\n        return hi * MAX_UINT + lo;\n    } else {\n        return buffer.slice(offset, offset + 8);\n    }\n}\n\ndefine_type('Null', 0x40, undefined, null);\ndefine_type('Boolean', 0x56, buffer_uint8_ops());\ndefine_type('True', 0x41, undefined, true);\ndefine_type('False', 0x42, undefined, false);\ndefine_type('Ubyte', 0x50, buffer_uint8_ops());\ndefine_type('Ushort', 0x60, buffer_uint16be_ops());\ndefine_type('Uint', 0x70, buffer_uint32be_ops());\ndefine_type('SmallUint', 0x52, buffer_uint8_ops());\ndefine_type('Uint0', 0x43, undefined, 0);\ndefine_type('Ulong', 0x80, {'write':write_ulong, 'read':read_ulong});\ndefine_type('SmallUlong', 0x53, buffer_uint8_ops());\ndefine_type('Ulong0', 0x44, undefined, 0);\ndefine_type('Byte', 0x51, buffer_int8_ops());\ndefine_type('Short', 0x61, buffer_int16be_ops());\ndefine_type('Int', 0x71, buffer_int32be_ops());\ndefine_type('SmallInt', 0x54, buffer_int8_ops());\ndefine_type('Long', 0x81, {'write':write_long, 'read':read_long});\ndefine_type('SmallLong', 0x55, buffer_int8_ops());\ndefine_type('Float', 0x72, buffer_floatbe_ops());\ndefine_type('Double', 0x82, buffer_doublebe_ops());\ndefine_type('Decimal32', 0x74);\ndefine_type('Decimal64', 0x84);\ndefine_type('Decimal128', 0x94);\ndefine_type('CharUTF32', 0x73, buffer_uint32be_ops());\ndefine_type('Timestamp', 0x83, {'write':write_long, 'read':read_long});//TODO: convert to/from Date\ndefine_type('Uuid', 0x98);//TODO: convert to/from stringified form?\ndefine_type('Vbin8', 0xa0);\ndefine_type('Vbin32', 0xb0);\ndefine_type('Str8', 0xa1, {'encoding':'utf8'});\ndefine_type('Str32', 0xb1, {'encoding':'utf8'});\ndefine_type('Sym8', 0xa3, {'encoding':'ascii'});\ndefine_type('Sym32', 0xb3, {'encoding':'ascii'});\ndefine_type('List0', 0x45, undefined, []);\ndefine_type('List8', 0xc0);\ndefine_type('List32', 0xd0);\ndefine_type('Map8', 0xc1);\ndefine_type('Map32', 0xd1);\ndefine_type('Array8', 0xe0);\ndefine_type('Array32', 0xf0);\n\nfunction is_one_of(o, typelist) {\n    for (var i = 0; i < typelist.length; i++) {\n        if (o.type.typecode === typelist[i].typecode) return true;\n    }\n    return false;\n}\nfunction buffer_zero(b, len, neg) {\n    for (var i = 0; i < len && i < b.length; i++) {\n        if (b[i] !== (neg ? 0xff : 0)) return false;\n    }\n    return true;\n}\ntypes.is_ulong = function(o) {\n    return is_one_of(o, [types.Ulong, types.Ulong0, types.SmallUlong]);\n};\ntypes.is_string = function(o) {\n    return is_one_of(o, [types.Str8, types.Str32]);\n};\ntypes.is_symbol = function(o) {\n    return is_one_of(o, [types.Sym8, types.Sym32]);\n};\ntypes.is_list = function(o) {\n    return is_one_of(o, [types.List0, types.List8, types.List32]);\n};\ntypes.is_map = function(o) {\n    return is_one_of(o, [types.Map8, types.Map32]);\n};\n\ntypes.wrap_boolean = function(v) {\n    return v ? types.True() : types.False();\n};\ntypes.wrap_ulong = function(l) {\n    if (Buffer.isBuffer(l)) {\n        if (buffer_zero(l, 8, false)) return types.Ulong0();\n        return buffer_zero(l, 7, false) ? types.SmallUlong(l[7]) : types.Ulong(l);\n    } else {\n        if (l === 0) return types.Ulong0();\n        else return l > 255 ? types.Ulong(l) : types.SmallUlong(l);\n    }\n};\ntypes.wrap_uint = function(l) {\n    if (l === 0) return types.Uint0();\n    else return l > 255 ? types.Uint(l) : types.SmallUint(l);\n};\ntypes.wrap_ushort = function(l) {\n    return types.Ushort(l);\n};\ntypes.wrap_ubyte = function(l) {\n    return types.Ubyte(l);\n};\ntypes.wrap_long = function(l) {\n    if (Buffer.isBuffer(l)) {\n        var negFlag = (l[0] & 0x80) !== 0;\n        if (buffer_zero(l, 7, negFlag) && (l[7] & 0x80) === (negFlag ? 0x80 : 0)) {\n            return types.SmallLong(negFlag ? -((l[7] ^ 0xff) + 1) : l[7]);\n        }\n        return types.Long(l);\n    } else {\n        return l > 127 || l < -128 ? types.Long(l) : types.SmallLong(l);\n    }\n};\ntypes.wrap_int = function(l) {\n    return l > 127 || l < -128 ? types.Int(l) : types.SmallInt(l);\n};\ntypes.wrap_short = function(l) {\n    return types.Short(l);\n};\ntypes.wrap_byte = function(l) {\n    return types.Byte(l);\n};\ntypes.wrap_float = function(l) {\n    return types.Float(l);\n};\ntypes.wrap_double = function(l) {\n    return types.Double(l);\n};\ntypes.wrap_timestamp = function(l) {\n    return types.Timestamp(l);\n};\ntypes.wrap_char = function(v) {\n    return types.CharUTF32(v);\n};\ntypes.wrap_uuid = function(v) {\n    return types.Uuid(v);\n};\ntypes.wrap_binary = function (s) {\n    return s.length > 255 ? types.Vbin32(s) : types.Vbin8(s);\n};\ntypes.wrap_string = function (s) {\n    return Buffer.from(s).length > 255 ? types.Str32(s) : types.Str8(s);\n};\ntypes.wrap_symbol = function (s) {\n    return Buffer.from(s).length > 255 ? types.Sym32(s) : types.Sym8(s);\n};\ntypes.wrap_list = function(l) {\n    if (l.length === 0) return types.List0();\n    var items = l.map(types.wrap);\n    return types.List32(items);\n};\ntypes.wrap_map = function(m, key_wrapper) {\n    var items = [];\n    for (var k in m) {\n        items.push(key_wrapper ? key_wrapper(k) : types.wrap(k));\n        items.push(types.wrap(m[k]));\n    }\n    return types.Map32(items);\n};\ntypes.wrap_symbolic_map = function(m) {\n    return types.wrap_map(m, types.wrap_symbol);\n};\ntypes.wrap_array = function(l, code, descriptors) {\n    if (code) {\n        return types.Array32(l, code, descriptors);\n    } else {\n        console.trace('An array must specify a type for its elements');\n        throw new errors.TypeError('An array must specify a type for its elements');\n    }\n};\ntypes.wrap = function(o) {\n    var t = typeof o;\n    if (t === 'string') {\n        return types.wrap_string(o);\n    } else if (t === 'boolean') {\n        return o ? types.True() : types.False();\n    } else if (t === 'number' || o instanceof Number) {\n        if (isNaN(o)) {\n            return types.Null();\n        } else if (Math.floor(o) - o !== 0) {\n            return types.Double(o);\n        } else if (o > 0) {\n            if (o < MAX_UINT) {\n                return types.wrap_uint(o);\n            } else {\n                return types.wrap_ulong(o);\n            }\n        } else {\n            if (o > MIN_INT) {\n                return types.wrap_int(o);\n            } else {\n                return types.wrap_long(o);\n            }\n        }\n    } else if (o instanceof Date) {\n        return types.wrap_timestamp(o.getTime());\n    } else if (o instanceof Typed) {\n        return o;\n    } else if (o instanceof Buffer) {\n        return types.wrap_binary(o);\n    } else if (t === 'undefined' || o === null) {\n        return types.Null();\n    } else if (Array.isArray(o)) {\n        return types.wrap_list(o);\n    } else {\n        return types.wrap_map(o);\n    }\n};\n\ntypes.wrap_described = function(value, descriptor) {\n    var result = types.wrap(value);\n    if (descriptor) {\n        if (typeof descriptor === 'string') {\n            result = types.described(types.wrap_symbol(descriptor), result);\n        } else if (typeof descriptor === 'number' || descriptor instanceof Number) {\n            result = types.described(types.wrap_ulong(descriptor), result);\n        }\n    }\n    return result;\n};\n\ntypes.wrap_message_id = function(o) {\n    var t = typeof o;\n    if (t === 'string') {\n        return types.wrap_string(o);\n    } else if (t === 'number' || o instanceof Number) {\n        return types.wrap_ulong(o);\n    } else if (Buffer.isBuffer(o)) {\n        return types.wrap_uuid(o);\n    } else {\n        //TODO handle uuids\n        throw new errors.TypeError('invalid message id:' + o);\n    }\n};\n\n/**\n * Converts the list of keys and values that comprise an AMQP encoded\n * map into a proper javascript map/object.\n */\nfunction mapify(elements) {\n    var result = {};\n    for (var i = 0; i+1 < elements.length;) {\n        result[elements[i++]] = elements[i++];\n    }\n    return result;\n}\n\nvar by_descriptor = {};\n\ntypes.unwrap_map_simple = function(o) {\n    return mapify(o.value.map(function (i) { return types.unwrap(i, true); }));\n};\n\ntypes.unwrap = function(o, leave_described) {\n    if (o instanceof Typed) {\n        if (o.descriptor) {\n            var c = by_descriptor[o.descriptor.value];\n            if (c) {\n                return new c(o.value);\n            } else if (leave_described) {\n                return o;\n            }\n        }\n        var u = types.unwrap(o.value, true);\n        return types.is_map(o) ? mapify(u) : u;\n    } else if (Array.isArray(o)) {\n        return o.map(function (i) { return types.unwrap(i, true); });\n    } else {\n        return o;\n    }\n};\n\n/*\ntypes.described = function (descriptor, typedvalue) {\n    var o = Object.create(typedvalue);\n    if (descriptor.length) {\n        o.descriptor = descriptor.shift();\n        return types.described(descriptor, o);\n    } else {\n        o.descriptor = descriptor;\n        return o;\n    }\n};\n*/\ntypes.described_nc = function (descriptor, o) {\n    if (descriptor.length) {\n        o.descriptor = descriptor.shift();\n        return types.described(descriptor, o);\n    } else {\n        o.descriptor = descriptor;\n        return o;\n    }\n};\ntypes.described = types.described_nc;\n\nfunction get_type(code) {\n    var type = types.by_code[code];\n    if (!type) {\n        throw new errors.TypeError('Unrecognised typecode: ' + hex(code));\n    }\n    return type;\n}\n\ntypes.Reader = function (buffer) {\n    this.buffer = buffer;\n    this.position = 0;\n};\n\ntypes.Reader.prototype.read_typecode = function () {\n    return this.read_uint(1);\n};\n\ntypes.Reader.prototype.read_uint = function (width) {\n    var current = this.position;\n    this.position += width;\n    if (width === 1) {\n        return this.buffer.readUInt8(current);\n    } else if (width === 2) {\n        return this.buffer.readUInt16BE(current);\n    } else if (width === 4) {\n        return this.buffer.readUInt32BE(current);\n    } else {\n        throw new errors.TypeError('Unexpected width for uint ' + width);\n    }\n};\n\ntypes.Reader.prototype.read_fixed_width = function (type) {\n    var current = this.position;\n    this.position += type.width;\n    if (type.read) {\n        return type.read(this.buffer, current);\n    } else {\n        return this.buffer.slice(current, this.position);\n    }\n};\n\ntypes.Reader.prototype.read_variable_width = function (type) {\n    var size = this.read_uint(type.width);\n    var slice = this.read_bytes(size);\n    return type.encoding ? slice.toString(type.encoding) : slice;\n};\n\ntypes.Reader.prototype.read = function () {\n    var constructor = this.read_constructor();\n    var value = this.read_value(get_type(constructor.typecode));\n    return constructor.descriptor ? types.described_nc(constructor.descriptor, value) : value;\n};\n\ntypes.Reader.prototype.read_constructor = function () {\n    var code = this.read_typecode();\n    if (code === 0x00) {\n        var d = [];\n        d.push(this.read());\n        var c = this.read_constructor();\n        while (c.descriptor) {\n            d.push(c.descriptor);\n            c = this.read_constructor();\n        }\n        return {'typecode': c.typecode, 'descriptor':  d.length === 1 ? d[0] : d};\n    } else {\n        return {'typecode': code};\n    }\n};\n\ntypes.Reader.prototype.read_value = function (type) {\n    if (type.width === 0) {\n        return type.create();\n    } else if (type.category === CAT_FIXED) {\n        return type.create(this.read_fixed_width(type));\n    } else if (type.category === CAT_VARIABLE) {\n        return type.create(this.read_variable_width(type));\n    } else if (type.category === CAT_COMPOUND) {\n        return this.read_compound(type);\n    } else if (type.category === CAT_ARRAY) {\n        return this.read_array(type);\n    } else {\n        throw new errors.TypeError('Invalid category for type: ' + type);\n    }\n};\n\ntypes.Reader.prototype.read_array_items = function (n, type) {\n    var items = [];\n    while (items.length < n) {\n        items.push(this.read_value(type));\n    }\n    return items;\n};\n\ntypes.Reader.prototype.read_n = function (n) {\n    var items = new Array(n);\n    for (var i = 0; i < n; i++) {\n        items[i] = this.read();\n    }\n    return items;\n};\n\ntypes.Reader.prototype.read_size_count = function (width) {\n    return {'size': this.read_uint(width), 'count': this.read_uint(width)};\n};\n\ntypes.Reader.prototype.read_compound = function (type) {\n    var limits = this.read_size_count(type.width);\n    return type.create(this.read_n(limits.count));\n};\n\ntypes.Reader.prototype.read_array = function (type) {\n    var limits = this.read_size_count(type.width);\n    var constructor = this.read_constructor();\n    return type.create(this.read_array_items(limits.count, get_type(constructor.typecode)), constructor.typecode, constructor.descriptor);\n};\n\ntypes.Reader.prototype.toString = function () {\n    var s = 'buffer@' + this.position;\n    if (this.position) s += ': ';\n    for (var i = this.position; i < this.buffer.length; i++) {\n        if (i > 0) s+= ',';\n        s += '0x' + Number(this.buffer[i]).toString(16);\n    }\n    return s;\n};\n\ntypes.Reader.prototype.reset = function () {\n    this.position = 0;\n};\n\ntypes.Reader.prototype.skip = function (bytes) {\n    this.position += bytes;\n};\n\ntypes.Reader.prototype.read_bytes = function (bytes) {\n    var current = this.position;\n    this.position += bytes;\n    return this.buffer.slice(current, this.position);\n};\n\ntypes.Reader.prototype.remaining = function () {\n    return this.buffer.length - this.position;\n};\n\ntypes.Writer = function (buffer) {\n    this.buffer = buffer ? buffer : util.allocate_buffer(1024);\n    this.position = 0;\n};\n\ntypes.Writer.prototype.toBuffer = function () {\n    return this.buffer.slice(0, this.position);\n};\n\nfunction max(a, b) {\n    return a > b ? a : b;\n}\n\ntypes.Writer.prototype.ensure = function (length) {\n    if (this.buffer.length < length) {\n        var bigger = util.allocate_buffer(max(this.buffer.length*2, length));\n        this.buffer.copy(bigger);\n        this.buffer = bigger;\n    }\n};\n\ntypes.Writer.prototype.write_typecode = function (code) {\n    this.write_uint(code, 1);\n};\n\ntypes.Writer.prototype.write_uint = function (value, width) {\n    var current = this.position;\n    this.ensure(this.position + width);\n    this.position += width;\n    if (width === 1) {\n        return this.buffer.writeUInt8(value, current);\n    } else if (width === 2) {\n        return this.buffer.writeUInt16BE(value, current);\n    } else if (width === 4) {\n        return this.buffer.writeUInt32BE(value, current);\n    } else {\n        throw new errors.TypeError('Unexpected width for uint ' + width);\n    }\n};\n\n\ntypes.Writer.prototype.write_fixed_width = function (type, value) {\n    var current = this.position;\n    this.ensure(this.position + type.width);\n    this.position += type.width;\n    if (type.write) {\n        type.write(this.buffer, value, current);\n    } else if (value.copy) {\n        value.copy(this.buffer, current);\n    } else {\n        throw new errors.TypeError('Cannot handle write for ' + type);\n    }\n};\n\ntypes.Writer.prototype.write_variable_width = function (type, value) {\n    var source = type.encoding ? Buffer.from(value, type.encoding) : Buffer.from(value);//TODO: avoid creating new buffers\n    this.write_uint(source.length, type.width);\n    this.write_bytes(source);\n};\n\ntypes.Writer.prototype.write_bytes = function (source) {\n    var current = this.position;\n    this.ensure(this.position + source.length);\n    this.position += source.length;\n    source.copy(this.buffer, current);\n};\n\ntypes.Writer.prototype.write_constructor = function (typecode, descriptor) {\n    if (descriptor) {\n        this.write_typecode(0x00);\n        this.write(descriptor);\n    }\n    this.write_typecode(typecode);\n};\n\ntypes.Writer.prototype.write = function (o) {\n    if (o.type === undefined) {\n        if (o.described) {\n            this.write(o.described());\n        } else {\n            throw new errors.TypeError('Cannot write ' + JSON.stringify(o));\n        }\n    } else {\n        this.write_constructor(o.type.typecode, o.descriptor);\n        this.write_value(o.type, o.value, o.array_constructor);\n    }\n};\n\ntypes.Writer.prototype.write_value = function (type, value, constructor/*for arrays only*/) {\n    if (type.width === 0) {\n        return;//nothing further to do\n    } else if (type.category === CAT_FIXED) {\n        this.write_fixed_width(type, value);\n    } else if (type.category === CAT_VARIABLE) {\n        this.write_variable_width(type, value);\n    } else if (type.category === CAT_COMPOUND) {\n        this.write_compound(type, value);\n    } else if (type.category === CAT_ARRAY) {\n        this.write_array(type, value, constructor);\n    } else {\n        throw new errors.TypeError('Invalid category ' + type.category + ' for type: ' + type);\n    }\n};\n\ntypes.Writer.prototype.backfill_size = function (width, saved) {\n    var gap = this.position - saved;\n    this.position = saved;\n    this.write_uint(gap - width, width);\n    this.position += (gap - width);\n};\n\ntypes.Writer.prototype.write_compound = function (type, value) {\n    var saved = this.position;\n    this.position += type.width;//skip size field\n    this.write_uint(value.length, type.width);//count field\n    for (var i = 0; i < value.length; i++) {\n        if (value[i] === undefined || value[i] === null) {\n            this.write(types.Null());\n        } else {\n            this.write(value[i]);\n        }\n    }\n    this.backfill_size(type.width, saved);\n};\n\ntypes.Writer.prototype.write_array = function (type, value, constructor) {\n    var saved = this.position;\n    this.position += type.width;//skip size field\n    this.write_uint(value.length, type.width);//count field\n    this.write_constructor(constructor.typecode, constructor.descriptor);\n    var ctype = get_type(constructor.typecode);\n    for (var i = 0; i < value.length; i++) {\n        this.write_value(ctype, value[i]);\n    }\n    this.backfill_size(type.width, saved);\n};\n\ntypes.Writer.prototype.toString = function () {\n    var s = 'buffer@' + this.position;\n    if (this.position) s += ': ';\n    for (var i = 0; i < this.position; i++) {\n        if (i > 0) s+= ',';\n        s += ('00' + Number(this.buffer[i]).toString(16)).slice(-2);\n    }\n    return s;\n};\n\ntypes.Writer.prototype.skip = function (bytes) {\n    this.ensure(this.position + bytes);\n    this.position += bytes;\n};\n\ntypes.Writer.prototype.clear = function () {\n    this.buffer.fill(0x00);\n    this.position = 0;\n};\n\ntypes.Writer.prototype.remaining = function () {\n    return this.buffer.length - this.position;\n};\n\n\nfunction get_constructor(typename) {\n    if (typename === 'symbol') {\n        return {typecode:types.Sym8.typecode};\n    }\n    throw new errors.TypeError('TODO: Array of type ' + typename + ' not yet supported');\n}\n\nfunction wrap_field(definition, instance) {\n    if (instance !== undefined && instance !== null) {\n        if (Array.isArray(instance)) {\n            if (!definition.multiple) {\n                throw new errors.TypeError('Field ' + definition.name + ' does not support multiple values, got ' + JSON.stringify(instance));\n            }\n            var constructor = get_constructor(definition.type);\n            return types.wrap_array(instance, constructor.typecode, constructor.descriptor);\n        } else if (definition.type === '*') {\n            return instance;\n        } else {\n            var wrapper = types['wrap_' + definition.type];\n            if (wrapper) {\n                return wrapper(instance);\n            } else {\n                throw new errors.TypeError('No wrapper for field ' + definition.name + ' of type ' + definition.type);\n            }\n        }\n    } else if (definition.mandatory) {\n        throw new errors.TypeError('Field ' + definition.name + ' is mandatory');\n    } else {\n        return types.Null();\n    }\n}\n\nfunction get_accessors(index, field_definition) {\n    var getter;\n    if (field_definition.type === '*') {\n        getter = function() { return this.value[index]; };\n    } else {\n        getter = function() { return types.unwrap(this.value[index]); };\n    }\n    var setter = function(o) { this.value[index] = wrap_field(field_definition, o); };\n    return {'get': getter, 'set': setter, 'enumerable':true, 'configurable':false};\n}\n\ntypes.define_composite = function(def) {\n    var c = function(fields) {\n        this.value = fields ? fields : [];\n    };\n    c.descriptor = {\n        numeric: def.code,\n        symbolic: 'amqp:' + def.name + ':list'\n    };\n    c.prototype.dispatch = function (target, frame) {\n        target['on_' + def.name](frame);\n    };\n    //c.prototype.descriptor = c.descriptor.numeric;\n    //c.prototype = Object.create(types.List8.prototype);\n    for (var i = 0; i < def.fields.length; i++) {\n        var f = def.fields[i];\n        Object.defineProperty(c.prototype, f.name, get_accessors(i, f));\n    }\n    c.toString = function() {\n        return def.name + '#' + Number(def.code).toString(16);\n    };\n    c.prototype.toJSON = function() {\n        var o = {};\n        for (var f in this) {\n            if (f !== 'value' && this[f]) {\n                o[f] = this[f];\n            }\n        }\n        return o;\n    };\n    c.create = function(fields) {\n        var o = new c;\n        for (var f in fields) {\n            o[f] = fields[f];\n        }\n        return o;\n    };\n    c.prototype.described = function() {\n        return types.described_nc(types.wrap_ulong(c.descriptor.numeric), types.wrap_list(this.value));\n    };\n    return c;\n};\n\nfunction add_type(def) {\n    var c = types.define_composite(def);\n    types['wrap_' + def.name] = function (fields) {\n        return c.create(fields).described();\n    };\n    by_descriptor[Number(c.descriptor.numeric).toString(10)] = c;\n    by_descriptor[c.descriptor.symbolic] = c;\n}\n\nadd_type({\n    name: 'error',\n    code: 0x1d,\n    fields: [\n        {name:'condition', type:'symbol', mandatory:true},\n        {name:'description', type:'string'},\n        {name:'info', type:'map'}\n    ]\n});\n\nmodule.exports = types;\n","/*\n * Copyright 2015 Red Hat Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nvar types = require('./types.js');\nvar errors = require('./errors.js');\n\nvar frames = {};\nvar by_descriptor = {};\n\nframes.read_header = function(buffer) {\n    var offset = 4;\n    var header = {};\n    var name = buffer.toString('ascii', 0, offset);\n    if (name !== 'AMQP') {\n        throw new errors.ProtocolError('Invalid protocol header for AMQP ' + name);\n    }\n    header.protocol_id = buffer.readUInt8(offset++);\n    header.major = buffer.readUInt8(offset++);\n    header.minor = buffer.readUInt8(offset++);\n    header.revision = buffer.readUInt8(offset++);\n    //the protocol header is interpreted in different ways for\n    //different versions(!); check some special cases to give clearer\n    //error messages:\n    if (header.protocol_id === 0 && header.major === 0 && header.minor === 9 && header.revision === 1) {\n        throw new errors.ProtocolError('Unsupported AMQP version: 0-9-1');\n    }\n    if (header.protocol_id === 1 && header.major === 1 && header.minor === 0 && header.revision === 10) {\n        throw new errors.ProtocolError('Unsupported AMQP version: 0-10');\n    }\n    if (header.major !== 1 || header.minor !== 0) {\n        throw new errors.ProtocolError('Unsupported AMQP version: ' + JSON.stringify(header));\n    }\n    return header;\n};\nframes.write_header = function(buffer, header) {\n    var offset = 4;\n    buffer.write('AMQP', 0, offset, 'ascii');\n    buffer.writeUInt8(header.protocol_id, offset++);\n    buffer.writeUInt8(header.major, offset++);\n    buffer.writeUInt8(header.minor, offset++);\n    buffer.writeUInt8(header.revision, offset++);\n    return 8;\n};\n//todo: define enumeration for frame types\nframes.TYPE_AMQP = 0x00;\nframes.TYPE_SASL = 0x01;\n\nframes.read_frame = function(buffer) {\n    var reader = new types.Reader(buffer);\n    var frame = {};\n    frame.size = reader.read_uint(4);\n    if (reader.remaining < frame.size) {\n        return null;\n    }\n    var doff = reader.read_uint(1);\n    if (doff < 2) {\n        throw new errors.ProtocolError('Invalid data offset, must be at least 2 was ' + doff);\n    }\n    frame.type = reader.read_uint(1);\n    if (frame.type === frames.TYPE_AMQP) {\n        frame.channel = reader.read_uint(2);\n    } else if (frame.type === frames.TYPE_SASL) {\n        reader.skip(2);\n        frame.channel = 0;\n    } else {\n        throw new errors.ProtocolError('Unknown frame type ' + frame.type);\n    }\n    if (doff > 1) {\n        //ignore any extended header\n        reader.skip(doff * 4 - 8);\n    }\n    if (reader.remaining()) {\n        frame.performative = reader.read();\n        var c = by_descriptor[frame.performative.descriptor.value];\n        if (c) {\n            frame.performative = new c(frame.performative.value);\n        }\n        if (reader.remaining()) {\n            frame.payload = reader.read_bytes(reader.remaining());\n        }\n    }\n    return frame;\n};\n\nframes.write_frame = function(frame) {\n    var writer = new types.Writer();\n    writer.skip(4);//skip size until we know how much we have written\n    writer.write_uint(2, 1);//doff\n    writer.write_uint(frame.type, 1);\n    if (frame.type === frames.TYPE_AMQP) {\n        writer.write_uint(frame.channel, 2);\n    } else if (frame.type === frames.TYPE_SASL) {\n        writer.write_uint(0, 2);\n    } else {\n        throw new errors.ProtocolError('Unknown frame type ' + frame.type);\n    }\n    if (frame.performative) {\n        writer.write(frame.performative);\n        if (frame.payload) {\n            writer.write_bytes(frame.payload);\n        }\n    }\n    var buffer = writer.toBuffer();\n    buffer.writeUInt32BE(buffer.length, 0);//fill in the size\n    return buffer;\n};\n\nframes.amqp_frame = function(channel, performative, payload) {\n    return {'channel': channel || 0, 'type': frames.TYPE_AMQP, 'performative': performative, 'payload': payload};\n};\nframes.sasl_frame = function(performative) {\n    return {'channel': 0, 'type': frames.TYPE_SASL, 'performative': performative};\n};\n\nfunction define_frame(type, def) {\n    var c = types.define_composite(def);\n    frames[def.name] = c.create;\n    by_descriptor[Number(c.descriptor.numeric).toString(10)] = c;\n    by_descriptor[c.descriptor.symbolic] = c;\n}\n\nvar open = {\n    name: 'open',\n    code: 0x10,\n    fields: [\n        {name: 'container_id', type: 'string', mandatory: true},\n        {name: 'hostname', type: 'string'},\n        {name: 'max_frame_size', type: 'uint', default_value: 4294967295},\n        {name: 'channel_max', type: 'ushort', default_value: 65535},\n        {name: 'idle_time_out', type: 'uint'},\n        {name: 'outgoing_locales', type: 'symbol', multiple: true},\n        {name: 'incoming_locales', type: 'symbol', multiple: true},\n        {name: 'offered_capabilities', type: 'symbol', multiple: true},\n        {name: 'desired_capabilities', type: 'symbol', multiple: true},\n        {name: 'properties', type: 'symbolic_map'}\n    ]\n};\n\nvar begin = {\n    name: 'begin',\n    code: 0x11,\n    fields:[\n        {name: 'remote_channel', type: 'ushort'},\n        {name: 'next_outgoing_id', type: 'uint', mandatory: true},\n        {name: 'incoming_window', type: 'uint', mandatory: true},\n        {name: 'outgoing_window', type: 'uint', mandatory: true},\n        {name: 'handle_max', type: 'uint', default_value: '4294967295'},\n        {name: 'offered_capabilities', type: 'symbol', multiple: true},\n        {name: 'desired_capabilities', type: 'symbol', multiple: true},\n        {name: 'properties', type: 'symbolic_map'}\n    ]\n};\n\nvar attach = {\n    name: 'attach',\n    code: 0x12,\n    fields:[\n        {name: 'name', type: 'string', mandatory: true},\n        {name: 'handle', type: 'uint', mandatory: true},\n        {name: 'role', type: 'boolean', mandatory: true},\n        {name: 'snd_settle_mode', type: 'ubyte', default_value: 2},\n        {name: 'rcv_settle_mode', type: 'ubyte', default_value: 0},\n        {name: 'source', type: '*'},\n        {name: 'target', type: '*'},\n        {name: 'unsettled', type: 'map'},\n        {name: 'incomplete_unsettled', type: 'boolean', default_value: false},\n        {name: 'initial_delivery_count', type: 'uint'},\n        {name: 'max_message_size', type: 'ulong'},\n        {name: 'offered_capabilities', type: 'symbol', multiple: true},\n        {name: 'desired_capabilities', type: 'symbol', multiple: true},\n        {name: 'properties', type: 'symbolic_map'}\n    ]\n};\n\nvar flow = {\n    name: 'flow',\n    code: 0x13,\n    fields:[\n        {name: 'next_incoming_id', type: 'uint'},\n        {name: 'incoming_window', type: 'uint', mandatory: true},\n        {name: 'next_outgoing_id', type: 'uint', mandatory: true},\n        {name: 'outgoing_window', type: 'uint', mandatory: true},\n        {name: 'handle', type: 'uint'},\n        {name: 'delivery_count', type: 'uint'},\n        {name: 'link_credit', type: 'uint'},\n        {name: 'available', type: 'uint'},\n        {name: 'drain', type: 'boolean', default_value: false},\n        {name: 'echo', type: 'boolean', default_value: false},\n        {name: 'properties', type: 'symbolic_map'}\n    ]\n};\n\nvar transfer = {\n    name: 'transfer',\n    code: 0x14,\n    fields:[\n        {name: 'handle', type: 'uint', mandatory: true},\n        {name: 'delivery_id', type: 'uint'},\n        {name: 'delivery_tag', type: 'binary'},\n        {name: 'message_format', type: 'uint'},\n        {name: 'settled', type: 'boolean'},\n        {name: 'more', type: 'boolean', default_value: false},\n        {name: 'rcv_settle_mode', type: 'ubyte'},\n        {name: 'state', type: 'delivery_state'},\n        {name: 'resume', type: 'boolean', default_value: false},\n        {name: 'aborted', type: 'boolean', default_value: false},\n        {name: 'batchable', type: 'boolean', default_value: false}\n    ]\n};\n\nvar disposition = {\n    name: 'disposition',\n    code: 0x15,\n    fields:[\n        {name: 'role', type: 'boolean', mandatory: true},\n        {name: 'first', type: 'uint', mandatory: true},\n        {name: 'last', type: 'uint'},\n        {name: 'settled', type: 'boolean', default_value: false},\n        {name: 'state', type: '*'},\n        {name: 'batchable', type: 'boolean', default_value: false}\n    ]\n};\n\nvar detach = {\n    name: 'detach',\n    code: 0x16,\n    fields: [\n        {name: 'handle', type: 'uint', mandatory: true},\n        {name: 'closed', type: 'boolean', default_value: false},\n        {name: 'error', type: 'error'}\n    ]\n};\n\nvar end = {\n    name: 'end',\n    code: 0x17,\n    fields: [\n        {name: 'error', type: 'error'}\n    ]\n};\n\nvar close = {\n    name: 'close',\n    code: 0x18,\n    fields: [\n        {name: 'error', type: 'error'}\n    ]\n};\n\ndefine_frame(frames.TYPE_AMQP, open);\ndefine_frame(frames.TYPE_AMQP, begin);\ndefine_frame(frames.TYPE_AMQP, attach);\ndefine_frame(frames.TYPE_AMQP, flow);\ndefine_frame(frames.TYPE_AMQP, transfer);\ndefine_frame(frames.TYPE_AMQP, disposition);\ndefine_frame(frames.TYPE_AMQP, detach);\ndefine_frame(frames.TYPE_AMQP, end);\ndefine_frame(frames.TYPE_AMQP, close);\n\nvar sasl_mechanisms = {\n    name: 'sasl_mechanisms',\n    code: 0x40,\n    fields: [\n        {name: 'sasl_server_mechanisms', type: 'symbol', multiple: true, mandatory: true}\n    ]\n};\n\nvar sasl_init = {\n    name: 'sasl_init',\n    code: 0x41,\n    fields: [\n        {name: 'mechanism', type: 'symbol', mandatory: true},\n        {name: 'initial_response', type: 'binary'},\n        {name: 'hostname', type: 'string'}\n    ]\n};\n\nvar sasl_challenge = {\n    name: 'sasl_challenge',\n    code: 0x42,\n    fields: [\n        {name: 'challenge', type: 'binary', mandatory: true}\n    ]\n};\n\nvar sasl_response = {\n    name: 'sasl_response',\n    code: 0x43,\n    fields: [\n        {name: 'response', type: 'binary', mandatory: true}\n    ]\n};\n\nvar sasl_outcome = {\n    name: 'sasl_outcome',\n    code: 0x44,\n    fields: [\n        {name: 'code', type: 'ubyte', mandatory: true},\n        {name: 'additional_data', type: 'binary'}\n    ]\n};\n\ndefine_frame(frames.TYPE_SASL, sasl_mechanisms);\ndefine_frame(frames.TYPE_SASL, sasl_init);\ndefine_frame(frames.TYPE_SASL, sasl_challenge);\ndefine_frame(frames.TYPE_SASL, sasl_response);\ndefine_frame(frames.TYPE_SASL, sasl_outcome);\n\nmodule.exports = frames;\n","\"use strict\";\n\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\nfunction setup(env) {\n  createDebug.debug = createDebug;\n  createDebug.default = createDebug;\n  createDebug.coerce = coerce;\n  createDebug.disable = disable;\n  createDebug.enable = enable;\n  createDebug.enabled = enabled;\n  createDebug.humanize = require('ms');\n  Object.keys(env).forEach(function (key) {\n    createDebug[key] = env[key];\n  });\n  /**\n  * Active `debug` instances.\n  */\n\n  createDebug.instances = [];\n  /**\n  * The currently active debug mode names, and names to skip.\n  */\n\n  createDebug.names = [];\n  createDebug.skips = [];\n  /**\n  * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n  *\n  * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n  */\n\n  createDebug.formatters = {};\n  /**\n  * Selects a color for a debug namespace\n  * @param {String} namespace The namespace string for the for the debug instance to be colored\n  * @return {Number|String} An ANSI color code for the given namespace\n  * @api private\n  */\n\n  function selectColor(namespace) {\n    var hash = 0;\n\n    for (var i = 0; i < namespace.length; i++) {\n      hash = (hash << 5) - hash + namespace.charCodeAt(i);\n      hash |= 0; // Convert to 32bit integer\n    }\n\n    return createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n  }\n\n  createDebug.selectColor = selectColor;\n  /**\n  * Create a debugger with the given `namespace`.\n  *\n  * @param {String} namespace\n  * @return {Function}\n  * @api public\n  */\n\n  function createDebug(namespace) {\n    var prevTime;\n\n    function debug() {\n      // Disabled?\n      if (!debug.enabled) {\n        return;\n      }\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var self = debug; // Set `diff` timestamp\n\n      var curr = Number(new Date());\n      var ms = curr - (prevTime || curr);\n      self.diff = ms;\n      self.prev = prevTime;\n      self.curr = curr;\n      prevTime = curr;\n      args[0] = createDebug.coerce(args[0]);\n\n      if (typeof args[0] !== 'string') {\n        // Anything else let's inspect with %O\n        args.unshift('%O');\n      } // Apply any `formatters` transformations\n\n\n      var index = 0;\n      args[0] = args[0].replace(/%([a-zA-Z%])/g, function (match, format) {\n        // If we encounter an escaped % then don't increase the array index\n        if (match === '%%') {\n          return match;\n        }\n\n        index++;\n        var formatter = createDebug.formatters[format];\n\n        if (typeof formatter === 'function') {\n          var val = args[index];\n          match = formatter.call(self, val); // Now we need to remove `args[index]` since it's inlined in the `format`\n\n          args.splice(index, 1);\n          index--;\n        }\n\n        return match;\n      }); // Apply env-specific formatting (colors, etc.)\n\n      createDebug.formatArgs.call(self, args);\n      var logFn = self.log || createDebug.log;\n      logFn.apply(self, args);\n    }\n\n    debug.namespace = namespace;\n    debug.enabled = createDebug.enabled(namespace);\n    debug.useColors = createDebug.useColors();\n    debug.color = selectColor(namespace);\n    debug.destroy = destroy;\n    debug.extend = extend; // Debug.formatArgs = formatArgs;\n    // debug.rawLog = rawLog;\n    // env-specific initialization logic for debug instances\n\n    if (typeof createDebug.init === 'function') {\n      createDebug.init(debug);\n    }\n\n    createDebug.instances.push(debug);\n    return debug;\n  }\n\n  function destroy() {\n    var index = createDebug.instances.indexOf(this);\n\n    if (index !== -1) {\n      createDebug.instances.splice(index, 1);\n      return true;\n    }\n\n    return false;\n  }\n\n  function extend(namespace, delimiter) {\n    return createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n  }\n  /**\n  * Enables a debug mode by namespaces. This can include modes\n  * separated by a colon and wildcards.\n  *\n  * @param {String} namespaces\n  * @api public\n  */\n\n\n  function enable(namespaces) {\n    createDebug.save(namespaces);\n    createDebug.names = [];\n    createDebug.skips = [];\n    var i;\n    var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n    var len = split.length;\n\n    for (i = 0; i < len; i++) {\n      if (!split[i]) {\n        // ignore empty strings\n        continue;\n      }\n\n      namespaces = split[i].replace(/\\*/g, '.*?');\n\n      if (namespaces[0] === '-') {\n        createDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n      } else {\n        createDebug.names.push(new RegExp('^' + namespaces + '$'));\n      }\n    }\n\n    for (i = 0; i < createDebug.instances.length; i++) {\n      var instance = createDebug.instances[i];\n      instance.enabled = createDebug.enabled(instance.namespace);\n    }\n  }\n  /**\n  * Disable debug output.\n  *\n  * @api public\n  */\n\n\n  function disable() {\n    createDebug.enable('');\n  }\n  /**\n  * Returns true if the given mode name is enabled, false otherwise.\n  *\n  * @param {String} name\n  * @return {Boolean}\n  * @api public\n  */\n\n\n  function enabled(name) {\n    if (name[name.length - 1] === '*') {\n      return true;\n    }\n\n    var i;\n    var len;\n\n    for (i = 0, len = createDebug.skips.length; i < len; i++) {\n      if (createDebug.skips[i].test(name)) {\n        return false;\n      }\n    }\n\n    for (i = 0, len = createDebug.names.length; i < len; i++) {\n      if (createDebug.names[i].test(name)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n  /**\n  * Coerce `val`.\n  *\n  * @param {Mixed} val\n  * @return {Mixed}\n  * @api private\n  */\n\n\n  function coerce(val) {\n    if (val instanceof Error) {\n      return val.stack || val.message;\n    }\n\n    return val;\n  }\n\n  createDebug.enable(createDebug.load());\n  return createDebug;\n}\n\nmodule.exports = setup;\n\n","\"use strict\";\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\n/**\n * Colors.\n */\n\nexports.colors = ['#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC', '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF', '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC', '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF', '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC', '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033', '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366', '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933', '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC', '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF', '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'];\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n// eslint-disable-next-line complexity\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n    return true;\n  } // Internet Explorer and Edge do not support colors.\n\n\n  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n    return false;\n  } // Is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\n\n  return typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || // Is firebug? http://stackoverflow.com/a/398120/376773\n  typeof window !== 'undefined' && window.console && (window.console.firebug || window.console.exception && window.console.table) || // Is firefox >= v31?\n  // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31 || // Double check webkit in userAgent just in case we are in a worker\n  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/);\n}\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\n\nfunction formatArgs(args) {\n  args[0] = (this.useColors ? '%c' : '') + this.namespace + (this.useColors ? ' %c' : ' ') + args[0] + (this.useColors ? '%c ' : ' ') + '+' + module.exports.humanize(this.diff);\n\n  if (!this.useColors) {\n    return;\n  }\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit'); // The final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function (match) {\n    if (match === '%%') {\n      return;\n    }\n\n    index++;\n\n    if (match === '%c') {\n      // We only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n  args.splice(lastC, 0, c);\n}\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\n\nfunction log() {\n  var _console;\n\n  // This hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return (typeof console === \"undefined\" ? \"undefined\" : _typeof(console)) === 'object' && console.log && (_console = console).log.apply(_console, arguments);\n}\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\n\nfunction save(namespaces) {\n  try {\n    if (namespaces) {\n      exports.storage.setItem('debug', namespaces);\n    } else {\n      exports.storage.removeItem('debug');\n    }\n  } catch (error) {// Swallow\n    // XXX (@Qix-) should we be logging these?\n  }\n}\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\n\nfunction load() {\n  var r;\n\n  try {\n    r = exports.storage.getItem('debug');\n  } catch (error) {} // Swallow\n  // XXX (@Qix-) should we be logging these?\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\n\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\n\nfunction localstorage() {\n  try {\n    // TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n    // The Browser also has localStorage in the global context.\n    return localStorage;\n  } catch (error) {// Swallow\n    // XXX (@Qix-) should we be logging these?\n  }\n}\n\nmodule.exports = require('./common')(exports);\nvar formatters = module.exports.formatters;\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n  try {\n    return JSON.stringify(v);\n  } catch (error) {\n    return '[UnexpectedJSONParseError]: ' + error.message;\n  }\n};\n\n","/*\n * Copyright 2015 Red Hat Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nvar debug = require('debug');\n\nif (debug.formatters) {\n    debug.formatters.h = function (v) {\n        return v.toString('hex');\n    };\n}\n\nmodule.exports = {\n    'config' : debug('rhea:config'),\n    'frames' : debug('rhea:frames'),\n    'raw' : debug('rhea:raw'),\n    'reconnect' : debug('rhea:reconnect'),\n    'events' : debug('rhea:events'),\n    'message' : debug('rhea:message'),\n    'flow' : debug('rhea:flow'),\n    'io' : debug('rhea:io')\n};\n","/*\n * Copyright 2015 Red Hat Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nvar errors = require('./errors.js');\nvar frames = require('./frames.js');\nvar log = require('./log.js');\nvar util = require('./util.js');\n\n\nvar Transport = function (identifier, protocol_id, frame_type, handler) {\n    this.identifier = identifier;\n    this.protocol_id = protocol_id;\n    this.frame_type = frame_type;\n    this.handler = handler;\n    this.pending = [];\n    this.header_sent = undefined;\n    this.header_received = undefined;\n    this.write_complete = false;\n    this.read_complete = false;\n};\n\nTransport.prototype.has_writes_pending = function () {\n    return this.pending.length > 0 || !this.header_sent;\n};\n\nTransport.prototype.encode = function (frame) {\n    this.pending.push(frame);\n};\n\nTransport.prototype.write = function (socket) {\n    if (!this.header_sent) {\n        var buffer = util.allocate_buffer(8);\n        var header = {protocol_id:this.protocol_id, major:1, minor:0, revision:0};\n        log.frames('[%s] -> %o', this.identifier, header);\n        frames.write_header(buffer, header);\n        socket.write(buffer);\n        this.header_sent = header;\n    }\n    for (var i = 0; i < this.pending.length; i++) {\n        var frame = this.pending[i];\n        var buffer = frames.write_frame(frame);\n        socket.write(buffer);\n        if (frame.performative) {\n            log.frames('[%s]:%s -> %s %j', this.identifier, frame.channel, frame.performative.constructor, frame.performative, frame.payload || '');\n        } else {\n            log.frames('[%s]:%s -> empty', this.identifier, frame.channel);\n        }\n        log.raw('[%s] SENT: %d %h', this.identifier, buffer.length, buffer);\n    }\n    this.pending = [];\n};\n\nTransport.prototype.read = function (buffer) {\n    var offset = 0;\n    if (!this.header_received) {\n        if (buffer.length < 8) {\n            return offset;\n        } else {\n            this.header_received = frames.read_header(buffer);\n            log.frames('[%s] <- %o', this.identifier, this.header_received);\n            if (this.header_received.protocol_id !== this.protocol_id) {\n                if (this.protocol_id === 3 && this.header_received.protocol_id === 0) {\n                    throw new errors.ProtocolError('Expecting SASL layer');\n                } else if (this.protocol_id === 0 && this.header_received.protocol_id === 3) {\n                    throw new errors.ProtocolError('SASL layer not enabled');\n                } else {\n                    throw new errors.ProtocolError('Invalid AMQP protocol id ' + this.header_received.protocol_id + ' expecting: ' + this.protocol_id);\n                }\n            }\n            offset = 8;\n        }\n    }\n    while (offset < (buffer.length - 4) && !this.read_complete) {\n        var frame_size = buffer.readUInt32BE(offset);\n        log.io('[%s] got frame of size %d', this.identifier, frame_size);\n        if (buffer.length < offset + frame_size) {\n            log.io('[%s] incomplete frame; have only %d of %d', this.identifier, (buffer.length - offset), frame_size);\n            //don't have enough data for a full frame yet\n            break;\n        } else {\n            var slice = buffer.slice(offset, offset + frame_size);\n            log.raw('[%s] RECV: %d %h', this.identifier, slice.length, slice);\n            var frame = frames.read_frame(slice);\n            if (frame.performative) {\n                log.frames('[%s]:%s <- %s %j', this.identifier, frame.channel, frame.performative.constructor, frame.performative, frame.payload || '');\n            } else {\n                log.frames('[%s]:%s <- empty', this.identifier, frame.channel);\n\n            }\n            if (frame.type !== this.frame_type) {\n                throw new errors.ProtocolError('Invalid frame type: ' + frame.type);\n            }\n            offset += frame_size;\n            if (frame.performative) {\n                frame.performative.dispatch(this.handler, frame);\n            }\n        }\n    }\n    return offset;\n};\n\nmodule.exports = Transport;\n","/*\n * Copyright 2015 Red Hat Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nvar errors = require('./errors.js');\nvar frames = require('./frames.js');\nvar Transport = require('./transport.js');\nvar util = require('./util.js');\n\nvar sasl_codes = {\n    'OK':0,\n    'AUTH':1,\n    'SYS':2,\n    'SYS_PERM':3,\n    'SYS_TEMP':4,\n};\n\nvar SASL_PROTOCOL_ID = 0x03;\n\nfunction extract(buffer) {\n    var results = [];\n    var start = 0;\n    var i = 0;\n    while (i < buffer.length) {\n        if (buffer[i] === 0x00) {\n            if (i > start) results.push(buffer.toString('utf8', start, i));\n            else results.push(null);\n            start = ++i;\n        } else {\n            ++i;\n        }\n    }\n    if (i > start) results.push(buffer.toString('utf8', start, i));\n    else results.push(null);\n    return results;\n}\n\nvar PlainServer = function(callback) {\n    this.callback = callback;\n    this.outcome = undefined;\n    this.username = undefined;\n};\n\nPlainServer.prototype.start = function(response, hostname) {\n    var fields = extract(response);\n    if (fields.length !== 3) {\n        return Promise.reject('Unexpected response in PLAIN, got ' + fields.length + ' fields, expected 3');\n    }\n    var self = this;\n    return Promise.resolve(this.callback(fields[1], fields[2], hostname))\n        .then(function (result) {\n            if (result) {\n                self.outcome = true;\n                self.username = fields[1];\n            } else {\n                self.outcome = false;\n            }\n        });\n};\n\nvar PlainClient = function(username, password) {\n    this.username = username;\n    this.password = password;\n};\n\nPlainClient.prototype.start = function(callback) {\n    var response = util.allocate_buffer(1 + this.username.length + 1 + this.password.length);\n    response.writeUInt8(0, 0);\n    response.write(this.username, 1);\n    response.writeUInt8(0, 1 + this.username.length);\n    response.write(this.password, 1 + this.username.length + 1);\n    callback(undefined, response);\n};\n\nvar AnonymousServer = function() {\n    this.outcome = undefined;\n    this.username = undefined;\n};\n\nAnonymousServer.prototype.start = function(response) {\n    this.outcome = true;\n    this.username = response ? response.toString('utf8') : 'anonymous';\n};\n\nvar AnonymousClient = function(name) {\n    this.username = name ? name : 'anonymous';\n};\n\nAnonymousClient.prototype.start = function(callback) {\n    var response = util.allocate_buffer(1 + this.username.length);\n    response.writeUInt8(0, 0);\n    response.write(this.username, 1);\n    callback(undefined, response);\n};\n\nvar ExternalServer = function() {\n    this.outcome = undefined;\n    this.username = undefined;\n};\n\nExternalServer.prototype.start = function() {\n    this.outcome = true;\n};\n\nvar ExternalClient = function() {\n    this.username = undefined;\n};\n\nExternalClient.prototype.start = function(callback) {\n    callback(undefined, '');\n};\n\nExternalClient.prototype.step = function(callback) {\n    callback(undefined, '');\n};\n\nvar XOAuth2Client = function(username, token) {\n    this.username = username;\n    this.token = token;\n};\n\nXOAuth2Client.prototype.start = function(callback) {\n    var response = util.allocate_buffer(this.username.length + this.token.length + 5 + 12 + 3);\n    var count = 0;\n    response.write('user=', count);\n    count += 5;\n    response.write(this.username, count);\n    count += this.username.length;\n    response.writeUInt8(1, count);\n    count += 1;\n    response.write('auth=Bearer ', count);\n    count += 12;\n    response.write(this.token, count);\n    count += this.token.length;\n    response.writeUInt8(1, count);\n    count += 1;\n    response.writeUInt8(1, count);\n    count += 1;\n    callback(undefined, response);\n};\n\n/**\n * The mechanisms argument is a map of mechanism names to factory\n * functions for objects that implement that mechanism.\n */\nvar SaslServer = function (connection, mechanisms) {\n    this.connection = connection;\n    this.transport = new Transport(connection.amqp_transport.identifier, SASL_PROTOCOL_ID, frames.TYPE_SASL, this);\n    this.next = connection.amqp_transport;\n    this.mechanisms = mechanisms;\n    this.mechanism = undefined;\n    this.outcome = undefined;\n    this.username = undefined;\n    var mechlist = Object.getOwnPropertyNames(mechanisms);\n    this.transport.encode(frames.sasl_frame(frames.sasl_mechanisms({sasl_server_mechanisms:mechlist})));\n};\n\nSaslServer.prototype.do_step = function (challenge) {\n    if (this.mechanism.outcome === undefined) {\n        this.transport.encode(frames.sasl_frame(frames.sasl_challenge({'challenge':challenge})));\n        this.connection.output();\n    } else {\n        this.outcome = this.mechanism.outcome ? sasl_codes.OK : sasl_codes.AUTH;\n        var frame = frames.sasl_frame(frames.sasl_outcome({code: this.outcome}));\n        this.transport.encode(frame);\n        this.connection.output();\n        if (this.outcome === sasl_codes.OK) {\n            this.username = this.mechanism.username;\n            this.transport.write_complete = true;\n            this.transport.read_complete = true;\n        }\n    }\n};\n\nSaslServer.prototype.on_sasl_init = function (frame) {\n    var saslctor = this.mechanisms[frame.performative.mechanism];\n    if (saslctor) {\n        this.mechanism = saslctor();\n        Promise.resolve(this.mechanism.start(frame.performative.initial_response, frame.performative.hostname))\n            .then(this.do_step.bind(this))\n            .catch(this.do_fail.bind(this));\n    } else {\n        this.outcome = sasl_codes.AUTH;\n        this.transport.encode(frames.sasl_frame(frames.sasl_outcome({code: this.outcome})));\n    }\n};\n\nSaslServer.prototype.on_sasl_response = function (frame) {\n    Promise.resolve(this.mechanism.step(frame.performative.response))\n        .then(this.do_step.bind(this))\n        .catch(this.do_fail.bind(this));\n};\n\nSaslServer.prototype.do_fail = function (e) {\n    var frame = frames.sasl_frame(frames.sasl_outcome({code: sasl_codes.SYS}));\n    this.transport.encode(frame);\n    this.connection.output();\n    try {\n        this.connection.sasl_failed('Sasl callback promise failed with ' + e, 'amqp:internal-error');\n    } catch (e) {\n        console.error('Uncaught error: ', e.message);\n    }\n};\n\nSaslServer.prototype.has_writes_pending = function () {\n    return this.transport.has_writes_pending() || this.next.has_writes_pending();\n};\n\nSaslServer.prototype.write = function (socket) {\n    if (this.transport.write_complete && this.transport.pending.length === 0) {\n        return this.next.write(socket);\n    } else {\n        return this.transport.write(socket);\n    }\n};\n\nSaslServer.prototype.read = function (buffer) {\n    if (this.transport.read_complete) {\n        return this.next.read(buffer);\n    } else {\n        return this.transport.read(buffer);\n    }\n};\n\nvar SaslClient = function (connection, mechanisms, hostname) {\n    this.connection = connection;\n    this.transport = new Transport(connection.amqp_transport.identifier, SASL_PROTOCOL_ID, frames.TYPE_SASL, this);\n    this.next = connection.amqp_transport;\n    this.mechanisms = mechanisms;\n    this.mechanism = undefined;\n    this.mechanism_name = undefined;\n    this.hostname = hostname;\n    this.failed = false;\n};\n\nSaslClient.prototype.on_sasl_mechanisms = function (frame) {\n    var offered_mechanisms = [];\n    if (Array.isArray(frame.performative.sasl_server_mechanisms)) {\n        offered_mechanisms = frame.performative.sasl_server_mechanisms;\n    } else if (frame.performative.sasl_server_mechanisms) {\n        offered_mechanisms = [frame.performative.sasl_server_mechanisms];\n    }\n    for (var i = 0; this.mechanism === undefined && i < offered_mechanisms.length; i++) {\n        var mech = offered_mechanisms[i];\n        var f = this.mechanisms[mech];\n        if (f) {\n            this.mechanism = typeof f === 'function' ? f() : f;\n            this.mechanism_name = mech;\n        }\n    }\n    if (this.mechanism) {\n        var self = this;\n        this.mechanism.start(function (err, response) {\n            if (err) {\n                self.failed = true;\n                self.connection.sasl_failed('SASL mechanism init failed: ' + err);\n            } else {\n                var init = {'mechanism':self.mechanism_name,'initial_response':response};\n                if (self.hostname) {\n                    init.hostname = self.hostname;\n                }\n                self.transport.encode(frames.sasl_frame(frames.sasl_init(init)));\n                self.connection.output();\n            }\n        });\n    } else {\n        this.failed = true;\n        this.connection.sasl_failed('No suitable mechanism; server supports ' + frame.performative.sasl_server_mechanisms);\n    }\n};\nSaslClient.prototype.on_sasl_challenge = function (frame) {\n    var self = this;\n    this.mechanism.step(frame.performative.challenge, function (err, response) {\n        if (err) {\n            self.failed = true;\n            self.connection.sasl_failed('SASL mechanism challenge failed: ' + err);\n        } else {\n            self.transport.encode(frames.sasl_frame(frames.sasl_response({'response':response})));\n            self.connection.output();\n        }\n    });\n};\nSaslClient.prototype.on_sasl_outcome = function (frame) {\n    switch (frame.performative.code) {\n    case sasl_codes.OK:\n        this.transport.read_complete = true;\n        this.transport.write_complete = true;\n        break;\n    case sasl_codes.SYS:\n    case sasl_codes.SYS_PERM:\n    case sasl_codes.SYS_TEMP:\n        this.transport.write_complete = true;\n        this.connection.sasl_failed('Failed to authenticate: ' + frame.performative.code, 'amqp:internal-error');\n        break;\n    default:\n        this.transport.write_complete = true;\n        this.connection.sasl_failed('Failed to authenticate: ' + frame.performative.code);\n    }\n};\n\nSaslClient.prototype.has_writes_pending = function () {\n    return this.transport.has_writes_pending() || this.next.has_writes_pending();\n};\n\nSaslClient.prototype.write = function (socket) {\n    if (this.transport.write_complete) {\n        return this.next.write(socket);\n    } else {\n        return this.transport.write(socket);\n    }\n};\n\nSaslClient.prototype.read = function (buffer) {\n    if (this.transport.read_complete) {\n        return this.next.read(buffer);\n    } else {\n        return this.transport.read(buffer);\n    }\n};\n\nvar SelectiveServer = function (connection, mechanisms) {\n    this.header_received = false;\n    this.transports = {\n        0: connection.amqp_transport,\n        3: new SaslServer(connection, mechanisms)\n    };\n    this.selected = undefined;\n};\n\nSelectiveServer.prototype.has_writes_pending = function () {\n    return this.header_received && this.selected.has_writes_pending();\n};\n\nSelectiveServer.prototype.write = function (socket) {\n    if (this.selected) {\n        return this.selected.write(socket);\n    } else {\n        return 0;\n    }\n};\n\nSelectiveServer.prototype.read = function (buffer) {\n    if (!this.header_received) {\n        if (buffer.length < 8) {\n            return 0;\n        } else {\n            this.header_received = frames.read_header(buffer);\n            this.selected = this.transports[this.header_received.protocol_id];\n            if (this.selected === undefined) {\n                throw new errors.ProtocolError('Invalid AMQP protocol id ' + this.header_received.protocol_id);\n            }\n        }\n    }\n    return this.selected.read(buffer);\n};\n\nvar default_server_mechanisms = {\n    enable_anonymous: function () {\n        this['ANONYMOUS'] = function() { return new AnonymousServer(); };\n    },\n    enable_plain: function (callback) {\n        this['PLAIN'] = function() { return new PlainServer(callback); };\n    }\n};\n\nvar default_client_mechanisms = {\n    enable_anonymous: function (name) {\n        this['ANONYMOUS'] = function() { return new AnonymousClient(name); };\n    },\n    enable_plain: function (username, password) {\n        this['PLAIN'] = function() { return new PlainClient(username, password); };\n    },\n    enable_external: function () {\n        this['EXTERNAL'] = function() { return new ExternalClient(); };\n    },\n    enable_xoauth2: function (username, token) {\n        if (username && token) {\n            this['XOAUTH2'] = function() { return new XOAuth2Client(username, token); };\n        } else if (token === undefined) {\n            throw Error('token must be specified');\n        } else if (username === undefined) {\n            throw Error('username must be specified');\n        }\n    }\n};\n\nmodule.exports = {\n    Client : SaslClient,\n    Server : SaslServer,\n    Selective: SelectiveServer,\n    server_mechanisms : function () {\n        return Object.create(default_server_mechanisms);\n    },\n    client_mechanisms : function () {\n        return Object.create(default_client_mechanisms);\n    },\n    server_add_external: function (mechs) {\n        mechs['EXTERNAL'] = function() { return new ExternalServer(); };\n        return mechs;\n    }\n};\n","/*\n * Copyright 2015 Red Hat Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nvar EndpointState = function () {\n    this.init();\n};\n\nEndpointState.prototype.init = function () {\n    this.local_open = false;\n    this.remote_open = false;\n    this.open_requests = 0;\n    this.close_requests = 0;\n    this.initialised = false;\n    this.marker = undefined;\n};\n\nEndpointState.prototype.mark = function (o) {\n    this.marker = o || Date.now();\n    return this.marker;\n};\n\nEndpointState.prototype.open = function () {\n    this.marker = undefined;\n    this.initialised = true;\n    if (!this.local_open) {\n        this.local_open = true;\n        this.open_requests++;\n        return true;\n    } else {\n        return false;\n    }\n};\n\nEndpointState.prototype.close = function () {\n    this.marker = undefined;\n    if (this.local_open) {\n        this.local_open = false;\n        this.close_requests++;\n        return true;\n    } else {\n        return false;\n    }\n};\n\nEndpointState.prototype.disconnected = function () {\n    var was_initialised = this.initialised;\n    this.was_open = this.local_open;\n    this.init();\n    this.initialised = was_initialised;\n};\n\nEndpointState.prototype.reconnect = function () {\n    if (this.was_open) {\n        this.open();\n        this.was_open = undefined;\n    }\n};\n\nEndpointState.prototype.remote_opened = function () {\n    if (!this.remote_open) {\n        this.remote_open = true;\n        return true;\n    } else {\n        return false;\n    }\n};\n\nEndpointState.prototype.remote_closed = function () {\n    if (this.remote_open) {\n        this.remote_open = false;\n        return true;\n    } else {\n        return false;\n    }\n};\n\nEndpointState.prototype.is_open = function () {\n    return this.local_open && this.remote_open;\n};\n\nEndpointState.prototype.is_closed = function () {\n    return this.initialised && !(this.local_open || this.was_open) && !this.remote_open;\n};\n\nEndpointState.prototype.has_settled = function () {\n    return this.open_requests === 0 && this.close_requests === 0;\n};\n\nEndpointState.prototype.need_open = function () {\n    if (this.open_requests > 0) {\n        this.open_requests--;\n        return true;\n    } else {\n        return false;\n    }\n};\n\nEndpointState.prototype.need_close = function () {\n    if (this.close_requests > 0) {\n        this.close_requests--;\n        return true;\n    } else {\n        return false;\n    }\n};\n\nmodule.exports = EndpointState;\n","/*\n * Copyright 2015 Red Hat Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nvar log = require('./log.js');\nvar types = require('./types.js');\n\nvar by_descriptor = {};\nvar unwrappers = {};\nvar wrappers = [];\nvar message = {};\n\nfunction define_section(descriptor, unwrap, wrap) {\n    unwrap.descriptor = descriptor;\n    unwrappers[descriptor.symbolic] = unwrap;\n    unwrappers[Number(descriptor.numeric).toString(10)] = unwrap;\n    if (wrap) {\n        wrappers.push(wrap);\n    }\n}\n\nfunction define_composite_section(def) {\n    var c = types.define_composite(def);\n    message[def.name] = c.create;\n    by_descriptor[Number(c.descriptor.numeric).toString(10)] = c;\n    by_descriptor[c.descriptor.symbolic] = c;\n\n    var unwrap = function (msg, section) {\n        var composite = new c(section.value);\n        for (var i = 0; i < def.fields.length; i++) {\n            var f = def.fields[i];\n            var v = composite[f.name];\n            if (v !== undefined && v !== null) {\n                msg[f.name] = v;\n            }\n        }\n    };\n\n    var wrap = function (sections, msg) {\n        sections.push(c.create(msg).described());\n    };\n    define_section(c.descriptor, unwrap, wrap);\n}\n\n\nfunction define_map_section(def, symbolic) {\n    var wrapper = symbolic ? types.wrap_symbolic_map : types.wrap_map;\n    var descriptor = {numeric:def.code};\n    descriptor.symbolic = 'amqp:' + def.name.replace(/_/g, '-') + ':map';\n    var unwrap = function (msg, section) {\n        msg[def.name] = types.unwrap_map_simple(section);\n    };\n    var wrap = function (sections, msg) {\n        if (msg[def.name]) {\n            sections.push(types.described_nc(types.wrap_ulong(descriptor.numeric), wrapper(msg[def.name])));\n        }\n    };\n    define_section(descriptor, unwrap, wrap);\n}\n\nfunction Section(typecode, content, multiple) {\n    this.typecode = typecode;\n    this.content = content;\n    this.multiple = multiple;\n}\n\nSection.prototype.described = function (item) {\n    return types.described(types.wrap_ulong(this.typecode), types.wrap(item || this.content));\n};\n\nSection.prototype.collect_sections = function (sections) {\n    if (this.multiple) {\n        for (var i = 0; i < this.content.length; i++) {\n            sections.push(this.described(this.content[i]));\n        }\n    } else {\n        sections.push(this.described());\n    }\n};\n\ndefine_composite_section({\n    name:'header',\n    code:0x70,\n    fields:[\n        {name:'durable', type:'boolean', default_value:false},\n        {name:'priority', type:'ubyte', default_value:4},\n        {name:'ttl', type:'uint'},\n        {name:'first_acquirer', type:'boolean', default_value:false},\n        {name:'delivery_count', type:'uint', default_value:0}\n    ]\n});\ndefine_map_section({name:'delivery_annotations', code:0x71}, true);\ndefine_map_section({name:'message_annotations', code:0x72}, true);\ndefine_composite_section({\n    name:'properties',\n    code:0x73,\n    fields:[\n        {name:'message_id', type:'message_id'},\n        {name:'user_id', type:'binary'},\n        {name:'to', type:'string'},\n        {name:'subject', type:'string'},\n        {name:'reply_to', type:'string'},\n        {name:'correlation_id', type:'message_id'},\n        {name:'content_type', type:'symbol'},\n        {name:'content_encoding', type:'symbol'},\n        {name:'absolute_expiry_time', type:'timestamp'},\n        {name:'creation_time', type:'timestamp'},\n        {name:'group_id', type:'string'},\n        {name:'group_sequence', type:'uint'},\n        {name:'reply_to_group_id', type:'string'}\n    ]\n});\ndefine_map_section({name:'application_properties', code:0x74});\n\nfunction unwrap_body_section (msg, section, typecode) {\n    if (msg.body === undefined) {\n        msg.body = new Section(typecode, types.unwrap(section));\n    } else if (msg.body.constructor === Section && msg.body.typecode === typecode) {\n        if (msg.body.multiple) {\n            msg.body.content.push(types.unwrap(section));\n        } else {\n            msg.body.multiple = true;\n            msg.body.content = [msg.body.content, types.unwrap(section)];\n        }\n    }\n}\n\ndefine_section({numeric:0x75, symbolic:'amqp:data:binary'}, function (msg, section) { unwrap_body_section(msg, section, 0x75); });\ndefine_section({numeric:0x76, symbolic:'amqp:amqp-sequence:list'}, function (msg, section) { unwrap_body_section(msg, section, 0x76); });\ndefine_section({numeric:0x77, symbolic:'amqp:value:*'}, function (msg, section) { msg.body = types.unwrap(section); });\n\ndefine_map_section({name:'footer', code:0x78});\n\n\nfunction wrap_body (sections, msg) {\n    if (msg.body && msg.body.collect_sections) {\n        msg.body.collect_sections(sections);\n    } else {\n        sections.push(types.described(types.wrap_ulong(0x77), types.wrap(msg.body)));\n    }\n}\n\nwrappers.push(wrap_body);\n\nmessage.data_section = function (data) {\n    return new Section(0x75, data);\n};\n\nmessage.sequence_section = function (list) {\n    return new Section(0x76, list);\n};\n\nmessage.data_sections = function (data_elements) {\n    return new Section(0x75, data_elements, true);\n};\n\nmessage.sequence_sections = function (lists) {\n    return new Section(0x76, lists, true);\n};\n\nfunction copy(src, tgt) {\n    for (var k in src) {\n        var v = src[k];\n        if (typeof v === 'object') {\n            copy(v, tgt[k]);\n        } else {\n            tgt[k] = v;\n        }\n    }\n}\n\nfunction Message(o) {\n    if (o) {\n        copy(o, this);\n    }\n}\n\nMessage.prototype.toJSON = function () {\n    var o = {};\n    for (var key in this) {\n        if (typeof this[key] === 'function') continue;\n        o[key] = this[key];\n    }\n    return o;\n};\n\nMessage.prototype.toString = function () {\n    return JSON.stringify(this.toJSON());\n};\n\n\nmessage.encode = function(msg) {\n    var sections = [];\n    wrappers.forEach(function (wrapper_fn) { wrapper_fn(sections, msg); });\n    var writer = new types.Writer();\n    for (var i = 0; i < sections.length; i++) {\n        log.message('Encoding section %d of %d: %o', (i+1), sections.length, sections[i]);\n        writer.write(sections[i]);\n    }\n    var data = writer.toBuffer();\n    log.message('encoded %d bytes', data.length);\n    return data;\n};\n\nmessage.decode = function(buffer) {\n    var msg = new Message();\n    var reader = new types.Reader(buffer);\n    while (reader.remaining()) {\n        var s = reader.read();\n        log.message('decoding section: %o of type: %o', s, s.descriptor);\n        if (s.descriptor) {\n            var unwrap = unwrappers[s.descriptor.value];\n            if (unwrap) {\n                unwrap(msg, s);\n            } else {\n                console.warn('WARNING: did not recognise message section with descriptor ' + s.descriptor);\n            }\n        } else {\n            console.warn('WARNING: expected described message section got ' + JSON.stringify(s));\n        }\n    }\n    return msg;\n};\n\nvar outcomes = {};\n\nfunction define_outcome(def) {\n    var c = types.define_composite(def);\n    c.composite_type = def.name;\n    message[def.name] = c.create;\n    outcomes[Number(c.descriptor.numeric).toString(10)] = c;\n    outcomes[c.descriptor.symbolic] = c;\n    message['is_' + def.name] = function (o) {\n        if (o && o.descriptor) {\n            var c = outcomes[o.descriptor.value];\n            if (c) {\n                return c.descriptor.numeric === def.code;\n            }\n        }\n        return false;\n    };\n}\n\nmessage.unwrap_outcome = function (outcome) {\n    if (outcome && outcome.descriptor) {\n        var c = outcomes[outcome.descriptor.value];\n        if (c) {\n            return new c(outcome.value);\n        }\n    }\n    console.error('unrecognised outcome: ' + JSON.stringify(outcome));\n    return outcome;\n};\n\nmessage.are_outcomes_equivalent = function(a, b) {\n    if (a === undefined && b === undefined) return true;\n    else if (a === undefined || b === undefined) return false;\n    else return a.descriptor.value === b.descriptor.value && a.descriptor.value === 0x24;//only batch accepted\n};\n\ndefine_outcome({\n    name:'received',\n    code:0x23,\n    fields:[\n        {name:'section_number', type:'uint', mandatory:true},\n        {name:'section_offset', type:'ulong', mandatory:true}\n    ]});\ndefine_outcome({name:'accepted', code:0x24, fields:[]});\ndefine_outcome({name:'rejected', code:0x25, fields:[{name:'error', type:'error'}]});\ndefine_outcome({name:'released', code:0x26, fields:[]});\ndefine_outcome({\n    name:'modified',\n    code:0x27,\n    fields:[\n        {name:'delivery_failed', type:'boolean'},\n        {name:'undeliverable_here', type:'boolean'},\n        {name:'message_annotations', type:'map'}\n    ]});\n\nmodule.exports = message;\n","/*\n * Copyright 2015 Red Hat Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nvar types = require('./types.js');\n\nvar terminus = {};\nvar by_descriptor = {};\n\nfunction define_terminus(def) {\n    var c = types.define_composite(def);\n    terminus[def.name] = c.create;\n    by_descriptor[Number(c.descriptor.numeric).toString(10)] = c;\n    by_descriptor[c.descriptor.symbolic] = c;\n}\n\nterminus.unwrap = function(field) {\n    if (field && field.descriptor) {\n        var c = by_descriptor[field.descriptor.value];\n        if (c) {\n            return new c(field.value);\n        } else {\n            console.warn('Unknown terminus: ' + field.descriptor);\n        }\n    }\n    return null;\n};\n\ndefine_terminus({\n    name: 'source',\n    code: 0x28,\n    fields: [\n        {name: 'address', type: 'string'},\n        {name: 'durable', type: 'uint', default_value: 0},\n        {name: 'expiry_policy', type: 'symbol', default_value: 'session-end'},\n        {name: 'timeout', type: 'uint', default_value: 0},\n        {name: 'dynamic', type: 'boolean', default_value: false},\n        {name: 'dynamic_node_properties', type: 'symbolic_map'},\n        {name: 'distribution_mode', type: 'symbol'},\n        {name: 'filter', type: 'symbolic_map'},\n        {name: 'default_outcome', type: '*'},\n        {name: 'outcomes', type: 'symbol', multiple: true},\n        {name: 'capabilities', type: 'symbol', multiple: true}\n    ]\n});\n\ndefine_terminus({\n    name: 'target',\n    code: 0x29,\n    fields: [\n        {name: 'address', type: 'string'},\n        {name: 'durable', type: 'uint', default_value: 0},\n        {name: 'expiry_policy', type: 'symbol', default_value: 'session-end'},\n        {name: 'timeout', type: 'uint', default_value: 0},\n        {name: 'dynamic', type: 'boolean', default_value: false},\n        {name: 'dynamic_node_properties', type: 'symbolic_map'},\n        {name: 'capabilities', type: 'symbol', multiple: true}\n    ]\n});\n\nmodule.exports = terminus;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n","/*\n * Copyright 2015 Red Hat Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nvar frames = require('./frames.js');\nvar log = require('./log.js');\nvar message = require('./message.js');\nvar terminus = require('./terminus.js');\nvar EndpointState = require('./endpoint.js');\n\nvar FlowController = function (window) {\n    this.window = window;\n};\nFlowController.prototype.update = function (context) {\n    var delta = this.window - context.receiver.credit;\n    if (delta >= (this.window/4)) {\n        context.receiver.flow(delta);\n    }\n};\n\nfunction auto_settle(context) {\n    context.delivery.settled = true;\n}\n\nfunction auto_accept(context) {\n    context.delivery.update(undefined, message.accepted().described());\n}\n\nfunction LinkError(message, condition, link) {\n    Error.call(this);\n    Error.captureStackTrace(this, this.constructor);\n    this.message = message;\n    this.condition = condition;\n    this.description = message;\n    this.link = link;\n}\nrequire('util').inherits(LinkError, Error);\n\nvar EventEmitter = require('events').EventEmitter;\n\nvar link = Object.create(EventEmitter.prototype);\nlink.dispatch = function(name) {\n    log.events('[%s] Link got event: %s', this.connection.options.id, name);\n    EventEmitter.prototype.emit.apply(this.observers, arguments);\n    if (this.listeners(name).length) {\n        EventEmitter.prototype.emit.apply(this, arguments);\n        return true;\n    } else {\n        return this.session.dispatch.apply(this.session, arguments);\n    }\n};\nlink.set_source = function (fields) {\n    this.local.attach.source = terminus.source(fields).described();\n};\nlink.set_target = function (fields) {\n    this.local.attach.target = terminus.target(fields).described();\n};\n\nlink.attach = function () {\n    if (this.state.open()) {\n        this.connection._register();\n    }\n};\nlink.open = link.attach;\n\nlink.detach = function () {\n    this.local.detach.closed = false;\n    if (this.state.close()) {\n        this.connection._register();\n    }\n};\nlink.close = function(error) {\n    if (error) this.local.detach.error = error;\n    this.local.detach.closed = true;\n    if (this.state.close()) {\n        this.connection._register();\n    }\n};\n\n/**\n * This forcibly removes the link from the parent session. It should\n * not be called for a link on an active session/connection, where\n * close() should be used instead.\n */\nlink.remove = function() {\n    this.session.remove_link(this);\n};\n\nlink.is_open = function () {\n    return this.session.is_open() && this.state.is_open();\n};\n\nlink.is_remote_open = function () {\n    return this.session.is_remote_open() && this.state.remote_open;\n};\n\nlink.is_itself_closed = function() {\n    return this.state.is_closed();\n};\n\nlink.is_closed = function () {\n    return this.session.is_closed() || this.is_itself_closed();\n};\n\nlink._process = function () {\n    do {\n        if (this.state.need_open()) {\n            this.session.output(this.local.attach);\n        }\n\n        if (this.issue_flow && this.state.local_open) {\n            this.session._write_flow(this);\n            this.issue_flow = false;\n        }\n\n        if (this.state.need_close()) {\n            this.session.output(this.local.detach);\n        }\n    } while (!this.state.has_settled());\n};\n\nlink.on_attach = function (frame) {\n    if (this.state.remote_opened()) {\n        if (!this.remote.handle) {\n            this.remote.handle = frame.handle;\n        }\n        frame.performative.source = terminus.unwrap(frame.performative.source);\n        frame.performative.target = terminus.unwrap(frame.performative.target);\n        this.remote.attach = frame.performative;\n        this.open();\n        this.dispatch(this.is_receiver() ? 'receiver_open' : 'sender_open', this._context());\n    } else {\n        throw Error('Attach already received');\n    }\n};\n\nlink.prefix_event = function (event) {\n    return (this.local.attach.role ? 'receiver_' : 'sender_') + event;\n};\n\nlink.on_detach = function (frame) {\n    if (this.state.remote_closed()) {\n        if (this._incomplete) {\n            this._incomplete.settled = true;\n        }\n        this.remote.detach = frame.performative;\n        var error = this.remote.detach.error;\n        if (error) {\n            var handled = this.dispatch(this.prefix_event('error'), this._context());\n            handled = this.dispatch(this.prefix_event('close'), this._context()) || handled;\n            if (!handled) {\n                EventEmitter.prototype.emit.call(this.connection.container, 'error', new LinkError(error.description, error.condition, this));\n            }\n        } else {\n            this.dispatch(this.prefix_event('close'), this._context());\n        }\n        var self = this;\n        var token = this.state.mark();\n        process.nextTick(function () {\n            if (self.state.marker === token) {\n                self.close();\n                process.nextTick(function () { self.remove(); });\n            }\n        });\n    } else {\n        throw Error('Detach already received');\n    }\n};\n\nfunction is_internal(name) {\n    switch (name) {\n    case 'name':\n    case 'handle':\n    case 'role':\n    case 'initial_delivery_count':\n        return true;\n    default:\n        return false;\n    }\n}\n\n\nvar aliases = [\n    'snd_settle_mode',\n    'rcv_settle_mode',\n    'source',\n    'target',\n    'max_message_size',\n    'offered_capabilities',\n    'desired_capabilities',\n    'properties'\n];\n\nfunction remote_property_shortcut(name) {\n    return function() { return this.remote.attach ? this.remote.attach[name] : undefined; };\n}\n\nlink.init = function (session, name, local_handle, opts, is_receiver) {\n    this.session = session;\n    this.connection = session.connection;\n    this.name = name;\n    this.options = opts === undefined ? {} : opts;\n    this.state = new EndpointState();\n    this.issue_flow = false;\n    this.local = {'handle': local_handle};\n    this.local.attach = frames.attach({'handle':local_handle,'name':name, role:is_receiver});\n    for (var field in this.local.attach) {\n        if (!is_internal(field) && this.options[field] !== undefined) {\n            this.local.attach[field] = this.options[field];\n        }\n    }\n    this.local.detach = frames.detach({'handle':local_handle, 'closed':true});\n    this.remote = {'handle':undefined};\n    this.delivery_count = 0;\n    this.credit = 0;\n    this.observers = new EventEmitter();\n    for (var i in aliases) {\n        var alias = aliases[i];\n        Object.defineProperty(this, alias, { get: remote_property_shortcut(alias) });\n    }\n    Object.defineProperty(this, 'error', { get:  function() { return this.remote.detach ? this.remote.detach.error : undefined; }});\n};\n\nlink._disconnect = function() {\n    this.state.disconnected();\n    if (!this.state.was_open) {\n        this.remove();\n    }\n};\n\nlink._reconnect = function() {\n    this.state.reconnect();\n    this.remote = {'handle':undefined};\n    this.delivery_count = 0;\n    this.credit = 0;\n};\n\nlink.has_credit = function () {\n    return this.credit > 0;\n};\nlink.is_receiver = function () {\n    return this.local.attach.role;\n};\nlink.is_sender = function () {\n    return !this.is_receiver();\n};\nlink._context = function (c) {\n    var context = c ? c : {};\n    if (this.is_receiver()) {\n        context.receiver = this;\n    } else {\n        context.sender = this;\n    }\n    return this.session._context(context);\n};\nlink.get_option = function (name, default_value) {\n    if (this.options[name] !== undefined) return this.options[name];\n    else return this.session.get_option(name, default_value);\n};\n\nvar Sender = function (session, name, local_handle, opts) {\n    this.init(session, name, local_handle, opts, false);\n    this._draining = false;\n    this._drained = false;\n    this.local.attach.initial_delivery_count = 0;\n    this.tag = 0;\n    if (this.get_option('autosettle', true)) {\n        this.observers.on('settled', auto_settle);\n    }\n    var sender = this;\n    if (this.get_option('treat_modified_as_released', true)) {\n        this.observers.on('modified', function (context) {\n            sender.dispatch('released', context);\n        });\n    }\n};\nSender.prototype = Object.create(link);\nSender.prototype.constructor = Sender;\nSender.prototype._get_drain = function () {\n    if (this._draining && this._drained && this.credit) {\n        while (this.credit) {\n            ++this.delivery_count;\n            --this.credit;\n        }\n        return true;\n    } else {\n        return false;\n    }\n};\nSender.prototype.set_drained = function (drained) {\n    this._drained = drained;\n    if (this._draining && this._drained) {\n        this.issue_flow = true;\n    }\n};\nSender.prototype.next_tag = function () {\n    return Buffer.from(new String(this.tag++));\n};\nSender.prototype.sendable = function () {\n    return Boolean(this.credit && this.session.outgoing.available());\n};\nSender.prototype.on_flow = function (frame) {\n    var flow = frame.performative;\n    this.credit = flow.delivery_count + flow.link_credit - this.delivery_count;\n    this._draining = flow.drain;\n    this._drained = this.credit > 0;\n    if (this.is_open()) {\n        this.dispatch('sender_flow', this._context());\n        if (this._draining) {\n            this.dispatch('sender_draining', this._context());\n        }\n        if (this.sendable()) {\n            this.dispatch('sendable', this._context());\n        }\n    }\n};\nSender.prototype.on_transfer = function () {\n    throw Error('got transfer on sending link');\n};\n\nSender.prototype.send = function (msg, tag, format) {\n    var payload = format === undefined ? message.encode(msg) : msg;\n    var delivery = this.session.send(this, tag ? tag : this.next_tag(), payload, format);\n    if (this.local.attach.snd_settle_mode === 1) {\n        delivery.settled = true;\n    }\n    return delivery;\n};\n\nvar Receiver = function (session, name, local_handle, opts) {\n    this.init(session, name, local_handle, opts, true);\n    this.drain = false;\n    this.set_credit_window(this.get_option('credit_window', 1000));\n    if (this.get_option('autoaccept', true)) {\n        this.observers.on('message', auto_accept);\n    }\n    if (this.local.attach.rcv_settle_mode === 1 && this.get_option('autosettle', true)) {\n        this.observers.on('settled', auto_settle);\n    }\n};\nReceiver.prototype = Object.create(link);\nReceiver.prototype.constructor = Receiver;\nReceiver.prototype.on_flow = function (frame) {\n    this.dispatch('receiver_flow', this._context());\n    if (frame.performative.drain) {\n        this.credit = frame.performative.link_credit;\n        this.delivery_count = frame.performative.delivery_count;\n        if (frame.performative.link_credit > 0) console.error('ERROR: received flow with drain set, but non zero credit');\n        else this.dispatch('receiver_drained', this._context());\n    }\n};\nReceiver.prototype.flow = function(credit) {\n    if (credit > 0) {\n        this.credit += credit;\n        this.issue_flow = true;\n        this.connection._register();\n    }\n};\nReceiver.prototype.add_credit = Receiver.prototype.flow;//alias\nReceiver.prototype._get_drain = function () {\n    return this.drain;\n};\n\nReceiver.prototype.set_credit_window = function(credit_window) {\n    if (credit_window > 0) {\n        var flow_controller = new FlowController(credit_window);\n        var listener = flow_controller.update.bind(flow_controller);\n        this.observers.on('message', listener);\n        this.observers.on('receiver_open', listener);\n    }\n};\n\nmodule.exports = {'Sender': Sender, 'Receiver':Receiver};\n","/*\n * Copyright 2015 Red Hat Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nvar frames = require('./frames.js');\nvar link = require('./link.js');\nvar log = require('./log.js');\nvar message = require('./message.js');\nvar types = require('./types.js');\nvar util = require('./util.js');\nvar EndpointState = require('./endpoint.js');\n\nvar EventEmitter = require('events').EventEmitter;\n\nfunction SessionError(message, condition, session) {\n    Error.call(this);\n    Error.captureStackTrace(this, this.constructor);\n    this.message = message;\n    this.condition = condition;\n    this.description = message;\n    this.session = session;\n}\nrequire('util').inherits(SessionError, Error);\n\nvar CircularBuffer = function (capacity) {\n    this.capacity = capacity;\n    this.size = 0;\n    this.head = 0;\n    this.tail = 0;\n    this.entries = [];\n};\n\nCircularBuffer.prototype.available = function () {\n    return this.capacity - this.size;\n};\n\nCircularBuffer.prototype.push = function (o) {\n    if (this.size < this.capacity) {\n        this.entries[this.tail] = o;\n        this.tail = (this.tail + 1) % this.capacity;\n        this.size++;\n    } else {\n        throw Error('circular buffer overflow: head=' + this.head + ' tail=' + this.tail + ' size=' + this.size + ' capacity=' + this.capacity);\n    }\n};\n\nCircularBuffer.prototype.pop_if = function (f) {\n    var count = 0;\n    while (this.size && f(this.entries[this.head])) {\n        this.entries[this.head] = undefined;\n        this.head = (this.head + 1) % this.capacity;\n        this.size--;\n        count++;\n    }\n    return count;\n};\n\nCircularBuffer.prototype.by_id = function (id) {\n    if (this.size > 0) {\n        var gap = id - this.entries[this.head].id;\n        if (gap < this.size) {\n            return this.entries[(this.head + gap) % this.capacity];\n        }\n    }\n    return undefined;\n};\n\nCircularBuffer.prototype.get_head = function () {\n    return this.size > 0 ? this.entries[this.head] : undefined;\n};\n\nCircularBuffer.prototype.get_tail = function () {\n    return this.size > 0 ? this.entries[(this.head + this.size - 1) % this.capacity] : undefined;\n};\n\nfunction write_dispositions(deliveries) {\n    var first, last, next_id, i, delivery;\n\n    for (i = 0; i < deliveries.length; i++) {\n        delivery = deliveries[i];\n        if (first === undefined) {\n            first = delivery;\n            last = delivery;\n            next_id = delivery.id;\n        }\n\n        if ((first !== last && !message.are_outcomes_equivalent(last.state, delivery.state)) || last.settled !== delivery.settled || next_id !== delivery.id) {\n            first.link.session.output(frames.disposition({'role' : first.link.is_receiver(), 'first' : first.id, 'last' : last.id, 'state' : first.state, 'settled' : first.settled}));\n            first = delivery;\n            last = delivery;\n            next_id = delivery.id;\n        } else {\n            if (last.id !== delivery.id) {\n                last = delivery;\n            }\n            next_id++;\n        }\n    }\n    if (first !== undefined && last !== undefined) {\n        first.link.session.output(frames.disposition({'role' : first.link.is_receiver(), 'first' : first.id, 'last' : last.id, 'state' : first.state, 'settled' : first.settled}));\n    }\n}\n\nvar Outgoing = function (connection) {\n    /* TODO: make size configurable? */\n    this.deliveries = new CircularBuffer(2048);\n    this.updated = [];\n    this.pending_dispositions = [];\n    this.next_delivery_id = 0;\n    this.next_pending_delivery = 0;\n    this.next_transfer_id = 0;\n    this.window = types.MAX_UINT;\n    this.remote_next_transfer_id = undefined;\n    this.remote_window = undefined;\n    this.connection = connection;\n};\n\nOutgoing.prototype.available = function () {\n    return this.deliveries.available();\n};\n\nOutgoing.prototype.compute_max_payload = function (tag) {\n    if (this.connection.max_frame_size) {\n        return this.connection.max_frame_size - (50 + tag.length);\n    } else {\n        return undefined;\n    }\n};\n\nOutgoing.prototype.send = function (sender, tag, data, format) {\n    var fragments = [];\n    var max_payload = this.compute_max_payload(tag);\n    if (max_payload && data.length > max_payload) {\n        var start = 0;\n        while (start < data.length) {\n            var end = Math.min(start + max_payload, data.length);\n            fragments.push(data.slice(start, end));\n            start = end;\n        }\n    } else {\n        fragments.push(data);\n    }\n    var d = {\n        'id':this.next_delivery_id++,\n        'tag':tag,\n        'link':sender,\n        'data': fragments,\n        'format':format ? format : 0,\n        'sent': false,\n        'settled': false,\n        'state': undefined,\n        'remote_settled': false,\n        'remote_state': undefined\n    };\n    var self = this;\n    d.update = function (settled, state) {\n        self.update(d, settled, state);\n    };\n    this.deliveries.push(d);\n    return d;\n};\n\nOutgoing.prototype.on_begin = function (fields) {\n    this.remote_window = fields.incoming_window;\n};\n\nOutgoing.prototype.on_flow = function (fields) {\n    this.remote_next_transfer_id = fields.next_incoming_id;\n    this.remote_window = fields.incoming_window;\n};\n\nOutgoing.prototype.on_disposition = function (fields) {\n    var last = fields.last ? fields.last : fields.first;\n    for (var i = fields.first; i <= last; i++) {\n        var d = this.deliveries.by_id(i);\n        if (d && !d.remote_settled) {\n            var updated = false;\n            if (fields.settled) {\n                d.remote_settled = fields.settled;\n                updated = true;\n            }\n            if (fields.state && fields.state !== d.remote_state) {\n                d.remote_state = message.unwrap_outcome(fields.state);\n                updated = true;\n            }\n            if (updated) {\n                this.updated.push(d);\n            }\n        }\n    }\n};\n\nOutgoing.prototype.update = function (delivery, settled, state) {\n    if (delivery) {\n        delivery.settled = settled;\n        if (state !== undefined) delivery.state = state;\n        if (!delivery.remote_settled) {\n            this.pending_dispositions.push(delivery);\n        }\n        delivery.link.connection._register();\n    }\n};\n\nOutgoing.prototype.transfer_window = function() {\n    if (this.remote_window) {\n        return this.remote_window - (this.next_transfer_id - this.remote_next_transfer_id);\n    } else {\n        return 0;\n    }\n};\n\nOutgoing.prototype.process = function() {\n    var d;\n    // send pending deliveries for which there is credit:\n    while (this.next_pending_delivery < this.next_delivery_id) {\n        d = this.deliveries.by_id(this.next_pending_delivery);\n        if (d) {\n            if (d.link.has_credit()) {\n                if (this.transfer_window() >= d.data.length) {\n                    this.window -= d.data.length;\n                    for (var i = 0; i < d.data.length; i++) {\n                        this.next_transfer_id++;\n                        var more = (i+1) < d.data.length;\n                        var transfer = frames.transfer({'handle':d.link.local.handle,'message_format':d.format,'delivery_id':d.id, 'delivery_tag':d.tag, 'settled':d.settled, 'more':more});\n                        d.link.session.output(transfer, d.data[i]);\n                        if (d.settled) {\n                            d.remote_settled = true;//if sending presettled, it can now be cleaned up\n                        }\n                    }\n                    d.link.credit--;\n                    d.link.delivery_count++;\n                    this.next_pending_delivery++;\n                } else {\n                    log.flow('[%s] Incoming window of peer preventing sending further transfers: remote_window=%d, remote_next_transfer_id=%d, next_transfer_id=%d',\n                        this.connection.options.id, this.remote_window, this.remote_next_transfer_id, this.next_transfer_id);\n                    break;\n                }\n            } else {\n                log.flow('[%s] Link has no credit', this.connection.options.id);\n                break;\n            }\n        } else {\n            console.error('ERROR: Next pending delivery not found: ' + this.next_pending_delivery);\n            break;\n        }\n    }\n\n    // notify application of any updated deliveries:\n    for (var i = 0; i < this.updated.length; i++) {\n        d = this.updated[i];\n        if (d.remote_state && d.remote_state.constructor.composite_type) {\n            d.link.dispatch(d.remote_state.constructor.composite_type, d.link._context({'delivery':d}));\n        }\n        if (d.remote_settled) d.link.dispatch('settled', d.link._context({'delivery':d}));\n    }\n    this.updated = [];\n\n    if (this.pending_dispositions.length) {\n        write_dispositions(this.pending_dispositions);\n        this.pending_dispositions = [];\n    }\n\n    // remove any fully settled deliveries:\n    this.deliveries.pop_if(function (d) { return d.settled && d.remote_settled; });\n};\n\nvar Incoming = function () {\n    this.deliveries = new CircularBuffer(2048/*TODO: configurable?*/);\n    this.updated = [];\n    this.next_transfer_id = 0;\n    this.next_delivery_id = undefined;\n    Object.defineProperty(this, 'window', { get: function () { return this.deliveries.available(); } });\n    this.remote_next_transfer_id = undefined;\n    this.remote_window = undefined;\n    this.max_transfer_id = this.next_transfer_id + this.window;\n};\n\nIncoming.prototype.update = function (delivery, settled, state) {\n    if (delivery) {\n        delivery.settled = settled;\n        if (state !== undefined) delivery.state = state;\n        if (!delivery.remote_settled) {\n            this.updated.push(delivery);\n        }\n        delivery.link.connection._register();\n    }\n};\n\nIncoming.prototype.on_transfer = function(frame, receiver) {\n    this.next_transfer_id++;\n    if (receiver.is_remote_open()) {\n        if (this.next_delivery_id === undefined) {\n            this.next_delivery_id = frame.performative.delivery_id;\n        }\n        var current;\n        var data;\n        if (receiver._incomplete) {\n            current = receiver._incomplete;\n            if (util.is_defined(frame.performative.delivery_id) && current.id !== frame.performative.delivery_id) {\n                throw Error('frame sequence error: delivery ' + current.id + ' not complete, got ' + frame.performative.delivery_id);\n            }\n            data = Buffer.concat([current.data, frame.payload], current.data.length + frame.payload.length);\n        } else if (this.next_delivery_id === frame.performative.delivery_id) {\n            current = {'id':frame.performative.delivery_id,\n                'tag':frame.performative.delivery_tag,\n                'format':frame.performative.message_format,\n                'link':receiver,\n                'settled': false,\n                'state': undefined,\n                'remote_settled': frame.performative.settled === undefined ? false : frame.performative.settled,\n                'remote_state': frame.performative.state};\n            var self = this;\n            current.update = function (settled, state) {\n                var settled_ = settled;\n                if (settled_ === undefined) {\n                    settled_ = receiver.local.attach.rcv_settle_mode !== 1;\n                }\n                self.update(current, settled_, state);\n            };\n            current.accept = function () { this.update(undefined, message.accepted().described()); };\n            current.release = function (params) {\n                if (params) {\n                    this.update(undefined, message.modified(params).described());\n                } else {\n                    this.update(undefined, message.released().described());\n                }\n            };\n            current.reject = function (error) { this.update(undefined, message.rejected({'error':error}).described()); };\n            current.modified = function (params) { this.update(undefined, message.modified(params).described()); };\n\n            this.deliveries.push(current);\n            this.next_delivery_id++;\n            data = frame.payload;\n        } else {\n            //TODO: better error handling\n            throw Error('frame sequence error: expected ' + this.next_delivery_id + ', got ' + frame.performative.delivery_id);\n        }\n        current.incomplete = frame.performative.more;\n        if (current.incomplete) {\n            receiver._incomplete = current;\n            current.data = data;\n        } else {\n            receiver._incomplete = undefined;\n            if (receiver.credit > 0) receiver.credit--;\n            else console.error('Received transfer when credit was %d', receiver.credit);\n            receiver.delivery_count++;\n            var msgctxt = current.format === 0 ? {'message':message.decode(data), 'delivery':current} : {'message':data, 'delivery':current, 'format':current.format};\n            receiver.dispatch('message', receiver._context(msgctxt));\n        }\n    } else {\n        throw Error('transfer after detach');\n    }\n};\n\nIncoming.prototype.process = function (session) {\n    if (this.updated.length > 0) {\n        write_dispositions(this.updated);\n        this.updated = [];\n    }\n\n    // remove any fully settled deliveries:\n    this.deliveries.pop_if(function (d) { return d.settled; });\n\n    if (this.max_transfer_id - this.next_transfer_id < (this.window / 2)) {\n        session._write_flow();\n    }\n};\n\nIncoming.prototype.on_begin = function (fields) {\n    this.remote_window = fields.outgoing_window;\n    this.remote_next_transfer_id = fields.next_outgoing_id;\n};\n\nIncoming.prototype.on_flow = function (fields) {\n    this.remote_next_transfer_id = fields.next_outgoing_id;\n    this.remote_window = fields.outgoing_window;\n};\n\nIncoming.prototype.on_disposition = function (fields) {\n    var last = fields.last ? fields.last : fields.first;\n    for (var i = fields.first; i <= last; i++) {\n        var d = this.deliveries.by_id(i);\n        if (d && !d.remote_settled) {\n            if (fields.state && fields.state !== d.remote_state) {\n                d.remote_state = message.unwrap_outcome(fields.state);\n            }\n            if (fields.settled) {\n                d.remote_settled = fields.settled;\n                d.link.dispatch('settled', d.link._context({'delivery':d}));\n            }\n        }\n    }\n};\n\nvar Session = function (connection, local_channel) {\n    this.connection = connection;\n    this.outgoing = new Outgoing(connection);\n    this.incoming = new Incoming();\n    this.state = new EndpointState();\n    this.local = {'channel': local_channel, 'handles':{}};\n    this.local.begin = frames.begin({next_outgoing_id:this.outgoing.next_transfer_id,incoming_window:this.incoming.window,outgoing_window:this.outgoing.window});\n    this.local.end = frames.end();\n    this.remote = {'handles':{}};\n    this.links = {}; // map by name\n    this.options = {};\n    Object.defineProperty(this, 'error', { get:  function() { return this.remote.end ? this.remote.end.error : undefined; }});\n    this.observers = new EventEmitter();\n};\nSession.prototype = Object.create(EventEmitter.prototype);\nSession.prototype.constructor = Session;\n\nSession.prototype._disconnect = function() {\n    this.state.disconnected();\n    for (var l in this.links) {\n        this.links[l]._disconnect();\n    }\n    if (!this.state.was_open) {\n        this.remove();\n    }\n};\n\nSession.prototype._reconnect = function() {\n    this.state.reconnect();\n    this.outgoing = new Outgoing(this.connection);\n    this.incoming = new Incoming();\n    this.remote = {'handles':{}};\n    for (var l in this.links) {\n        this.links[l]._reconnect();\n    }\n};\n\nSession.prototype.dispatch = function(name) {\n    log.events('[%s] Session got event: %s', this.connection.options.id, name);\n    EventEmitter.prototype.emit.apply(this.observers, arguments);\n    if (this.listeners(name).length) {\n        EventEmitter.prototype.emit.apply(this, arguments);\n        return true;\n    } else {\n        return this.connection.dispatch.apply(this.connection, arguments);\n    }\n};\nSession.prototype.output = function (frame, payload) {\n    this.connection._write_frame(this.local.channel, frame, payload);\n};\n\nSession.prototype.create_sender = function (name, opts) {\n    return this.create_link(name, link.Sender, opts);\n};\n\nSession.prototype.create_receiver = function (name, opts) {\n    return this.create_link(name, link.Receiver, opts);\n};\n\nfunction merge(defaults, specific) {\n    for (var f in specific) {\n        if (f === 'properties' && defaults.properties) {\n            merge(defaults.properties, specific.properties);\n        } else {\n            defaults[f] = specific[f];\n        }\n    }\n}\n\nfunction attach(factory, args, remote_terminus, default_args) {\n    var opts = Object.create(default_args || {});\n    if (typeof args === 'string') {\n        opts[remote_terminus] = args;\n    } else if (args) {\n        merge(opts, args);\n    }\n    if (!opts.name) opts.name = util.generate_uuid();\n    var l = factory(opts.name, opts);\n    for (var t in {'source':0, 'target':0}) {\n        if (opts[t]) {\n            if (typeof opts[t] === 'string') {\n                opts[t] = {'address' : opts[t]};\n            }\n            l['set_' + t](opts[t]);\n        }\n    }\n    if (l.is_sender() && opts.source === undefined) {\n        opts.source = l.set_source({});\n    }\n    if (l.is_receiver() && opts.target === undefined) {\n        opts.target = l.set_target({});\n    }\n    l.attach();\n    return l;\n}\n\nSession.prototype.get_option = function (name, default_value) {\n    if (this.options[name] !== undefined) return this.options[name];\n    else return this.connection.get_option(name, default_value);\n};\n\nSession.prototype.attach_sender = function (args) {\n    return attach(this.create_sender.bind(this), args, 'target', this.get_option('sender_options', {}));\n};\nSession.prototype.open_sender = Session.prototype.attach_sender;//alias\n\nSession.prototype.attach_receiver = function (args) {\n    return attach(this.create_receiver.bind(this), args, 'source', this.get_option('receiver_options', {}));\n};\nSession.prototype.open_receiver = Session.prototype.attach_receiver;//alias\n\nSession.prototype.find_sender = function (filter) {\n    return this.find_link(util.sender_filter(filter));\n};\n\nSession.prototype.find_receiver = function (filter) {\n    return this.find_link(util.receiver_filter(filter));\n};\n\nSession.prototype.find_link = function (filter) {\n    for (var name in this.links) {\n        var link = this.links[name];\n        if (filter(link)) return link;\n    }\n    return undefined;\n};\n\nSession.prototype.each_receiver = function (action, filter) {\n    this.each_link(action, util.receiver_filter(filter));\n};\n\nSession.prototype.each_sender = function (action, filter) {\n    this.each_link(action, util.sender_filter(filter));\n};\n\nSession.prototype.each_link = function (action, filter) {\n    for (var name in this.links) {\n        var link = this.links[name];\n        if (filter === undefined || filter(link)) action(link);\n    }\n};\n\nSession.prototype.create_link = function (name, constructor, opts) {\n    var i = 0;\n    while (this.local.handles[i]) i++;\n    var l = new constructor(this, name, i, opts);\n    this.links[name] = l;\n    this.local.handles[i] = l;\n    return l;\n};\n\nSession.prototype.begin = function () {\n    if (this.state.open()) {\n        this.connection._register();\n    }\n};\nSession.prototype.open = Session.prototype.begin;\n\nSession.prototype.end = function (error) {\n    if (error) this.local.end.error = error;\n    if (this.state.close()) {\n        this.connection._register();\n    }\n};\nSession.prototype.close = Session.prototype.end;\n\nSession.prototype.is_open = function () {\n    return this.connection.is_open() && this.state.is_open();\n};\n\nSession.prototype.is_remote_open = function () {\n    return this.connection.is_remote_open() && this.state.remote_open;\n};\n\nSession.prototype.is_itself_closed = function () {\n    return this.state.is_closed();\n};\n\nSession.prototype.is_closed = function () {\n    return this.connection.is_closed() || this.is_itself_closed();\n};\n\nfunction notify_sendable(sender) {\n    sender.dispatch('sendable', sender._context());\n}\n\nfunction is_sender_sendable(sender) {\n    return sender.is_open() && sender.sendable();\n}\n\nSession.prototype._process = function () {\n    do {\n        if (this.state.need_open()) {\n            this.output(this.local.begin);\n        }\n\n        var was_blocked = this.outgoing.deliveries.available() === 0;\n        this.outgoing.process();\n        if (was_blocked && this.outgoing.deliveries.available()) {\n            this.each_sender(notify_sendable, is_sender_sendable);\n        }\n        this.incoming.process(this);\n        for (var k in this.links) {\n            this.links[k]._process();\n        }\n\n        if (this.state.need_close()) {\n            this.output(this.local.end);\n        }\n    } while (!this.state.has_settled());\n};\n\nSession.prototype.send = function (sender, tag, data, format) {\n    var d = this.outgoing.send(sender, tag, data, format);\n    this.connection._register();\n    return d;\n};\n\nSession.prototype._write_flow = function (link) {\n    var fields = {'next_incoming_id':this.incoming.next_transfer_id,\n        'incoming_window':this.incoming.window,\n        'next_outgoing_id':this.outgoing.next_transfer_id,\n        'outgoing_window':this.outgoing.window\n    };\n    this.incoming.max_transfer_id = fields.next_incoming_id + fields.incoming_window;\n    if (link) {\n        if (link._get_drain()) fields.drain = true;\n        fields.delivery_count = link.delivery_count;\n        fields.handle = link.local.handle;\n        fields.link_credit = link.credit;\n    }\n    this.output(frames.flow(fields));\n};\n\nSession.prototype.on_begin = function (frame) {\n    if (this.state.remote_opened()) {\n        if (!this.remote.channel) {\n            this.remote.channel = frame.channel;\n        }\n        this.remote.begin = frame.performative;\n        this.outgoing.on_begin(frame.performative);\n        this.incoming.on_begin(frame.performative);\n        this.open();\n        this.dispatch('session_open', this._context());\n    } else {\n        throw Error('Begin already received');\n    }\n};\nSession.prototype.on_end = function (frame) {\n    if (this.state.remote_closed()) {\n        this.remote.end = frame.performative;\n        var error = this.remote.end.error;\n        if (error) {\n            var handled = this.dispatch('session_error', this._context());\n            handled = this.dispatch('session_close', this._context()) || handled;\n            if (!handled) {\n                EventEmitter.prototype.emit.call(this.connection.container, 'error', new SessionError(error.description, error.condition, this));\n            }\n        } else {\n            this.dispatch('session_close', this._context());\n        }\n        var self = this;\n        var token = this.state.mark();\n        process.nextTick(function () {\n            if (self.state.marker === token) {\n                self.close();\n                process.nextTick(function () { self.remove(); });\n            }\n        });\n    } else {\n        throw Error('End already received');\n    }\n};\n\nSession.prototype.on_attach = function (frame) {\n    var name = frame.performative.name;\n    var link = this.links[name];\n    if (!link) {\n        // if role is true, peer is receiver, so we are sender\n        link = frame.performative.role ? this.create_sender(name) : this.create_receiver(name);\n    }\n    this.remote.handles[frame.performative.handle] = link;\n    link.on_attach(frame);\n    link.remote.attach = frame.performative;\n};\n\nSession.prototype.on_disposition = function (frame) {\n    if (frame.performative.role) {\n        log.events('[%s] Received disposition for outgoing transfers', this.connection.options.id);\n        this.outgoing.on_disposition(frame.performative);\n    } else {\n        log.events('[%s] Received disposition for incoming transfers', this.connection.options.id);\n        this.incoming.on_disposition(frame.performative);\n    }\n    this.connection._register();\n};\n\nSession.prototype.on_flow = function (frame) {\n    this.outgoing.on_flow(frame.performative);\n    this.incoming.on_flow(frame.performative);\n    if (util.is_defined(frame.performative.handle)) {\n        this._get_link(frame).on_flow(frame);\n    }\n    this.connection._register();\n};\n\nSession.prototype._context = function (c) {\n    var context = c ? c : {};\n    context.session = this;\n    return this.connection._context(context);\n};\n\nSession.prototype._get_link = function (frame) {\n    var handle = frame.performative.handle;\n    var link = this.remote.handles[handle];\n    if (!link) {\n        throw Error('Invalid handle ' + handle);\n    }\n    return link;\n};\n\nSession.prototype.on_detach = function (frame) {\n    this._get_link(frame).on_detach(frame);\n};\n\nSession.prototype.remove_link = function (link) {\n    delete this.remote.handles[link.remote.handle];\n    delete this.local.handles[link.local.handle];\n    delete this.links[link.name];\n};\n\n/**\n * This forcibly removes the session from the parent connection. It\n * should not be called for a link on an active connection, where\n * close() should be used instead.\n */\nSession.prototype.remove = function () {\n    this.connection.remove_session(this);\n};\n\nSession.prototype.on_transfer = function (frame) {\n    this.incoming.on_transfer(frame, this._get_link(frame));\n};\n\nmodule.exports = Session;\n","/*\n * Copyright 2015 Red Hat Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nvar errors = require('./errors.js');\nvar frames = require('./frames.js');\nvar log = require('./log.js');\nvar sasl = require('./sasl.js');\nvar util = require('./util.js');\nvar EndpointState = require('./endpoint.js');\nvar Session = require('./session.js');\nvar Transport = require('./transport.js');\n\nvar fs = require('fs');\nvar os = require('os');\nvar path = require('path');\nvar net = require('net');\nvar tls = require('tls');\nvar EventEmitter = require('events').EventEmitter;\n\nvar AMQP_PROTOCOL_ID = 0x00;\n\nfunction find_connect_config() {\n    var paths;\n    if (process.env.MESSAGING_CONNECT_FILE) {\n        paths = [process.env.MESSAGING_CONNECT_FILE];\n    } else {\n        paths = [process.cwd(), path.join(os.homedir(), '.config/messaging'),'/etc/messaging'].map(function (base) { return path.join(base, '/connect.json'); });\n    }\n    for (var i = 0; i < paths.length; i++) {\n        if (fs.existsSync(paths[i])) {\n            var obj = JSON.parse(fs.readFileSync(paths[i], 'utf8'));\n            log.config('using config from %s: %j', paths[i], obj);\n            return obj;\n        }\n    }\n    return {};\n}\n\nfunction get_default_connect_config() {\n    var config = find_connect_config();\n    var options = {};\n    if (config.scheme === 'amqps') options.transport = 'tls';\n    if (config.host) options.host = config.host;\n    if(config.port === 'amqp') options.port = 5672;\n    else if(config.port === 'amqps') options.port = 5671;\n    else options.port = config.port;\n    if (!(config.sasl && config.sasl.enabled === false)) {\n        if (config.user) options.username = config.user;\n        else options.username = 'anonymous';\n        if (config.password) options.password = config.password;\n        if (config.sasl_mechanisms) options.sasl_mechanisms = config.sasl_mechanisms;\n    }\n    if (config.tls) {\n        if (config.tls.key) options.key = fs.readFileSync(config.tls.key);\n        if (config.tls.cert) options.cert = fs.readFileSync(config.tls.cert);\n        if (config.tls.ca) options.ca = [ fs.readFileSync(config.tls.ca) ];\n        if (config.verify === false || config.tls.verify === false) options.rejectUnauthorized = false;\n    }\n    if (options.transport === 'tls') {\n        options.servername = options.host;\n    }\n    return options;\n}\n\nfunction get_socket_id(socket) {\n    if (socket.get_id_string) return socket.get_id_string();\n    return socket.localAddress + ':' + socket.localPort + ' -> ' + socket.remoteAddress + ':' + socket.remotePort;\n}\n\nfunction session_per_connection(conn) {\n    var ssn = null;\n    return {\n        'get_session' : function () {\n            if (!ssn) {\n                ssn = conn.create_session();\n                ssn.observers.on('session_close', function () { ssn = null; });\n                ssn.begin();\n            }\n            return ssn;\n        }\n    };\n}\n\nfunction restrict(count, f) {\n    if (count) {\n        var current = count;\n        var reset;\n        return function (successful_attempts) {\n            if (reset !== successful_attempts) {\n                current = count;\n                reset = successful_attempts;\n            }\n            if (current--) return f(successful_attempts);\n            else return -1;\n        };\n    } else {\n        return f;\n    }\n}\n\nfunction backoff(initial, max) {\n    var delay = initial;\n    var reset;\n    return function (successful_attempts) {\n        if (reset !== successful_attempts) {\n            delay = initial;\n            reset = successful_attempts;\n        }\n        var current = delay;\n        var next = delay*2;\n        delay = max > next ? next : max;\n        return current;\n    };\n}\n\nfunction get_connect_fn(options) {\n    if (options.transport === undefined || options.transport === 'tcp') {\n        return net.connect;\n    } else if (options.transport === 'tls' || options.transport === 'ssl') {\n        return tls.connect;\n    } else {\n        throw Error('Unrecognised transport: ' + options.transport);\n    }\n}\n\nfunction connection_details(options) {\n    var details = {};\n    details.connect = options.connect ? options.connect : get_connect_fn(options);\n    details.host = options.host ? options.host : 'localhost';\n    details.port = options.port ? options.port : 5672;\n    details.options = options;\n    return details;\n}\n\nvar aliases = [\n    'container_id',\n    'hostname',\n    'max_frame_size',\n    'channel_max',\n    'idle_time_out',\n    'outgoing_locales',\n    'incoming_locales',\n    'offered_capabilities',\n    'desired_capabilities',\n    'properties'\n];\n\nfunction remote_property_shortcut(name) {\n    return function() { return this.remote.open ? this.remote.open[name] : undefined; };\n}\n\nfunction connection_fields(fields) {\n    var o = {};\n    aliases.forEach(function (name) {\n        if (fields[name] !== undefined) {\n            o[name] = fields[name];\n        }\n    });\n    return o;\n}\n\nvar conn_counter = 1;\n\nvar Connection = function (options, container) {\n    this.options = {};\n    if (options) {\n        for (var k in options) {\n            this.options[k] = options[k];\n        }\n        if ((options.transport === 'tls' || options.transport === 'ssl')\n            && options.servername === undefined && options.host !== undefined) {\n            this.options.servername = options.host;\n        }\n    } else {\n        this.options = get_default_connect_config();\n    }\n    this.container = container;\n    if (!this.options.id) {\n        this.options.id = 'connection-' + conn_counter++;\n    }\n    if (!this.options.container_id) {\n        this.options.container_id = container ? container.id : util.generate_uuid();\n    }\n    if (!this.options.connection_details) {\n        var self = this;\n        this.options.connection_details = function() { return connection_details(self.options); };\n    }\n    var reconnect = this.get_option('reconnect', true);\n    if (typeof reconnect === 'boolean' && reconnect) {\n        var initial = this.get_option('initial_reconnect_delay', 100);\n        var max = this.get_option('max_reconnect_delay', 60000);\n        this.options.reconnect = restrict(this.get_option('reconnect_limit'), backoff(initial, max));\n    } else if (typeof reconnect === 'number') {\n        var fixed = this.options.reconnect;\n        this.options.reconnect = restrict(this.get_option('reconnect_limit'), function () { return fixed; });\n    }\n    this.registered = false;\n    this.state = new EndpointState();\n    this.local_channel_map = {};\n    this.remote_channel_map = {};\n    this.local = {};\n    this.remote = {};\n    this.local.open = frames.open(connection_fields(this.options));\n    this.local.close = frames.close({});\n    this.session_policy = session_per_connection(this);\n    this.amqp_transport = new Transport(this.options.id, AMQP_PROTOCOL_ID, frames.TYPE_AMQP, this);\n    this.sasl_transport = undefined;\n    this.transport = this.amqp_transport;\n    this.conn_established_counter = 0;\n    this.heartbeat_out = undefined;\n    this.heartbeat_in = undefined;\n    this.abort_idle = false;\n    this.socket_ready = false;\n    this.scheduled_reconnect = undefined;\n    this.default_sender = undefined;\n    this.closed_with_non_fatal_error = false;\n\n    for (var i in aliases) {\n        var f = aliases[i];\n        Object.defineProperty(this, f, { get: remote_property_shortcut(f) });\n    }\n    Object.defineProperty(this, 'error', { get:  function() { return this.remote.close ? this.remote.close.error : undefined; }});\n};\n\nConnection.prototype = Object.create(EventEmitter.prototype);\nConnection.prototype.constructor = Connection;\nConnection.prototype.dispatch = function(name) {\n    log.events('[%s] Connection got event: %s', this.options.id, name);\n    if (this.listeners(name).length) {\n        EventEmitter.prototype.emit.apply(this, arguments);\n        return true;\n    } else if (this.container) {\n        return this.container.dispatch.apply(this.container, arguments);\n    } else {\n        return false;\n    }\n};\n\nConnection.prototype._disconnect = function() {\n    this.state.disconnected();\n    for (var k in this.local_channel_map) {\n        this.local_channel_map[k]._disconnect();\n    }\n    this.socket_ready = false;\n};\n\nConnection.prototype._reconnect = function() {\n    if (this.abort_idle) {\n        this.abort_idle = false;\n        this.local.close.error = undefined;\n        this.state = new EndpointState();\n        this.state.open();\n    }\n\n    this.state.reconnect();\n    this._reset_remote_state();\n};\n\nConnection.prototype._reset_remote_state = function() {\n    //reset transport\n    this.amqp_transport = new Transport(this.options.id, AMQP_PROTOCOL_ID, frames.TYPE_AMQP, this);\n    this.sasl_transport = undefined;\n    this.transport = this.amqp_transport;\n\n    //reset remote endpoint state\n    this.remote = {};\n    //reset sessions:\n    this.remote_channel_map = {};\n    for (var k in this.local_channel_map) {\n        this.local_channel_map[k]._reconnect();\n    }\n};\n\nConnection.prototype.connect = function () {\n    this.is_server = false;\n    this.abort_idle = false;\n    this._reset_remote_state();\n    this._connect(this.options.connection_details(this.conn_established_counter));\n    this.open();\n    return this;\n};\n\nConnection.prototype.reconnect = function () {\n    this.scheduled_reconnect = undefined;\n    log.reconnect('[%s] reconnecting...', this.options.id);\n    this._reconnect();\n    this._connect(this.options.connection_details(this.conn_established_counter));\n    process.nextTick(this._process.bind(this));\n    return this;\n};\n\nConnection.prototype._connect = function (details) {\n    if (details.connect) {\n        this.init(details.connect(details.port, details.host, details.options, this.connected.bind(this)));\n    } else {\n        this.init(get_connect_fn(details)(details.port, details.host, details.options, this.connected.bind(this)));\n    }\n    return this;\n};\n\nConnection.prototype.accept = function (socket) {\n    this.is_server = true;\n    log.io('[%s] client accepted: %s', this.id, get_socket_id(socket));\n    this.socket_ready = true;\n    return this.init(socket);\n};\n\n\nConnection.prototype.abort_socket = function (socket) {\n    if (socket === this.socket) {\n        log.io('[%s] aborting socket', this.options.id);\n        this.socket.end();\n        this.socket.removeAllListeners('data');\n        this.socket.removeAllListeners('error');\n        this.socket.removeAllListeners('end');\n        this._disconnected();\n    }\n};\n\nConnection.prototype.init = function (socket) {\n    this.socket = socket;\n    if (this.get_option('tcp_no_delay', false) && this.socket.setNoDelay) {\n        this.socket.setNoDelay(true);\n    }\n    this.socket.on('data', this.input.bind(this));\n    this.socket.on('error', this.on_error.bind(this));\n    this.socket.on('end', this.eof.bind(this));\n\n    if (this.is_server) {\n        var mechs;\n        if (this.container && Object.getOwnPropertyNames(this.container.sasl_server_mechanisms).length) {\n            mechs = this.container.sasl_server_mechanisms;\n        }\n        if (this.socket.encrypted && this.socket.authorized && this.get_option('enable_sasl_external', false)) {\n            mechs = sasl.server_add_external(mechs ? util.clone(mechs) : {});\n        }\n        if (mechs) {\n            if (mechs.ANONYMOUS !== undefined && !this.get_option('require_sasl', false)) {\n                this.sasl_transport = new sasl.Selective(this, mechs);\n            } else {\n                this.sasl_transport = new sasl.Server(this, mechs);\n            }\n        } else {\n            if (!this.get_option('disable_sasl', false)) {\n                var anon = sasl.server_mechanisms();\n                anon.enable_anonymous();\n                this.sasl_transport = new sasl.Selective(this, anon);\n            }\n        }\n    } else {\n        var mechanisms = this.get_option('sasl_mechanisms');\n        if (!mechanisms) {\n            var username = this.get_option('username');\n            var password = this.get_option('password');\n            var token = this.get_option('token');\n            if (username) {\n                mechanisms = sasl.client_mechanisms();\n                if (password) mechanisms.enable_plain(username, password);\n                else if (token) mechanisms.enable_xoauth2(username, token);\n                else mechanisms.enable_anonymous(username);\n            }\n        }\n        if (this.socket.encrypted && this.options.cert && this.get_option('enable_sasl_external', false)) {\n            if (!mechanisms) mechanisms = sasl.client_mechanisms();\n            mechanisms.enable_external();\n        }\n\n        if (mechanisms) {\n            this.sasl_transport = new sasl.Client(this, mechanisms, this.options.sasl_init_hostname || this.options.servername || this.options.host);\n        }\n    }\n    this.transport = this.sasl_transport ? this.sasl_transport : this.amqp_transport;\n    return this;\n};\n\nConnection.prototype.attach_sender = function (options) {\n    return this.session_policy.get_session().attach_sender(options);\n};\nConnection.prototype.open_sender = Connection.prototype.attach_sender;//alias\n\nConnection.prototype.attach_receiver = function (options) {\n    if (this.get_option('tcp_no_delay', true) && this.socket.setNoDelay) {\n        this.socket.setNoDelay(true);\n    }\n    return this.session_policy.get_session().attach_receiver(options);\n};\nConnection.prototype.open_receiver = Connection.prototype.attach_receiver;//alias\n\nConnection.prototype.get_option = function (name, default_value) {\n    if (this.options[name] !== undefined) return this.options[name];\n    else if (this.container) return this.container.get_option(name, default_value);\n    else return default_value;\n};\n\nConnection.prototype.send = function(msg) {\n    if (this.default_sender === undefined) {\n        this.default_sender = this.open_sender({target:{}});\n    }\n    return this.default_sender.send(msg);\n};\n\nConnection.prototype.connected = function () {\n    this.socket_ready = true;\n    this.conn_established_counter++;\n    log.io('[%s] connected %s', this.options.id, get_socket_id(this.socket));\n    this.output();\n};\n\nConnection.prototype.sasl_failed = function (text, condition) {\n    this.transport_error = new errors.ConnectionError(text, condition ? condition : 'amqp:unauthorized-access', this);\n    this._handle_error();\n    this.socket.end();\n};\n\nConnection.prototype._is_fatal = function (error_condition) {\n    var non_fatal = this.get_option('non_fatal_errors', ['amqp:connection:forced']);\n    return non_fatal.indexOf(error_condition) < 0;\n};\n\nConnection.prototype._handle_error = function () {\n    var error = this.get_error();\n    if (error) {\n        var handled = this.dispatch('connection_error', this._context({error:error}));\n        handled = this.dispatch('connection_close', this._context({error:error})) || handled;\n\n        if (!this._is_fatal(error.condition)) {\n            this.closed_with_non_fatal_error = true;\n        } else if (!handled) {\n            this.dispatch('error', new errors.ConnectionError(error.description, error.condition, this));\n        }\n        return true;\n    } else {\n        return false;\n    }\n};\n\nConnection.prototype.get_error = function () {\n    if (this.transport_error) return this.transport_error;\n    if (this.remote.close && this.remote.close.error) {\n        return new errors.ConnectionError(this.remote.close.error.description, this.remote.close.error.condition, this);\n    }\n    return undefined;\n};\n\nConnection.prototype._get_peer_details = function () {\n    var s = '';\n    if (this.remote.open && this.remote.open.container) {\n        s += this.remote.open.container + ' ';\n    }\n    if (this.remote.open && this.remote.open.properties) {\n        s += JSON.stringify(this.remote.open.properties);\n    }\n    return s;\n};\n\nConnection.prototype.output = function () {\n    try {\n        if (this.socket && this.socket_ready) {\n            if (this.heartbeat_out) clearTimeout(this.heartbeat_out);\n            this.transport.write(this.socket);\n            if (((this.is_closed() && this.state.has_settled()) || this.abort_idle || this.transport_error) && !this.transport.has_writes_pending()) {\n                this.socket.end();\n            } else if (this.is_open() && this.remote.open.idle_time_out) {\n                this.heartbeat_out = setTimeout(this._write_frame.bind(this), this.remote.open.idle_time_out / 2);\n            }\n            if (this.local.open.idle_time_out && this.heartbeat_in === undefined) {\n                this.heartbeat_in = setTimeout(this.idle.bind(this), this.local.open.idle_time_out);\n            }\n        }\n    } catch (e) {\n        this.saved_error = e;\n        if (e.name === 'ProtocolError') {\n            console.error('[' + this.options.id + '] error on write: ' + e + ' ' + this._get_peer_details() + ' ' + e.name);\n            this.dispatch('protocol_error', e) || console.error('[' + this.options.id + '] error on write: ' + e + ' ' + this._get_peer_details());\n        } else {\n            this.dispatch('error', e);\n        }\n        this.socket.end();\n    }\n};\n\nfunction byte_to_hex(value) {\n    if (value < 16) return '0x0' + Number(value).toString(16);\n    else return '0x' + Number(value).toString(16);\n}\n\nfunction buffer_to_hex(buffer) {\n    var bytes = [];\n    for (var i = 0; i < buffer.length; i++) {\n        bytes.push(byte_to_hex(buffer[i]));\n    }\n    return bytes.join(',');\n}\n\nConnection.prototype.input = function (buff) {\n    var buffer;\n    try {\n        if (this.heartbeat_in) clearTimeout(this.heartbeat_in);\n        log.io('[%s] read %d bytes', this.options.id, buff.length);\n        if (this.previous_input) {\n            buffer = Buffer.concat([this.previous_input, buff], this.previous_input.length + buff.length);\n            this.previous_input = null;\n        } else {\n            buffer = buff;\n        }\n        var read = this.transport.read(buffer, this);\n        if (read < buffer.length) {\n            this.previous_input = buffer.slice(read);\n        }\n        if (this.local.open.idle_time_out) this.heartbeat_in = setTimeout(this.idle.bind(this), this.local.open.idle_time_out);\n        if (this.transport.has_writes_pending()) {\n            this.output();\n        } else if (this.is_closed() && this.state.has_settled()) {\n            this.socket.end();\n        } else if (this.is_open() && this.remote.open.idle_time_out && !this.heartbeat_out) {\n            this.heartbeat_out = setTimeout(this._write_frame.bind(this), this.remote.open.idle_time_out / 2);\n        }\n    } catch (e) {\n        this.saved_error = e;\n        if (e.name === 'ProtocolError') {\n            this.dispatch('protocol_error', e) ||\n                console.error('[' + this.options.id + '] error on read: ' + e + ' ' + this._get_peer_details() + ' (buffer:' + buffer_to_hex(buffer) + ')');\n        } else {\n            this.dispatch('error', e);\n        }\n        this.socket.end();\n    }\n\n};\n\nConnection.prototype.idle = function () {\n    if (!this.is_closed()) {\n        this.abort_idle = true;\n        this.closed_with_non_fatal_error = true;\n        this.local.close.error = {condition:'amqp:resource-limit-exceeded', description:'max idle time exceeded'};\n        this.close();\n        setTimeout(this.abort_socket.bind(this, this.socket), 1000);\n    }\n};\n\nConnection.prototype.on_error = function (e) {\n    this._disconnected(e);\n};\n\nConnection.prototype.eof = function (e) {\n    var error = e || this.saved_error;\n    this.saved_error = undefined;\n    this._disconnected(error);\n};\n\nConnection.prototype._disconnected = function (error) {\n    if (this.heartbeat_out) {\n        clearTimeout(this.heartbeat_out);\n        this.heartbeat_out = undefined;\n    }\n    if (this.heartbeat_in) {\n        clearTimeout(this.heartbeat_in);\n        this.heartbeat_in = undefined;\n    }\n    var was_closed_with_non_fatal_error = this.closed_with_non_fatal_error;\n    if (this.closed_with_non_fatal_error) {\n        this.closed_with_non_fatal_error = false;\n        if (this.options.reconnect) this.open();\n    }\n    if ((!this.is_closed() || was_closed_with_non_fatal_error) && this.scheduled_reconnect === undefined) {\n        this._disconnect();\n        var disconnect_ctxt = {};\n        if (error) {\n            disconnect_ctxt.error = error;\n        }\n        if (!this.is_server && !this.transport_error && this.options.reconnect) {\n            var delay = this.options.reconnect(this.conn_established_counter);\n            if (delay >= 0) {\n                log.reconnect('[%s] Scheduled reconnect in ' + delay + 'ms', this.options.id);\n                this.scheduled_reconnect = setTimeout(this.reconnect.bind(this), delay);\n                disconnect_ctxt.reconnecting = true;\n            } else {\n                disconnect_ctxt.reconnecting = false;\n            }\n        }\n        if (!this.dispatch('disconnected', this._context(disconnect_ctxt))) {\n            console.warn('[' + this.options.id + '] disconnected %s', disconnect_ctxt.error || '');\n        }\n    }\n};\n\nConnection.prototype.open = function () {\n    if (this.state.open()) {\n        this._register();\n    }\n};\n\nConnection.prototype.close = function (error) {\n    if (error) this.local.close.error = error;\n    if (this.state.close()) {\n        this._register();\n    }\n};\n\nConnection.prototype.is_open = function () {\n    return this.state.is_open();\n};\n\nConnection.prototype.is_remote_open = function () {\n    return this.state.remote_open;\n};\n\nConnection.prototype.is_closed = function () {\n    return this.state.is_closed();\n};\n\nConnection.prototype.create_session = function () {\n    var i = 0;\n    while (this.local_channel_map[i]) i++;\n    var session = new Session(this, i);\n    this.local_channel_map[i] = session;\n    return session;\n};\n\nConnection.prototype.find_sender = function (filter) {\n    return this.find_link(util.sender_filter(filter));\n};\n\nConnection.prototype.find_receiver = function (filter) {\n    return this.find_link(util.receiver_filter(filter));\n};\n\nConnection.prototype.find_link = function (filter) {\n    for (var channel in this.local_channel_map) {\n        var session = this.local_channel_map[channel];\n        var result = session.find_link(filter);\n        if (result) return result;\n    }\n    return undefined;\n};\n\nConnection.prototype.each_receiver = function (action, filter) {\n    this.each_link(action, util.receiver_filter(filter));\n};\n\nConnection.prototype.each_sender = function (action, filter) {\n    this.each_link(action, util.sender_filter(filter));\n};\n\nConnection.prototype.each_link = function (action, filter) {\n    for (var channel in this.local_channel_map) {\n        var session = this.local_channel_map[channel];\n        session.each_link(action, filter);\n    }\n};\n\nConnection.prototype.on_open = function (frame) {\n    if (this.state.remote_opened()) {\n        this.remote.open = frame.performative;\n        this.open();\n        this.dispatch('connection_open', this._context());\n    } else {\n        throw new errors.ProtocolError('Open already received');\n    }\n};\n\nConnection.prototype.on_close = function (frame) {\n    if (this.state.remote_closed()) {\n        this.remote.close = frame.performative;\n        if (this.remote.close.error) {\n            this._handle_error();\n        } else {\n            this.dispatch('connection_close', this._context());\n        }\n        if (this.heartbeat_out) clearTimeout(this.heartbeat_out);\n        var self = this;\n        process.nextTick(function () {\n            self.close();\n        });\n    } else {\n        throw new errors.ProtocolError('Close already received');\n    }\n};\n\nConnection.prototype._register = function () {\n    if (!this.registered) {\n        this.registered = true;\n        process.nextTick(this._process.bind(this));\n    }\n};\n\nConnection.prototype._process = function () {\n    this.registered = false;\n    do {\n        if (this.state.need_open()) {\n            this._write_open();\n        }\n        for (var k in this.local_channel_map) {\n            this.local_channel_map[k]._process();\n        }\n        if (this.state.need_close()) {\n            this._write_close();\n        }\n    } while (!this.state.has_settled());\n};\n\nConnection.prototype._write_frame = function (channel, frame, payload) {\n    this.amqp_transport.encode(frames.amqp_frame(channel, frame, payload));\n    this.output();\n};\n\nConnection.prototype._write_open = function () {\n    this._write_frame(0, this.local.open);\n};\n\nConnection.prototype._write_close = function () {\n    this._write_frame(0, this.local.close);\n};\n\nConnection.prototype.on_begin = function (frame) {\n    var session;\n    if (frame.performative.remote_channel === null || frame.performative.remote_channel === undefined) {\n        //peer initiated\n        session = this.create_session();\n        session.local.begin.remote_channel = frame.channel;\n    } else {\n        session = this.local_channel_map[frame.performative.remote_channel];\n        if (!session) throw new errors.ProtocolError('Invalid value for remote channel ' + frame.performative.remote_channel);\n    }\n    session.on_begin(frame);\n    this.remote_channel_map[frame.channel] = session;\n};\n\nConnection.prototype.get_peer_certificate = function() {\n    if (this.socket && this.socket.getPeerCertificate) {\n        return this.socket.getPeerCertificate();\n    } else {\n        return undefined;\n    }\n};\n\nConnection.prototype.get_tls_socket = function() {\n    if (this.socket && (this.options.transport === 'tls' || this.options.transport === 'ssl')) {\n        return this.socket;\n    } else {\n        return undefined;\n    }\n};\n\nConnection.prototype._context = function (c) {\n    var context = c ? c : {};\n    context.connection = this;\n    if (this.container) context.container = this.container;\n    return context;\n};\n\nConnection.prototype.remove_session = function (session) {\n    if (this.remote_channel_map[session.remote.channel] === session) {\n        delete this.remote_channel_map[session.remote.channel];\n    }\n    if (this.local_channel_map[session.local.channel] === session) {\n        delete this.local_channel_map[session.local.channel];\n    }\n};\n\nConnection.prototype.remove_all_sessions = function () {\n    this.remote_channel_map = {};\n    this.local_channel_map = {};\n};\n\nfunction delegate_to_session(name) {\n    Connection.prototype['on_' + name] = function (frame) {\n        var session = this.remote_channel_map[frame.channel];\n        if (!session) {\n            throw new errors.ProtocolError(name + ' received on invalid channel ' + frame.channel);\n        }\n        session['on_' + name](frame);\n    };\n}\n\ndelegate_to_session('end');\ndelegate_to_session('attach');\ndelegate_to_session('detach');\ndelegate_to_session('transfer');\ndelegate_to_session('disposition');\ndelegate_to_session('flow');\n\nmodule.exports = Connection;\n","/*\n * Copyright 2018 Red Hat Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nvar ReceiverEvents;\n(function (ReceiverEvents) {\n    /**\n     * @property {string} message Raised when a message is received.\n     */\n    ReceiverEvents['message'] = 'message';\n    /**\n     * @property {string} receiverOpen Raised when the remote peer indicates the link is\n     * open (i.e. attached in AMQP parlance).\n     */\n    ReceiverEvents['receiverOpen'] = 'receiver_open';\n    /**\n     * @property {string} receiverDrained Raised when the remote peer\n     * indicates that it has drained all credit (and therefore there\n     * are no more messages at present that it can send).\n     */\n    ReceiverEvents['receiverDrained'] = 'receiver_drained';\n    /**\n     * @property {string} receiverFlow Raised when a flow is received for receiver.\n     */\n    ReceiverEvents['receiverFlow'] = 'receiver_flow';\n    /**\n     * @property {string} receiverError Raised when the remote peer\n     * closes the receiver with an error. The context may also have an\n     * error property giving some information about the reason for the\n     * error.\n     */\n    ReceiverEvents['receiverError'] = 'receiver_error';\n    /**\n     * @property {string} receiverClose Raised when the remote peer indicates the link is closed.\n     */\n    ReceiverEvents['receiverClose'] = 'receiver_close';\n    /**\n     * @property {string} settled Raised when the receiver link receives a disposition.\n     */\n    ReceiverEvents['settled'] = 'settled';\n})(ReceiverEvents || (ReceiverEvents = {}));\n\nvar SenderEvents;\n(function (SenderEvents) {\n    /**\n     * @property {string} sendable Raised when the sender has sufficient credit to be able\n     * to transmit messages to its peer.\n     */\n    SenderEvents['sendable'] = 'sendable';\n    /**\n     * @property {string} senderOpen Raised when the remote peer indicates the link is\n     * open (i.e. attached in AMQP parlance).\n     */\n    SenderEvents['senderOpen'] = 'sender_open';\n    /**\n     * @property {string} senderDraining Raised when the remote peer\n     * requests that the sender drain its credit; sending all\n     * available messages within the credit limit and ensuring credit\n     * is used up..\n     */\n    SenderEvents['senderDraining'] = 'sender_draining';\n    /**\n     * @property {string} senderFlow Raised when a flow is received for sender.\n     */\n    SenderEvents['senderFlow'] = 'sender_flow';\n    /**\n     * @property {string} senderError Raised when the remote peer\n     * closes the sender with an error. The context may also have an\n     * error property giving some information about the reason for the\n     * error.\n     */\n    SenderEvents['senderError'] = 'sender_error';\n    /**\n     * @property {string} senderClose Raised when the remote peer indicates the link is closed.\n     */\n    SenderEvents['senderClose'] = 'sender_close';\n    /**\n     * @property {string} accepted Raised when a sent message is accepted by the peer.\n     */\n    SenderEvents['accepted'] = 'accepted';\n    /**\n     * @property {string} released Raised when a sent message is released by the peer.\n     */\n    SenderEvents['released'] = 'released';\n    /**\n     * @property {string} rejected Raised when a sent message is rejected by the peer.\n     */\n    SenderEvents['rejected'] = 'rejected';\n    /**\n     * @property {string} modified Raised when a sent message is modified by the peer.\n     */\n    SenderEvents['modified'] = 'modified';\n    /**\n     * @property {string} settled Raised when the sender link receives a disposition.\n     */\n    SenderEvents['settled'] = 'settled';\n})(SenderEvents || (SenderEvents = {}));\n\n\nvar SessionEvents;\n(function (SessionEvents) {\n    /**\n     * @property {string} sessionOpen Raised when the remote peer indicates the session is\n     * open (i.e. attached in AMQP parlance).\n     */\n    SessionEvents['sessionOpen'] = 'session_open';\n    /**\n     * @property {string} sessionError Raised when the remote peer receives an error. The context\n     * may also have an error property giving some information about the reason for the error.\n     */\n    SessionEvents['sessionError'] = 'session_error';\n    /**\n     * @property {string} sessionClose Raised when the remote peer indicates the session is closed.\n     */\n    SessionEvents['sessionClose'] = 'session_close';\n    /**\n     * @property {string} settled Raised when the session receives a disposition.\n     */\n    SessionEvents['settled'] = 'settled';\n})(SessionEvents || (SessionEvents = {}));\n\nvar ConnectionEvents;\n(function (ConnectionEvents) {\n    /**\n     * @property {string} connectionOpen Raised when the remote peer indicates the connection is open.\n     */\n    ConnectionEvents['connectionOpen'] = 'connection_open';\n    /**\n     * @property {string} connectionClose Raised when the remote peer indicates the connection is closed.\n     */\n    ConnectionEvents['connectionClose'] = 'connection_close';\n    /**\n     * @property {string} connectionError Raised when the remote peer indicates an error occurred on\n     * the connection.\n     */\n    ConnectionEvents['connectionError'] = 'connection_error';\n    /**\n     * @property {string} protocolError Raised when a protocol error is received on the underlying socket.\n     */\n    ConnectionEvents['protocolError'] = 'protocol_error',\n    /**\n     * @property {string} error Raised when an error is received on the underlying socket.\n     */\n    ConnectionEvents['error'] = 'error',\n    /**\n     * @property {string} disconnected Raised when the underlying tcp connection is lost. The context\n     * has a reconnecting property which is true if the library is attempting to automatically reconnect\n     * and false if it has reached the reconnect limit. If reconnect has not been enabled or if the connection\n     * is a tcp server, then the reconnecting property is undefined. The context may also have an error\n     * property giving some information about the reason for the disconnect.\n     */\n    ConnectionEvents['disconnected'] = 'disconnected';\n    /**\n     * @property {string} settled Raised when the connection receives a disposition.\n     */\n    ConnectionEvents['settled'] = 'settled';\n})(ConnectionEvents || (ConnectionEvents = {}));\n\nmodule.exports = {\n    ReceiverEvents: ReceiverEvents,\n    SenderEvents: SenderEvents,\n    SessionEvents: SessionEvents,\n    ConnectionEvents: ConnectionEvents\n};\n","/*\n * Copyright 2015 Red Hat Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nfunction nulltransform(data) { return data; }\n\nfunction from_arraybuffer(data) {\n    if (data instanceof ArrayBuffer) return Buffer.from(new Uint8Array(data));\n    else return Buffer.from(data);\n}\n\nfunction to_typedarray(data) {\n    return new Uint8Array(data);\n}\n\nfunction wrap(ws) {\n    var data_recv = nulltransform;\n    var data_send = nulltransform;\n    if (ws.binaryType) {\n        ws.binaryType = 'arraybuffer';\n        data_recv = from_arraybuffer;\n        data_send = to_typedarray;\n    }\n    return {\n        end: function() {\n            ws.close();\n        },\n        write: function(data) {\n            try {\n                ws.send(data_send(data), {binary:true});\n            } catch (e) {\n                ws.onerror(e);\n            }\n        },\n        on: function(event, handler) {\n            if (event === 'data') {\n                ws.onmessage = function(msg_evt) {\n                    handler(data_recv(msg_evt.data));\n                };\n            } else if (event === 'end') {\n                ws.onclose = handler;\n            } else if (event === 'error') {\n                ws.onerror = handler;\n            } else {\n                console.error('ERROR: Attempt to set unrecognised handler on websocket wrapper: ' + event);\n            }\n        },\n        get_id_string: function() {\n            return ws.url;\n        }\n    };\n}\n\nmodule.exports = {\n\n    'connect': function(Impl) {\n        return function (url, protocols, options) {\n            return function () {\n                return {\n                    connect: function(port_ignore, host_ignore, options_ignore, callback) {\n                        var c = new Impl(url, protocols, options);\n                        c.onopen = callback;\n                        return wrap(c);\n                    }\n                };\n            };\n        };\n    },\n    'wrap': wrap\n};\n","/*\n * Copyright 2015 Red Hat Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nvar amqp_types = require('./types.js');\n\nmodule.exports = {\n    selector : function (s) {\n        return {'jms-selector':amqp_types.wrap_described(s, 0x468C00000004)};\n    }\n};\n","/*\n * Copyright 2015 Red Hat Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nvar Connection = require('./connection.js');\nvar log = require('./log.js');\nvar sasl = require('./sasl.js');\nvar util = require('./util.js');\nvar eventTypes = require('./eventTypes.js');\n\nvar net = require('net');\nvar tls = require('tls');\nvar EventEmitter = require('events').EventEmitter;\n\nvar Container = function (options) {\n    this.options = options ? Object.create(options) : {};\n    if (!this.options.id) {\n        this.options.id = util.generate_uuid();\n    }\n    this.id = this.options.id;\n    this.sasl_server_mechanisms = sasl.server_mechanisms();\n};\n\nContainer.prototype = Object.create(EventEmitter.prototype);\nContainer.prototype.constructor = Container;\nContainer.prototype.dispatch = function(name) {\n    log.events('[%s] Container got event: ' + name, this.id);\n    EventEmitter.prototype.emit.apply(this, arguments);\n    if (this.listeners(name).length) {\n        return true;\n    } else {\n        return false;\n    }\n};\n\nContainer.prototype.connect = function (options) {\n    return new Connection(options, this).connect();\n};\n\nContainer.prototype.create_connection = function (options) {\n    return new Connection(options, this);\n};\n\nContainer.prototype.listen = function (options) {\n    var container = this;\n    var server;\n    if (options.transport === undefined || options.transport === 'tcp') {\n        server = net.createServer();\n        server.on('connection', function (socket) {\n            new Connection(options, container).accept(socket);\n        });\n    } else if (options.transport === 'tls' || options.transport === 'ssl') {\n        server = tls.createServer(options);\n        server.on('secureConnection', function (socket) {\n            new Connection(options, container).accept(socket);\n        });\n    } else {\n        throw Error('Unrecognised transport: ' + options.transport);\n    }\n    if (process.version.match(/v0\\.10\\.\\d+/)) {\n        server.listen(options.port, options.host);\n    } else {\n        server.listen(options);\n    }\n    return server;\n};\n\nContainer.prototype.create_container = function (options) {\n    return new Container(options);\n};\n\nContainer.prototype.get_option = function (name, default_value) {\n    if (this.options[name] !== undefined) return this.options[name];\n    else return default_value;\n};\n\nContainer.prototype.generate_uuid = util.generate_uuid;\nContainer.prototype.string_to_uuid = util.string_to_uuid;\nContainer.prototype.uuid_to_string = util.uuid_to_string;\nvar ws = require('./ws.js');\nContainer.prototype.websocket_accept = function(socket, options) {\n    new Connection(options, this).accept(ws.wrap(socket));\n};\nContainer.prototype.websocket_connect = ws.connect;\nContainer.prototype.filter = require('./filter.js');\nContainer.prototype.types = require('./types.js');\nContainer.prototype.message = require('./message.js');\nContainer.prototype.sasl = sasl;\nContainer.prototype.ReceiverEvents = eventTypes.ReceiverEvents;\nContainer.prototype.SenderEvents = eventTypes.SenderEvents;\nContainer.prototype.SessionEvents = eventTypes.SessionEvents;\nContainer.prototype.ConnectionEvents = eventTypes.ConnectionEvents;\n\nmodule.exports = new Container();\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the Apache License. See License in the project root for license information.\n\nimport * as debugModule from \"debug\";\n/**\n * @ignore\n * log statements for container\n */\nexport const container = debugModule(\"rhea-promise:container\");\n/**\n * @ignore\n * log statements for connection\n */\nexport const connection = debugModule(\"rhea-promise:connection\");\n/**\n * @ignore\n * log statements for session\n */\nexport const session = debugModule(\"rhea-promise:session\");\n/**\n * @ignore\n * log statements for sender\n */\nexport const sender = debugModule(\"rhea-promise:sender\");\n/**\n * @ignore\n * log statements for receiver\n */\nexport const receiver = debugModule(\"rhea-promise:receiver\");\n/**\n * @ignore\n * log statements for error\n */\nexport const error = debugModule(\"rhea-promise:error\");\n/**\n * @ignore\n * log statements for error\n */\nexport const eventHandler = debugModule(\"rhea-promise:eventhandler\");\n/**\n * @ignore\n * log statements for error\n */\nexport const contextTranslator = debugModule(\"rhea-promise:translate\");\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the Apache License. See License in the project root for license information.\n\nimport { EventContext as RheaEventContext } from \"rhea\";\nimport { Link } from \"../link\";\nimport { Session } from \"../session\";\nimport { Connection } from \"../connection\";\nimport * as log from \"../log\";\nimport { EventContext } from '../eventContext';\n\n/**\n * Defines a mapping for Http like response status codes for different status-code values\n * provided by an AMQP broker.\n * @enum AmqpResponseStatusCode\n */\nexport enum AmqpResponseStatusCode {\n  Continue = 100,\n  SwitchingProtocols = 101,\n  OK = 200,\n  Created = 201,\n  Accepted = 202,\n  NonAuthoritativeInformation = 203,\n  NoContent = 204,\n  ResetContent = 205,\n  PartialContent = 206,\n  Ambiguous = 300,\n  MultipleChoices = 300,\n  Moved = 301,\n  MovedPermanently = 301,\n  Found = 302,\n  Redirect = 302,\n  RedirectMethod = 303,\n  SeeOther = 303,\n  NotModified = 304,\n  UseProxy = 305,\n  Unused = 306,\n  RedirectKeepVerb = 307,\n  TemporaryRedirect = 307,\n  BadRequest = 400,\n  Unauthorized = 401,\n  PaymentRequired = 402,\n  Forbidden = 403,\n  NotFound = 404,\n  MethodNotAllowed = 405,\n  NotAcceptable = 406,\n  ProxyAuthenticationRequired = 407,\n  RequestTimeout = 408,\n  Conflict = 409,\n  Gone = 410,\n  LengthRequired = 411,\n  PreconditionFailed = 412,\n  RequestEntityTooLarge = 413,\n  RequestUriTooLong = 414,\n  UnsupportedMediaType = 415,\n  RequestedRangeNotSatisfiable = 416,\n  ExpectationFailed = 417,\n  UpgradeRequired = 426,\n  InternalServerError = 500,\n  NotImplemented = 501,\n  BadGateway = 502,\n  ServiceUnavailable = 503,\n  GatewayTimeout = 504,\n  HttpVersionNotSupported = 505\n}\n\n/**\n * Provides a list of predefined (amqp) protocol level properties for an amqp message.\n */\nexport const messageProperties: string[] = [\n  \"message_id\", \"reply_to\", \"to\", \"correlation_id\", \"content_type\", \"absolute_expiry_time\",\n  \"group_id\", \"group_sequence\", \"reply_to_group_id\", \"content_encoding\", \"creation_time\", \"subject\",\n  \"user_id\"\n];\n\n/**\n * Provides a list of predefined (amqp) protocol level properties for an amqp message header.\n */\nexport const messageHeader: string[] = [\n  \"first_acquirer\", \"delivery_count\", \"ttl\", \"durable\", \"priority\"\n];\n\n/**\n * Type declaration for a Function type where T is the input to the function and V is the output of the function.\n */\nexport type Func<T, V> = (a: T) => V;\n\n/**\n * Determines whether the given error object is like an AmqpError object.\n * @param {object} err The AmqpError object\n * @returns {boolean} result - `true` if it is an AMQP Error; `false` otherwise.\n */\nexport function isAmqpError(err: any): boolean {\n  if (!err || typeof err !== \"object\") {\n    throw new Error(\"err is a required parameter and must be of type 'object'.\");\n  }\n  let result: boolean = false;\n  if (((err.condition && typeof err.condition === \"string\") && (err.description && typeof err.description === \"string\"))\n    || (err.value && Array.isArray(err.value))\n    || (err.constructor && err.constructor.name === \"c\")) {\n    result = true;\n  }\n  return result;\n}\n\n/**\n * Describes the options that can be provided while parsing connection strings.\n * The connection string usually looks like `{A}={B};{C}={D}`.\n * @interface ConnectionStringParseOptions\n */\nexport interface ConnectionStringParseOptions {\n  /**\n   * @property {string} [entitySeperator] Describes the separator that separates different parts/\n   * entities in a connection string. Default value `;`.\n   */\n  entitySeperator?: string;\n  /**\n   * @property {string} [keyValueSeparator] Describes the separator that separates the key/value\n   * pair for an entity/part in a connection string; Default value `=`.\n   */\n  keyValueSeparator?: string;\n}\n\n/**\n * Defines an object with possible properties defined in T.\n * @type ParsedOutput<T>\n */\nexport type ParsedOutput<T> = {\n  [P in keyof T]: T[P];\n};\n\n/**\n * A wrapper for setTimeout that resolves a promise after t milliseconds.\n * @param {number} t - The number of milliseconds to be delayed.\n * @param {T} value - The value to be resolved with after a timeout of t milliseconds.\n * @returns {Promise<T>} - Resolved promise\n */\nexport function delay<T>(t: number, value?: T): Promise<T> {\n  return new Promise((resolve) => setTimeout(() => resolve(value), t));\n}\n\n/**\n * Parses the connection string and returns an object of type T.\n * @param {string} connectionString The connection string to be parsed.\n * @returns {ParsedOutput<T>} ParsedOutput<T>.\n */\nexport function parseConnectionString<T>(connectionString: string, options?: ConnectionStringParseOptions): ParsedOutput<T> {\n  if (!options) options = {};\n  const entitySeperator = options.entitySeperator || \";\";\n  const keyValueSeparator = options.keyValueSeparator || \"=\";\n\n  return connectionString.split(entitySeperator).reduce((acc, part) => {\n    const splitIndex = part.indexOf(keyValueSeparator);\n    return {\n      ...acc,\n      [part.substring(0, splitIndex)]: part.substring(splitIndex + 1)\n    };\n  }, {} as any);\n}\n\n/**\n * @ignore\n * Describes the parameters to be provided to the function `emitEvent()`.\n * @interface EmitParameters\n */\nexport interface EmitParameters {\n  rheaContext: RheaEventContext;\n  emitter: Link | Session | Connection;\n  eventName: string;\n  connectionId: string;\n  emitterType: \"sender\" | \"receiver\" | \"session\" | \"connection\";\n}\n\n/**\n * @ignore\n * Emits an event.\n * @param params parameters needed to emit an event from one of the rhea-promise objects.\n * @returns void\n */\nexport function emitEvent(params: EmitParameters): void {\n  const emit = () => {\n    log[params.emitterType](\"[%s] %s got event: '%s'. Re-emitting the translated context.\",\n      params.connectionId, params.emitterType, params.eventName);\n    params.emitter.emit(params.eventName,\n      EventContext.translate(params.rheaContext, params.emitter, params.eventName));\n  };\n  if (params.eventName.indexOf(\"error\") !== -1 && params.emitter.actionInitiated > 0) {\n    log[params.emitterType](\"[%s] %s got event: '%s'. Will re-emit in the next tick, since \" +\n      \"this happened before the promise for create/close was resolved.\", params.connectionId,\n      params.emitterType, params.eventName);\n    // setTimeout() without any time is equivalent to process.nextTick() and works in node.js and\n    // browsers. We wait for a tick to emit error events in general. This should give enough\n    // time for promises to resolve on *_open (create) and *_close (close).\n    setTimeout(emit);\n  } else {\n    emit();\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the Apache License. See License in the project root for license information.\n\nimport { EventEmitter } from \"events\";\n\n/**\n * Abstract base class for all the entities like Connection, Session, Sender, Receiver in the\n * AMQP protocol.\n * @class Entity\n */\nexport abstract class Entity extends EventEmitter {\n  /**\n   * @property actionInitiated Indicates whether the action of creating or closing an entity has\n   * been initiated. Whenever an action has been initiated, the count will be incremented by 1.\n   * Whenever the action completes (succeeds/fails) the count will be decremented by 1.\n   * Default value: `0`.\n   */\n  actionInitiated: number = 0;\n  constructor() {\n    super();\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the Apache License. See License in the project root for license information.\n\n/**\n * Defines the error that occurs when an operation timeout occurs.\n */\nexport class OperationTimeoutError extends Error {\n  /**\n   * Describes the name of the error.\n   */\n  readonly name: string = \"OperationTimeoutError\";\n  /**\n   * Provides a logical amqp error condition.\n   */\n  readonly condition: string = \"amqp:operation-timeout\";\n  /**\n   * Provides a short description about the error.\n   */\n  description: string;\n\n  constructor(message: string) {\n    super(message);\n    this.description = message;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the Apache License. See License in the project root for license information.\n\nimport * as log from \"./log\";\nimport {\n  link, LinkOptions, AmqpError, Dictionary, Source, TerminusOptions, SenderEvents, ReceiverEvents,\n  EventContext as RheaEventContext\n} from \"rhea\";\nimport { Session } from \"./session\";\nimport { Connection } from \"./connection\";\nimport { Func, emitEvent, EmitParameters } from './util/utils';\nimport { Entity } from \"./entity\";\nimport { OperationTimeoutError } from \"./operationTimeoutError\";\n\nexport enum LinkType {\n  sender = \"sender\",\n  receiver = \"receiver\"\n}\n\nexport abstract class Link extends Entity {\n  linkOptions?: LinkOptions;\n  type: LinkType;\n  protected _link: link;\n  protected _session: Session;\n  constructor(type: LinkType, session: Session, link: link, options?: LinkOptions) {\n    super();\n    this.type = type;\n    this._session = session;\n    this._link = link;\n    this.linkOptions = options;\n    this._initializeEventListeners();\n  }\n\n  get name(): string {\n    return this._link.name;\n  }\n\n  get error(): AmqpError | Error | undefined {\n    return this._link.error;\n  }\n\n  get properties(): Dictionary<any> {\n    return this._link.properties;\n  }\n\n  get sendSettleMode(): 0 | 1 | 2 {\n    return this._link.snd_settle_mode;\n  }\n\n  get receiveSettleMode(): 0 | 1 {\n    return this._link.rcv_settle_mode;\n  }\n\n  get source(): Source {\n    return this._link.source;\n  }\n\n  set source(fields: Source) {\n    this._link.set_source(fields);\n  }\n\n  get target(): TerminusOptions {\n    return this._link.target;\n  }\n\n  set target(fields: TerminusOptions) {\n    this._link.set_source(fields);\n  }\n\n  get maxMessageSize(): number {\n    return this._link.max_message_size;\n  }\n\n  get offeredCapabilities(): string | string[] {\n    return this._link.offered_capabilities;\n  }\n\n  get desiredCapabilities(): string | string[] {\n    return this._link.desired_capabilities;\n  }\n\n  get address(): string {\n    return this.source.address;\n  }\n\n  get credit(): number {\n    return (this._link as any).credit;\n  }\n\n  get session(): Session {\n    return this._session;\n  }\n\n  get connection(): Connection {\n    return this._session.connection;\n  }\n\n  /**\n   * Determines whether the sender link and its underlying session is open.\n   * @returns {boolean} `true` open. `false` closed.\n   */\n  isOpen(): boolean {\n    let result = false;\n    if (this._session.isOpen() && this._link.is_open()) {\n      result = true;\n    }\n    return result;\n  }\n\n  /**\n   * Determines whether the remote end of the link is open.\n   * @return {boolean} boolean `true` - is open; `false` otherwise.\n   */\n  isRemoteOpen(): boolean {\n    return this._link.is_remote_open();\n  }\n\n  /**\n   * Determines whether the link has credit.\n   * @return {boolean} boolean `true` - has credit; `false` otherwise.\n   */\n  hasCredit(): boolean {\n    return this._link.has_credit();\n  }\n\n  /**\n   * Determines whether the link is a sender.\n   * @return {boolean} boolean `true` - sender; `false` otherwise.\n   */\n  isSender(): boolean {\n    return this._link.is_sender();\n  }\n\n  /**\n   * Determines whether the link is a receiver.\n   * @return {boolean} boolean `true` - receiver; `false` otherwise.\n   */\n  isReceiver(): boolean {\n    return this._link.is_receiver();\n  }\n\n  /**\n   * Determines whether both local and remote endpoint for link or it's underlying session\n   * or it's underlying connection are closed.\n   * Within the \"sender_close\", \"session_close\" event handler, if this\n   * method returns `false` it means that the local end is still open. It can be useful to\n   * determine whether the close was initiated locally under such circumstances.\n   *\n   * @returns {boolean} `true` if closed, `false` otherwise.\n   */\n  isClosed(): boolean {\n    return this._link.is_closed();\n  }\n\n  /**\n   * Determines whether both local and remote endpoint for just the link itself are closed.\n   * Within the \"sender_close\" event handler, if this method returns `false` it\n   * means that the local end is still open. It can be useful to determine whether the close\n   * was initiated locally under such circumstances.\n   *\n   * @returns {boolean} `true` - closed, `false` otherwise.\n   */\n  isItselfClosed(): boolean {\n    return this._link.is_itself_closed();\n  }\n\n  /**\n   * Determines whether both local and remote endpoint for session or it's underlying\n   * connection are closed.\n   *\n   * Within the \"session_close\" event handler, if this method returns `false` it means that\n   * the local end is still open. It can be useful to determine whether the close\n   * was initiated locally under such circumstances.\n   *\n   * @returns {boolean} `true` - closed, `false` otherwise.\n   */\n  isSessionClosed(): boolean {\n    return this._session.isClosed();\n  }\n\n  /**\n   * Determines whether both local and remote endpoint for just the session itself are closed.\n   * Within the \"session_close\" event handler, if this method returns `false` it means that\n   * the local end is still open. It can be useful to determine whether the close\n   * was initiated locally under such circumstances.\n   *\n   * @returns {boolean} `true` - closed, `false` otherwise.\n   */\n  isSessionItselfClosed(): boolean {\n    return this._session.isItselfClosed();\n  }\n\n  /**\n   * Removes the underlying amqp link and it's session from the internal map in rhea. Also removes\n   * all the event handlers added in the rhea-promise library on the link and it's session.\n   * @returns {void} void\n   */\n  remove(): void {\n    if (this._link) {\n      // Remove our listeners and listeners from rhea's link object.\n      this.removeAllListeners();\n      this._link.removeAllListeners();\n      this._link.remove();\n    }\n    if (this._session) {\n      this._session.remove();\n    }\n  }\n\n  /**\n   * Closes the underlying amqp link and session in rhea if open. Also removes all the event\n   * handlers added in the rhea-promise library on the link and it's session\n   * @return {Promise<void>} Promise<void>\n   * - **Resolves** the promise when rhea emits the \"sender_close\" | \"receiver_close\" event.\n   * - **Rejects** the promise with an AmqpError when rhea emits the\n   * \"sender_error\" | \"receiver_error\" event while trying to close the amqp link.\n   */\n  async close(): Promise<void> {\n    this.removeAllListeners();\n    await new Promise<void>((resolve, reject) => {\n      log.error(\"[%s] The %s is open ? -> %s\", this.connection.id, this.type, this.isOpen());\n      if (this.isOpen()) {\n        const errorEvent = this.type === LinkType.sender\n          ? SenderEvents.senderError\n          : ReceiverEvents.receiverError;\n        const closeEvent = this.type === LinkType.sender\n          ? SenderEvents.senderClose\n          : ReceiverEvents.receiverClose;\n        let onError: Func<RheaEventContext, void>;\n        let onClose: Func<RheaEventContext, void>;\n        let waitTimer: any;\n\n        const removeListeners = () => {\n          clearTimeout(waitTimer);\n          this.actionInitiated--;\n          this._link.removeListener(errorEvent, onError);\n          this._link.removeListener(closeEvent, onClose);\n        };\n\n        onClose = (context: RheaEventContext) => {\n          removeListeners();\n          log[this.type](\"[%s] Resolving the promise as the amqp %s has been closed.\",\n            this.connection.id, this.type);\n          return resolve();\n        };\n\n        onError = (context: RheaEventContext) => {\n          removeListeners();\n          log.error(\"[%s] Error occurred while closing amqp %s: %O.\",\n            this.connection.id, this.type, context.session!.error);\n          return reject(context.session!.error);\n        };\n\n        const actionAfterTimeout = () => {\n          removeListeners();\n          const msg: string = `Unable to close the amqp %s ${this.name} due to operation timeout.`;\n          log.error(\"[%s] %s\", this.connection.id, this.type, msg);\n          return reject(new OperationTimeoutError(msg));\n        };\n\n        // listeners that we add for completing the operation are added directly to rhea's objects.\n        this._link.once(closeEvent, onClose);\n        this._link.once(errorEvent, onError);\n        waitTimer = setTimeout(actionAfterTimeout,\n          this.connection.options!.operationTimeoutInSeconds! * 1000);\n        this._link.close();\n        this.actionInitiated++;\n      } else {\n        return resolve();\n      }\n    });\n    log[this.type](\"[%s] %s has been closed, now closing it's session.\",\n      this.connection.id, this.type);\n    return this._session.close();\n  }\n\n  /**\n   * Adds event listeners for the possible events that can occur on the link object and\n   * re-emits the same event back with the received arguments from rhea's event emitter.\n   * @private\n   * @returns {void} void\n   */\n  private _initializeEventListeners(): void {\n    const events = this.type === LinkType.sender ? SenderEvents : ReceiverEvents;\n    for (const eventName in events) {\n      this._link.on(events[eventName],\n        (context: RheaEventContext) => {\n          const params: EmitParameters = {\n            rheaContext: context,\n            emitter: this,\n            eventName: events[eventName],\n            emitterType: this.type,\n            connectionId: this.connection.id\n          };\n          emitEvent(params);\n        });\n    }\n    if (typeof this._link.eventNames === \"function\") {\n      log.eventHandler(\"[%s] rhea-promise '%s' object is listening for events: %o \" +\n        \"emitted by rhea's '%s' object.\", this.connection.id, this.type,\n        this._link.eventNames(), this.type);\n    }\n    if (typeof this._link.listenerCount === \"function\") {\n      log.eventHandler(\"[%s] ListenerCount for event '%s_error' on rhea's '%s' object is: %d.\",\n        this.connection.id, this.type, this.type, this._link.listenerCount(`${this.type}_error`));\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the Apache License. See License in the project root for license information.\n\nimport { Session } from \"./session\";\nimport {\n  ReceiverEvents, Receiver as RheaReceiver, ReceiverOptions as RheaReceiverOptions\n} from \"rhea\";\nimport { Link, LinkType } from \"./link\";\nimport { OnAmqpEvent } from \"./eventContext\";\n\n/**\n * Descibes the options that can be provided while creating an AMQP sender.\n * @interface ReceiverOptions\n */\nexport interface ReceiverOptions extends RheaReceiverOptions {\n  /**\n   * @property {OnAmqpEvent} [onSettled] The handler that can be provided for receiving the\n   * \"settled\" event when a message is received on the underling rhea receiver.\n   */\n  onSettled?: OnAmqpEvent;\n  /**\n   * @property {OnAmqpEvent} [onMessage] The handler that can be provided for receiving the\n   * \"message\" event when a message is received on the underling rhea receiver.\n   */\n  onMessage?: OnAmqpEvent;\n  /**\n   * @property {OnAmqpEvent} [onError] The handler that can be provided for receiving any\n   * errors that occur on the \"receiver_error\" event on the underlying rhea receiver.\n   */\n  onError?: OnAmqpEvent;\n  /**\n   * @property {OnAmqpEvent} [onClose] The handler that can be provided for receiving the\n   * \"receiver_close\" event on the underlying rhea receiver.\n   */\n  onClose?: OnAmqpEvent;\n  /**\n   * @property {OnAmqpEvent} [onSessionError] The handler that can be provided for receiving\n   * the \"session_error\" event that occurs on the underlying rhea session.\n   */\n  onSessionError?: OnAmqpEvent;\n  /**\n   * @property {OnAmqpEvent} [onSessionClose] The handler that can be provided for receiving the\n   * \"session_close\" event that occurs on the underlying rhea session.\n   */\n  onSessionClose?: OnAmqpEvent;\n}\n\n/**\n * Describes the event listeners that can be added to the Receiver.\n * @interface Receiver\n */\nexport declare interface Receiver {\n  on(event: ReceiverEvents, listener: OnAmqpEvent): this;\n}\n\n/**\n * Describes the receiver that wraps the rhea receiver.\n * @class Receiver.\n */\nexport class Receiver extends Link {\n  constructor(session: Session, receiver: RheaReceiver, options?: ReceiverOptions) {\n    super(LinkType.receiver, session, receiver, options);\n  }\n\n  get drain(): boolean {\n    return (this._link as RheaReceiver).drain;\n  }\n\n  set drain(value: boolean) {\n    (this._link as RheaReceiver).drain = value;\n  }\n\n  addCredit(credit: number): void {\n    (this._link as RheaReceiver).add_credit(credit);\n  }\n\n  setCreditWindow(creditWindow: number): void {\n    (this._link as RheaReceiver).set_credit_window(creditWindow);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the Apache License. See License in the project root for license information.\n\nimport {\n  SenderOptions as RheaSenderOptions, Delivery, Message, Sender as RheaSender\n} from \"rhea\";\nimport { Session } from \"./session\";\nimport { SenderEvents } from \"rhea\";\nimport { Link, LinkType } from './link';\nimport { OnAmqpEvent } from \"./eventContext\";\n\n/**\n * Descibes the options that can be provided while creating an AMQP sender.\n * @interface SenderOptions\n */\nexport interface SenderOptions extends RheaSenderOptions {\n  /**\n   * @property {OnAmqpEvent} [onAccepted] The handler that can be provided for receiving the\n   * \"accepted\" event after a message is sent from the underlying rhea sender.\n   */\n  onAccepted?: OnAmqpEvent;\n  /**\n   * @property {OnAmqpEvent} [onRejected] The handler that can be provided for receiving the\n   * \"rejected\" event after a message is sent from the underlying rhea sender.\n   */\n  onRejected?: OnAmqpEvent;\n  /**\n   * @property {OnAmqpEvent} [onReleased] The handler that can be provided for receiving the\n   * \"released\" event after a message is sent from the underlying rhea sender.\n   */\n  onReleased?: OnAmqpEvent;\n  /**\n   * @property {OnAmqpEvent} [onModified] The handler that can be provided for receiving the\n   * \"modified\" event after a message is sent from the underlying rhea sender.\n   */\n  onModified?: OnAmqpEvent;\n  /**\n   * @property {OnAmqpEvent} [onError] The handler that can be provided for receiving any\n   * errors that occur on the \"sender_error\" event.\n   */\n  onError?: OnAmqpEvent;\n  /**\n   * @property {OnAmqpEvent} [onClose] The handler that can be provided for receiving the\n   * \"sender_close\" event.\n   */\n  onClose?: OnAmqpEvent;\n  /**\n   * @property {OnAmqpEvent} [onSessionError] The handler that can be provided for receiving\n   * the \"session_error\" event that occurs on the underlying session.\n   */\n  onSessionError?: OnAmqpEvent;\n  /**\n   * @property {OnAmqpEvent} [onSessionClose] The handler that can be provided for receiving the\n   * \"session_close\" event that occurs on the underlying session.\n   */\n  onSessionClose?: OnAmqpEvent;\n}\n\n/**\n * Describes the event listeners that can be added to the Sender.\n * @interface Sender\n */\nexport declare interface Sender {\n  on(event: SenderEvents, listener: OnAmqpEvent): this;\n}\n\n/**\n * Describes the sender that wraps the rhea sender.\n * @class Sender\n */\nexport class Sender extends Link {\n  senderOptions?: SenderOptions;\n\n  constructor(session: Session, sender: RheaSender, options?: SenderOptions) {\n    super(LinkType.sender, session, sender, options);\n  }\n\n  setDrained(drained: boolean): void {\n    (this._link as RheaSender).set_drained(drained);\n  }\n\n  /**\n   * Determines whether the message is sendable.\n   * @returns {boolean} `true` Sendable. `false` Not Sendable.\n   */\n  sendable(): boolean {\n    return (this._link as RheaSender).sendable();\n  }\n\n  /**\n   * Sends the message\n   * @param {Message | Buffer} msg The AMQP message to be sent.\n   * @param {Buffer | string} [tag] The optional tag that can be sent\n   * @param {number} [format] The format in which the message needs to be sent.\n   * @returns {Delivery} Delivery The delivery information about the sent message.\n   */\n  send(msg: Message | Buffer, tag?: Buffer | string, format?: number): Delivery {\n    return (this._link as RheaSender).send(msg, tag, format);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the Apache License. See License in the project root for license information.\n\nimport * as log from \"./log\";\nimport { Connection } from \"./connection\";\nimport { Receiver, ReceiverOptions } from \"./receiver\";\nimport { Sender, SenderOptions } from \"./sender\";\nimport {\n  SenderEvents, ReceiverEvents, SessionEvents, AmqpError, Session as RheaSession,\n  EventContext as RheaEventContext\n} from \"rhea\";\nimport { Func, EmitParameters, emitEvent } from \"./util/utils\";\nimport { OnAmqpEvent } from \"./eventContext\";\nimport { Entity } from \"./entity\";\nimport { OperationTimeoutError } from \"./operationTimeoutError\";\n\n/**\n * Describes the event listeners that can be added to the Session.\n * @interface Session\n */\nexport declare interface Session {\n  on(event: SessionEvents, listener: OnAmqpEvent): this;\n}\n\n/**\n * Describes the session that wraps the rhea session.\n * @class Session\n */\nexport class Session extends Entity {\n  private _session: RheaSession;\n  private _connection: Connection;\n\n  constructor(connection: Connection, session: RheaSession) {\n    super();\n    this._connection = connection;\n    this._session = session;\n    this._initializeEventListeners();\n  }\n  /**\n   * @property {Connection} connection The underlying AMQP connection.\n   * @readonly\n   */\n  get connection(): Connection {\n    return this._connection;\n  }\n\n  get outgoing(): any {\n    return (this._session as any).outgoing;\n  }\n\n  get error(): AmqpError | Error | undefined {\n    return this._session.error;\n  }\n\n  /**\n   * Determines whether the session and the underlying connection is open.\n   * @returns {boolean} result `true` - is open; `false` otherwise.\n   */\n  isOpen(): boolean {\n    let result = false;\n    if (this._connection.isOpen() && this._session.is_open()) {\n      result = true;\n    }\n    return result;\n  }\n\n  /**\n   * Determines whether the close from the peer is a response to a locally initiated close request.\n   * @returns {boolean} `true` if close was locally initiated, `false` otherwise.\n   */\n  isClosed(): boolean {\n    return this._session.is_closed();\n  }\n\n  /**\n   * Determines whether both local and remote endpoint for just the session itself are closed.\n   * Within the \"session_close\" event handler, if this method returns `false` it means that\n   * the local end is still open. It can be useful to determine whether the close\n   * was initiated locally under such circumstances.\n   *\n   * @returns {boolean} `true` - closed, `false` otherwise.\n   */\n  isItselfClosed(): boolean {\n    return this._session.is_itself_closed();\n  }\n\n  /**\n   * Removes the underlying amqp session from the internal map in rhea.\n   * Also removes all the event handlers added in the rhea-promise library on the session.\n   */\n  remove(): void {\n    if (this._session) {\n      // Remove our listeners and listeners from rhea's 'session' object.\n      this.removeAllListeners();\n      this._session.removeAllListeners();\n      this._session.remove();\n    }\n  }\n\n  begin(): void {\n    if (this._session) {\n      this._session.begin();\n    }\n  }\n\n  /**\n   * Closes the underlying amqp session in rhea if open. Also removes all the event\n   * handlers added in the rhea-promise library on the session\n   * @return {Promise<void>} Promise<void>\n   * - **Resolves** the promise when rhea emits the \"session_close\" event.\n   * - **Rejects** the promise with an AmqpError when rhea emits the \"session_error\" event while trying\n   * to close an amqp session.\n   */\n  close(): Promise<void> {\n    this.removeAllListeners();\n    return new Promise<void>((resolve, reject) => {\n      log.error(\"[%s] The session is open ? -> %s\", this.connection.id, this.isOpen());\n      if (this.isOpen()) {\n        let onError: Func<RheaEventContext, void>;\n        let onClose: Func<RheaEventContext, void>;\n        let waitTimer: any;\n\n        const removeListeners = () => {\n          clearTimeout(waitTimer);\n          this.actionInitiated--;\n          this._session.removeListener(SessionEvents.sessionError, onError);\n          this._session.removeListener(SessionEvents.sessionClose, onClose);\n        };\n\n        onClose = (context: RheaEventContext) => {\n          removeListeners();\n          log.session(\"[%s] Resolving the promise as the amqp session has been closed.\",\n            this.connection.id);\n          return resolve();\n        };\n\n        onError = (context: RheaEventContext) => {\n          removeListeners();\n          log.error(\"[%s] Error occurred while closing amqp session.\",\n            this.connection.id, context.session!.error);\n          reject(context.session!.error);\n        };\n\n        const actionAfterTimeout = () => {\n          removeListeners();\n          const msg: string = `Unable to close the amqp session due to operation timeout.`;\n          log.error(\"[%s] %s\", this.connection.id, msg);\n          reject(new OperationTimeoutError(msg));\n        };\n\n        // listeners that we add for completing the operation are added directly to rhea's objects.\n        this._session.once(SessionEvents.sessionClose, onClose);\n        this._session.once(SessionEvents.sessionError, onError);\n        log.session(\"[%s] Calling session.close()\", this.connection.id);\n        waitTimer = setTimeout(actionAfterTimeout, this.connection.options!.operationTimeoutInSeconds! * 1000);\n        this._session.close();\n        this.actionInitiated++;\n      } else {\n        return resolve();\n      }\n    });\n  }\n\n  /**\n   * Creates an amqp receiver on this session.\n   * @param {Session} session The amqp session object on which the receiver link needs to be established.\n   * @param {ReceiverOptions} [options] Options that can be provided while creating an amqp receiver.\n   * @return {Promise<Receiver>} Promise<Receiver>\n   * - **Resolves** the promise with the Receiver object when rhea emits the \"receiver_open\" event.\n   * - **Rejects** the promise with an AmqpError when rhea emits the \"receiver_close\" event while trying\n   * to create an amqp receiver or the operation timeout occurs.\n   */\n  createReceiver(options?: ReceiverOptions): Promise<Receiver> {\n    return new Promise((resolve, reject) => {\n      if (options &&\n        ((options.onMessage && !options.onError) || (options.onError && !options.onMessage))) {\n        if (options.credit_window !== 0) {\n          // - If the 'onMessage' handler is not provided and the credit_window is not set to 0,\n          // then messages may be lost between the receiver link getting created and the message\n          // handler being attached.\n          // - It can be possible for a service to initially accept the link attach, which would\n          // cause the promise to resolve. However, moments later the service may send a detach\n          // due to some internal or configuration issue. If no error handler is attached, then\n          // the error may fall through.\n          // - Hence it is advised to either provide both 'onMessage' and 'onError' handlers, or\n          // please set the credit_window to `0`, if you want to provide only the 'onError' handler.\n          return reject(new Error(\"Either provide both 'onMessage' and 'onError' handlers, or pl\" +\n            \"ease set the credit_window to 0, if you want to provide only the 'onError' \" +\n            \"handler. This ensures no messages are lost between the receiver getting created \" +\n            \" and the 'onMessage' handler being added.\"));\n        }\n      }\n\n      // Register session handlers for session_error and session_close if provided.\n      // listeners provided by the user in the options object should be added\n      // to our (rhea-promise) object.\n      if (options && options.onSessionError) {\n        this.on(SessionEvents.sessionError, options.onSessionError);\n        log.session(\"[%s] Added event handler for event '%s' on rhea-promise 'session', \" +\n          \"while creating the 'receiver'.\", this.connection.id, SessionEvents.sessionError);\n      }\n\n      if (options && options.onSessionClose) {\n        this.on(SessionEvents.sessionClose, options.onSessionClose);\n        log.session(\"[%s] Added event handler for event '%s' on rhea-promise 'session', \" +\n          \" while creating the 'receiver'.\", this.connection.id, SessionEvents.sessionClose);\n      }\n      const rheaReceiver = this._session.attach_receiver(options);\n      const receiver = new Receiver(this, rheaReceiver, options);\n      receiver.actionInitiated++;\n      let onOpen: Func<RheaEventContext, void>;\n      let onClose: Func<RheaEventContext, void>;\n      let waitTimer: any;\n\n      if (options && options.onMessage) {\n        receiver.on(ReceiverEvents.message, options.onMessage);\n        log.receiver(\"[%s] Added event handler for event '%s' on rhea-promise 'receiver'.\",\n          this.connection.id, ReceiverEvents.message);\n      }\n      if (options && options.onError) {\n        receiver.on(ReceiverEvents.receiverError, options.onError);\n        log.receiver(\"[%s] Added event handler for event '%s' on rhea-promise 'receiver'.\",\n          this.connection.id, ReceiverEvents.receiverError);\n      }\n\n      if (options && options.onClose) {\n        receiver.on(ReceiverEvents.receiverClose, options.onClose);\n        log.receiver(\"[%s] Added event handler for event '%s' on rhea-promise 'receiver'.\",\n          this.connection.id, ReceiverEvents.receiverClose);\n      }\n\n      if (options && options.onSettled) {\n        receiver.on(ReceiverEvents.settled, options.onSettled);\n        log.receiver(\"[%s] Added event handler for event '%s' on rhea-promise 'receiver'.\",\n          this.connection.id, ReceiverEvents.settled);\n      }\n\n      const removeListeners = () => {\n        clearTimeout(waitTimer);\n        receiver.actionInitiated--;\n        rheaReceiver.removeListener(ReceiverEvents.receiverOpen, onOpen);\n        rheaReceiver.removeListener(ReceiverEvents.receiverClose, onClose);\n      };\n\n      onOpen = (context: RheaEventContext) => {\n        removeListeners();\n        log.receiver(\"[%s] Resolving the promise with amqp receiver '%s'.\",\n          this.connection.id, receiver.name);\n        return resolve(receiver);\n      };\n\n      onClose = (context: RheaEventContext) => {\n        removeListeners();\n        log.error(\"[%s] Error occurred while creating a receiver over amqp connection: %O.\",\n          this.connection.id, context.receiver!.error);\n        return reject(context.receiver!.error);\n      };\n\n      const actionAfterTimeout = () => {\n        removeListeners();\n        const msg: string = `Unable to create the amqp receiver ${receiver.name} due to ` +\n          `operation timeout.`;\n        log.error(\"[%s] %s\", this.connection.id, msg);\n        return reject(new OperationTimeoutError(msg));\n      };\n\n      // listeners that we add for completing the operation are added directly to rhea's objects.\n      rheaReceiver.once(ReceiverEvents.receiverOpen, onOpen);\n      rheaReceiver.once(ReceiverEvents.receiverClose, onClose);\n      waitTimer = setTimeout(actionAfterTimeout, this.connection.options!.operationTimeoutInSeconds! * 1000);\n    });\n  }\n\n  /**\n   * Creates an amqp sender on this session.\n   * @param {SenderOptions} [options] Options that can be provided while creating an amqp sender.\n   * @return {Promise<Sender>} Promise<Sender>\n   * - **Resolves** the promise with the Sender object when rhea emits the \"sender_open\" event.\n   * - **Rejects** the promise with an AmqpError when rhea emits the \"sender_close\" event while trying\n   * to create an amqp sender or the operation timeout occurs.\n   */\n  createSender(options?: SenderOptions): Promise<Sender> {\n    return new Promise((resolve, reject) => {\n      // Register session handlers for session_error and session_close if provided.\n      if (options && options.onSessionError) {\n        this.on(SessionEvents.sessionError, options.onSessionError);\n        log.session(\"[%s] Added event handler for event '%s' on rhea-promise 'session', \" +\n          \"while creating the sender.\", this.connection.id, SessionEvents.sessionError);\n      }\n\n      if (options && options.onSessionClose) {\n        this.on(SessionEvents.sessionClose, options.onSessionClose);\n        log.session(\"[%s] Added event handler for event '%s' on rhea-promise 'session', \" +\n          \"while creating the sender.\", this.connection.id, SessionEvents.sessionClose);\n      }\n\n      const rheaSender = this._session.attach_sender(options);\n      const sender = new Sender(this, rheaSender, options);\n      sender.actionInitiated++;\n      let onSendable: Func<RheaEventContext, void>;\n      let onClose: Func<RheaEventContext, void>;\n      let waitTimer: any;\n\n      // listeners provided by the user in the options object should be added\n      // to our (rhea-promise) object.\n      if (options) {\n        if (options.onError) {\n          sender.on(SenderEvents.senderError, options.onError);\n        }\n        if (options.onClose) {\n          sender.on(SenderEvents.senderClose, options.onClose);\n        }\n        if (options.onAccepted) {\n          sender.on(SenderEvents.accepted, options.onAccepted);\n        }\n        if (options.onRejected) {\n          sender.on(SenderEvents.rejected, options.onRejected);\n        }\n        if (options.onReleased) {\n          sender.on(SenderEvents.released, options.onReleased);\n        }\n        if (options.onModified) {\n          sender.on(SenderEvents.modified, options.onModified);\n        }\n      }\n\n      const removeListeners = () => {\n        clearTimeout(waitTimer);\n        sender.actionInitiated--;\n        rheaSender.removeListener(SenderEvents.senderOpen, onSendable);\n        rheaSender.removeListener(SenderEvents.senderClose, onClose);\n      };\n\n      onSendable = (context: RheaEventContext) => {\n        removeListeners();\n        log.sender(\"[%s] Resolving the promise with amqp sender '%s'.\",\n          this.connection.id, sender.name);\n        return resolve(sender);\n      };\n\n      onClose = (context: RheaEventContext) => {\n        removeListeners();\n        log.error(\"[%s] Error occurred while creating a sender over amqp connection: %O.\",\n          this.connection.id, context.sender!.error);\n        return reject(context.sender!.error);\n      };\n\n      const actionAfterTimeout = () => {\n        removeListeners();\n        const msg: string = `Unable to create the amqp sender ${sender.name} due to ` +\n          `operation timeout.`;\n        log.error(\"[%s] %s\", this.connection.id, msg);\n        return reject(new OperationTimeoutError(msg));\n      };\n\n      // listeners that we add for completing the operation are added directly to rhea's objects.\n      rheaSender.once(SenderEvents.sendable, onSendable);\n      rheaSender.once(SenderEvents.senderClose, onClose);\n      waitTimer = setTimeout(actionAfterTimeout, this.connection.options!.operationTimeoutInSeconds! * 1000);\n    });\n  }\n\n  /**\n   * Adds event listeners for the possible events that can occur on the session object and\n   * re-emits the same event back with the received arguments from rhea's event emitter.\n   * @private\n   * @returns {void} void\n   */\n  private _initializeEventListeners(): void {\n\n    for (const eventName in SessionEvents) {\n      this._session.on(SessionEvents[eventName],\n        (context) => {\n          const params: EmitParameters = {\n            rheaContext: context,\n            emitter: this,\n            eventName: SessionEvents[eventName],\n            emitterType: \"session\",\n            connectionId: this.connection.id\n          };\n          emitEvent(params);\n        });\n    }\n\n    // Add event handlers for *_error and *_close events that can be propogated to the session\n    // object, if they are not handled at their level. * denotes - Sender and Receiver.\n\n    // Sender\n    this._session.on(SenderEvents.senderError, (context) => {\n      const params: EmitParameters = {\n        rheaContext: context,\n        emitter: this,\n        eventName: SenderEvents.senderError,\n        emitterType: \"session\",\n        connectionId: this.connection.id\n      };\n      emitEvent(params);\n    });\n    this._session.on(SenderEvents.senderClose, (context) => {\n      const params: EmitParameters = {\n        rheaContext: context,\n        emitter: this,\n        eventName: SenderEvents.senderClose,\n        emitterType: \"session\",\n        connectionId: this.connection.id\n      };\n      emitEvent(params);\n    });\n\n    // Receiver\n    this._session.on(ReceiverEvents.receiverError, (context) => {\n      const params: EmitParameters = {\n        rheaContext: context,\n        emitter: this,\n        eventName: ReceiverEvents.receiverError,\n        emitterType: \"session\",\n        connectionId: this.connection.id\n      };\n      emitEvent(params);\n    });\n    this._session.on(ReceiverEvents.receiverClose, (context) => {\n      const params: EmitParameters = {\n        rheaContext: context,\n        emitter: this,\n        eventName: ReceiverEvents.receiverClose,\n        emitterType: \"session\",\n        connectionId: this.connection.id\n      };\n      emitEvent(params);\n    });\n    if (typeof this._session.eventNames === \"function\") {\n      log.eventHandler(\"[%s] rhea-promise 'session' object is listening for events: %o \" +\n        \"emitted by rhea's 'session' object.\", this.connection.id, this._session.eventNames());\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the Apache License. See License in the project root for license information.\n\nimport {\n  Container as RheaContainer, ContainerOptions as ContainerOptionsBase, create_container,\n  Filter, Types, MessageUtil, Sasl\n} from \"rhea\";\nimport { EventEmitter } from \"events\";\nimport { ConnectionOptions, Connection } from './connection';\nimport { TlsOptions, Server as TlsServer, ConnectionOptions as TlsConnectionOptions } from \"tls\";\nimport { ListenOptions, Server, Socket } from \"net\";\n\n/**\n * Descibes the options that can be provided while creating the Container.\n * @interface ContainerOptions\n */\nexport interface ContainerOptions extends ContainerOptionsBase {\n  createdInstance?: RheaContainer;\n}\n\n/**\n * An AMQP container from which outgoing connections can be made and/or\n * to which incoming connections can be accepted.\n * @class Container\n */\nexport class Container extends EventEmitter {\n  /**\n   * @property {options} ContainerOptions Container options.\n   */\n  options: ContainerOptions;\n  /**\n   * @property {RheaContainer} _container The underlying container object from rhea.\n   * @private\n   */\n  private _container: RheaContainer;\n\n  constructor(options?: ContainerOptions) {\n    if (!options) options = {};\n    super();\n    if (options.createdInstance) {\n      this._container = options.createdInstance;\n      delete options.createdInstance;\n    } else {\n      this._container = create_container(options);\n    }\n\n    this.options = this._container.options;\n  }\n\n  get id(): string {\n    return this._container.id;\n  }\n\n  get filter(): Filter {\n    return this._container.filter;\n  }\n\n  get types(): Types {\n    return this._container.types;\n  }\n\n  get message(): MessageUtil {\n    return this._container.message;\n  }\n\n  get sasl(): Sasl {\n    return this._container.sasl;\n  }\n\n  get saslServerMechanisms(): any {\n    return this._container.sasl_server_mechanisms;\n  }\n\n  createConnection(options?: ConnectionOptions): Connection {\n    const rheaConnection = this._container.create_connection(options);\n    return new Connection({ rheaConnection: rheaConnection, container: this });\n  }\n\n  async connect(options?: ConnectionOptions): Promise<Connection> {\n    return this.createConnection(options).open();\n  }\n\n  listen(options: ListenOptions | TlsOptions): Server | TlsServer {\n    return this._container.listen(options);\n  }\n\n  generateUUid(): string {\n    return this._container.generate_uuid();\n  }\n\n  stringToUuid(uuidString: string): Buffer {\n    return this._container.string_to_uuid(uuidString);\n  }\n\n  uuidToString(buffer: Buffer): string {\n    return this._container.uuid_to_string(buffer);\n  }\n\n  websocketAccept(socket: Socket, options: TlsConnectionOptions): void {\n    return this._container.websocket_accept(socket, options);\n  }\n\n  websocketConnect(impl: any): any {\n    return this._container.websocket_connect(impl);\n  }\n\n  static create(options?: ContainerOptionsBase): Container {\n    return new Container(options);\n  }\n\n  static copyFromContainerInstance(instance: RheaContainer): Container {\n    return new Container({ createdInstance: instance });\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the Apache License. See License in the project root for license information.\n\n/**\n * Describes the default operation timeout in seconds. Value: `60`.\n */\nexport const defaultOperationTimeoutInSeconds = 60;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the Apache License. See License in the project root for license information.\n\nimport { PeerCertificate } from \"tls\";\nimport { Socket } from \"net\";\nimport * as log from \"./log\";\nimport { Session } from \"./session\";\nimport { Sender, SenderOptions } from \"./sender\";\nimport { Receiver, ReceiverOptions } from \"./receiver\";\nimport { Container } from \"./container\";\nimport { defaultOperationTimeoutInSeconds } from \"./util/constants\";\nimport { Func, EmitParameters, emitEvent } from \"./util/utils\";\nimport {\n  ConnectionEvents, SessionEvents, SenderEvents, ReceiverEvents, create_connection, websocket_connect,\n  ConnectionOptions as RheaConnectionOptions, Connection as RheaConnection, AmqpError, Dictionary,\n  ConnectionError, EventContext as RheaEventContext\n} from \"rhea\";\n\nimport { OnAmqpEvent } from \"./eventContext\";\nimport { Entity } from \"./entity\";\nimport { OperationTimeoutError } from \"./operationTimeoutError\";\n\n/**\n * Describes the options that can be provided while creating an AMQP sender. One can also provide\n * a session if it was already created.\n * @interface SenderOptionsWithSession\n */\nexport interface SenderOptionsWithSession extends SenderOptions {\n  session?: Session;\n}\n\n/**\n * Describes the options that can be provided while creating an AMQP receiver. One can also provide\n * a session if it was already created.\n * @interface ReceiverOptionsWithSession\n */\nexport interface ReceiverOptionsWithSession extends ReceiverOptions {\n  session?: Session;\n}\n\n/**\n * Describes the options that can be provided while creating an AMQP connection.\n * @interface ConnectionOptions\n */\nexport interface ConnectionOptions extends RheaConnectionOptions {\n  /**\n   * @property {number} [operationTimeoutInSeconds] - The duration in which the promise should\n   * complete (resolve/reject). If it is not completed, then the Promise will be rejected after\n   * timeout occurs. Default: `60 seconds`.\n   */\n  operationTimeoutInSeconds?: number;\n\n  /**\n   * @property {Object} [webSocketOptions] - Options that include a web socket constructor along\n   * with arguments to be passed to the function returned by rhea.websocket_connect()\n   * This is required when the connection needs to use web sockets but is being created without\n   * creating a container first. If a container is already available, use `websocket_connect` on it\n   * directly instead.\n   */\n  webSocketOptions?: {\n    /**\n     * @property {any} [webSocket] - The WebSocket constructor used to create an AMQP\n     * connection over a WebSocket.\n     */\n    webSocket: any;\n    /**\n     * @property {string} [url] - Websocket url which will be passed to the function returned by\n     * rhea.websocket_connect()\n     */\n    url: string;\n    /**\n     * @property {string[]} {protocol} - Websocket SubProtocol to be passed to the function\n     * returned by rhea.websocket_connect()\n     */\n    protocol: string[],\n    /***\n     * @property {any} {options} - Options to be passed to the function returned by\n     * rhea.websocket_connect()\n     */\n    options?: any\n  };\n}\n\n\n\n/**\n * Describes the options that can be provided while creating a rhea-promise connection from an\n * already created rhea connection object.\n * @interface CreatedRheaConnectionOptions\n */\nexport interface CreatedRheaConnectionOptions {\n  /**\n   * @property {number} [operationTimeoutInSeconds] - The duration in which the promise should\n   * complete (resolve/reject). If it is not completed, then the Promise will be rejected after\n   * timeout occurs. Default: `60 seconds`.\n   */\n  operationTimeoutInSeconds?: number;\n  /**\n   * @property rheaConnection The connection object from rhea\n   */\n  rheaConnection: RheaConnection;\n  /**\n   * @property container The Container object from this (rhea-promise) library.\n   */\n  container: Container;\n}\n\n// Determines whether the given object is a CreatedRheConnectionOptions object.\nfunction isCreatedRheaConnectionOptions(obj: any): boolean {\n  return (obj && typeof obj.container === \"object\" && typeof obj.rheaConnection === \"object\");\n}\n\n/**\n * Provides a sender and a receiver link on the same session. It is useful while constructing a\n * request/response link.\n *\n * @interface ReqResLink\n */\nexport interface ReqResLink {\n  /**\n   * @property {Sender} sender - The sender link for sending a request.\n   */\n  sender: Sender;\n  /**\n   * @property {Receiver} receiver - The receiver link for receiving a response.\n   */\n  receiver: Receiver;\n  /**\n   * @property {Session} session - The underlying session on whicn the sender and receiver links\n   * exist.\n   */\n  session: Session;\n}\n\n/**\n * Describes the event listeners that can be added to the Connection.\n * @interface Connection\n */\nexport declare interface Connection {\n  on(event: ConnectionEvents, listener: OnAmqpEvent): this;\n}\n\n/**\n * Descibes the AQMP Connection.\n * @class Connection\n */\nexport class Connection extends Entity {\n  /**\n   * @property {ConnectionOptions} options Options that can be provided while creating the\n   * connection.\n   */\n  options: ConnectionOptions;\n  /**\n   * @property {Container} container The underlying Container instance on which the connection\n   * exists.\n   */\n  readonly container: Container;\n  /**\n   * @property {RheaConnection} _connection The connection object from rhea library.\n   * @private\n   */\n  private _connection: RheaConnection;\n\n  /**\n   * Creates an instance of the Connection object.\n   * @constructor\n   * @param {Connection} _connection The connection object from rhea library.\n   */\n  constructor(options?: ConnectionOptions | CreatedRheaConnectionOptions) {\n    super();\n    if (!options) options = {};\n    if (options.operationTimeoutInSeconds == undefined) {\n      options.operationTimeoutInSeconds = defaultOperationTimeoutInSeconds;\n    }\n\n    if (isCreatedRheaConnectionOptions(options)) {\n      this._connection = (options as CreatedRheaConnectionOptions).rheaConnection;\n      this.container = (options as CreatedRheaConnectionOptions).container;\n    } else {\n      const connectionOptions = options as ConnectionOptions;\n      if (connectionOptions.webSocketOptions) {\n        const ws = websocket_connect(connectionOptions.webSocketOptions.webSocket);\n        (connectionOptions.connection_details as any) = ws(\n          connectionOptions.webSocketOptions.url,\n          connectionOptions.webSocketOptions.protocol,\n          connectionOptions.webSocketOptions.options);\n      }\n      this._connection = create_connection(connectionOptions);\n      this.container = Container.copyFromContainerInstance(this._connection.container);\n    }\n\n    this.options = this._connection.options;\n    this.options.operationTimeoutInSeconds = options.operationTimeoutInSeconds;\n\n    this._initializeEventListeners();\n  }\n\n  /**\n   * @property {string} id Returns the connection id.\n   * @readonly\n   */\n  get id(): string {\n    return this._connection.options.id!;\n  }\n\n  /**\n   * @property {Dictionary<any> | undefined} [properties] Provides the connection properties.\n   * @readonly\n   */\n  get properties(): Dictionary<any> | undefined {\n    return this._connection.properties;\n  }\n\n  /**\n   * @property {number | undefined} [maxFrameSize] Provides the max frame size.\n   * @readonly\n   */\n  get maxFrameSize(): number | undefined {\n    return this._connection.max_frame_size;\n  }\n\n  /**\n   * @property {number | undefined} [idleTimeout] Provides the idle timeout for the connection.\n   * @readonly\n   */\n  get idleTimeout(): number | undefined {\n    return this._connection.idle_time_out;\n  }\n\n  /**\n   * @property {number | undefined} [channelMax] Provides the maximum number of channels supported.\n   * @readonly\n   */\n  get channelMax(): number | undefined {\n    return this._connection.channel_max;\n  }\n\n  /**\n   * @property {AmqpError | Error | undefined} [error] Provides the last error that occurred on the\n   * connection.\n   */\n  get error(): AmqpError | Error | undefined {\n    return this._connection.error;\n  }\n\n  /**\n   * Removes the provided session from the internal map in rhea.\n   * Also removes all the event handlers added in the rhea-promise library on the provided session.\n   * @param {Session} session The session to be removed.\n   */\n  removeSession(session: Session): void {\n    return session.remove();\n  }\n\n  /**\n   * Creates a new amqp connection.\n   * @return {Promise<Connection>} Promise<Connection>\n   * - **Resolves** the promise with the Connection object when rhea emits the \"connection_open\" event.\n   * - **Rejects** the promise with an AmqpError when rhea emits the \"connection_close\" event\n   * while trying to establish an amqp connection.\n   */\n  open(): Promise<Connection> {\n    return new Promise((resolve, reject) => {\n      if (!this.isOpen()) {\n\n        let onOpen: Func<RheaEventContext, void>;\n        let onClose: Func<RheaEventContext, void>;\n        let waitTimer: any;\n\n        const removeListeners: Function = () => {\n          clearTimeout(waitTimer);\n          this.actionInitiated--;\n          this._connection.removeListener(ConnectionEvents.connectionOpen, onOpen);\n          this._connection.removeListener(ConnectionEvents.connectionClose, onClose);\n          this._connection.removeListener(ConnectionEvents.disconnected, onClose);\n        };\n\n        onOpen = (context: RheaEventContext) => {\n          removeListeners();\n          log.connection(\"[%s] Resolving the promise with amqp connection.\", this.id);\n          return resolve(this);\n        };\n\n        onClose = (context: RheaEventContext) => {\n          removeListeners();\n          const err = context.error || context.connection.error || Error('Failed to connect');\n          log.error(\"[%s] Error occurred while establishing amqp connection: %O\",\n            this.id, err);\n          return reject(err);\n        };\n\n        const actionAfterTimeout = () => {\n          removeListeners();\n          const msg: string = `Unable to open the amqp connection \"${this.id}\" due to operation timeout.`;\n          log.error(\"[%s] %s\", this.id, msg);\n          return reject(new Error(msg));\n        };\n\n        // listeners that we add for completing the operation are added directly to rhea's objects.\n        this._connection.once(ConnectionEvents.connectionOpen, onOpen);\n        this._connection.once(ConnectionEvents.connectionClose, onClose);\n        this._connection.once(ConnectionEvents.disconnected, onClose);\n        waitTimer = setTimeout(actionAfterTimeout, this.options!.operationTimeoutInSeconds! * 1000);\n        log.connection(\"[%s] Trying to create a new amqp connection.\", this.id);\n        this._connection.connect();\n        this.actionInitiated++;\n      } else {\n        return resolve(this);\n      }\n    });\n  }\n\n\n  /**\n   * Closes the amqp connection.\n   * @return {Promise<void>} Promise<void>\n   * - **Resolves** the promise when rhea emits the \"connection_close\" event.\n   * - **Rejects** the promise with an AmqpError when rhea emits the \"connection_error\" event while\n   * trying to close an amqp connection.\n   */\n  close(): Promise<void> {\n    return new Promise<void>((resolve, reject) => {\n      log.error(\"[%s] The connection is open ? -> %s\", this.id, this.isOpen());\n      if (this.isOpen()) {\n        let onClose: Func<RheaEventContext, void>;\n        let onError: Func<RheaEventContext, void>;\n        let waitTimer: any;\n        const removeListeners = () => {\n          clearTimeout(waitTimer);\n          this.actionInitiated--;\n          this._connection.removeListener(ConnectionEvents.connectionError, onError);\n          this._connection.removeListener(ConnectionEvents.connectionClose, onClose);\n        };\n\n        onClose = (context: RheaEventContext) => {\n          removeListeners();\n          log.connection(\"[%s] Resolving the promise as the connection has been successfully closed.\",\n            this.id);\n          return resolve();\n        };\n\n        onError = (context: RheaEventContext) => {\n          removeListeners();\n          log.error(\"[%s] Error occurred while closing amqp connection: %O.\",\n            this.id, context.connection.error);\n          return reject(context.connection.error);\n        };\n\n        const actionAfterTimeout = () => {\n          removeListeners();\n          const msg: string = `Unable to close the amqp connection \"${this.id}\" due to operation timeout.`;\n          log.error(\"[%s] %s\", this.id, msg);\n          return reject(new Error(msg));\n        };\n\n        // listeners that we add for completing the operation are added directly to rhea's objects.\n        this._connection.once(ConnectionEvents.connectionClose, onClose);\n        this._connection.once(ConnectionEvents.connectionError, onError);\n        waitTimer = setTimeout(actionAfterTimeout, this.options!.operationTimeoutInSeconds! * 1000);\n        this._connection.close();\n        this.actionInitiated++;\n      } else {\n        return resolve();\n      }\n    });\n  }\n\n  /**\n   * Determines whether the connection is open.\n   * @returns {boolean} result `true` - is open; `false` otherwise.\n   */\n  isOpen(): boolean {\n    let result: boolean = false;\n    if (this._connection && this._connection.is_open && this._connection.is_open()) {\n      result = true;\n    }\n    return result;\n  }\n\n  /**\n   * Clears all the amqp sessions from the internal map maintained in rhea. This does not remove any\n   * of the event handlers added in the rhea-promise library. To clear such event handlers, either\n   * call remove() or close() on each session\n   */\n  removeAllSessions(): void {\n    if (this._connection) {\n      this._connection.remove_all_sessions();\n    }\n  }\n\n  /**\n   * Determines whether the remote end of the connection is open.\n   * @returns {boolean} result `true` - is open; `false` otherwise.\n   */\n  isRemoteOpen(): boolean {\n    return this._connection.is_remote_open();\n  }\n\n  /**\n   * Gets the connection error if present.\n   * @returns {ConnectionError | undefined} ConnectionError | undefined\n   */\n  getError(): ConnectionError | undefined {\n    return this._connection.get_error();\n  }\n\n  /**\n   * Gets the peer certificate if present.\n   * @returns {PeerCertificate | undefined} PeerCertificate | undefined\n   */\n  getPeerCertificate(): PeerCertificate | undefined {\n    return this._connection.get_peer_certificate();\n  }\n\n  /**\n   * Gets the tls socket if present.\n   * @returns {Socket | undefined} Socket | undefined\n   */\n  getTlsSocket(): Socket | undefined {\n    return this._connection.get_tls_socket();\n  }\n\n  /**\n   * Determines whether the close from the peer is a response to a locally initiated close request\n   * for the connection.\n   * @returns {boolean} `true` if close was locally initiated, `false` otherwise.\n   */\n  wasCloseInitiated(): boolean {\n    return this._connection.is_closed();\n  }\n\n  /**\n   * Creates an amqp session on the provided amqp connection.\n   * @return {Promise<Session>} Promise<Session>\n   * - **Resolves** the promise with the Session object when rhea emits the \"session_open\" event.\n   * - **Rejects** the promise with an AmqpError when rhea emits the \"session_close\" event while\n   * trying to create an amqp session.\n   */\n  createSession(): Promise<Session> {\n    return new Promise((resolve, reject) => {\n      const rheaSession = this._connection.create_session();\n      const session = new Session(this, rheaSession);\n      session.actionInitiated++;\n      let onOpen: Func<RheaEventContext, void>;\n      let onClose: Func<RheaEventContext, void>;\n      let waitTimer: any;\n\n      const removeListeners = () => {\n        clearTimeout(waitTimer);\n        session.actionInitiated--;\n        rheaSession.removeListener(SessionEvents.sessionOpen, onOpen);\n        rheaSession.removeListener(SessionEvents.sessionClose, onClose);\n      };\n\n      onOpen = (context: RheaEventContext) => {\n        removeListeners();\n        log.session(\"[%s] Resolving the promise with amqp session.\", this.id);\n        return resolve(session);\n      };\n\n      onClose = (context: RheaEventContext) => {\n        removeListeners();\n        log.error(\"[%s] Error occurred while establishing a session over amqp connection: %O.\",\n          this.id, context.session!.error);\n        return reject(context.session!.error);\n      };\n\n      const actionAfterTimeout = () => {\n        removeListeners();\n        const msg: string = `Unable to create the amqp session due to operation timeout.`;\n        log.error(\"[%s] %s\", this.id, msg);\n        return reject(new OperationTimeoutError(msg));\n      };\n\n      // listeners that we add for completing the operation are added directly to rhea's objects.\n      rheaSession.once(SessionEvents.sessionOpen, onOpen);\n      rheaSession.once(SessionEvents.sessionClose, onClose);\n      log.session(\"[%s] Calling amqp session.begin().\", this.id);\n      waitTimer = setTimeout(actionAfterTimeout, this.options!.operationTimeoutInSeconds! * 1000);\n      rheaSession.begin();\n    });\n  }\n\n  /**\n   * Creates an amqp sender link. It either uses the provided session or creates a new one.\n   * @param {SenderOptionsWithSession} options Optional parameters to create a sender link.\n   * @return {Promise<Sender>} Promise<Sender>.\n   */\n  async createSender(options?: SenderOptionsWithSession): Promise<Sender> {\n    if (options && options.session && options.session.createSender) {\n      return options.session.createSender(options);\n    }\n    const session = await this.createSession();\n    return session.createSender(options);\n  }\n\n  /**\n   * Creates an amqp receiver link. It either uses the provided session or creates a new one.\n   * @param {ReceiverOptionsWithSession} options Optional parameters to create a receiver link.\n   * @return {Promise<Receiver>} Promise<Receiver>.\n   */\n  async createReceiver(options?: ReceiverOptionsWithSession): Promise<Receiver> {\n    if (options && options.session && options.session.createReceiver) {\n      return options.session.createReceiver(options);\n    }\n    const session = await this.createSession();\n    return session.createReceiver(options);\n  }\n\n  /**\n   * Creates an amqp sender-receiver link. It either uses the provided session or creates a new one.\n   * This method creates a sender-receiver link on the same session. It is useful for management\n   * style operations where one may want to send a request and await for response.\n   * @param {SenderOptions} senderOptions Parameters to create a sender.\n   * @param {ReceiverOptions} receiverOptions Parameters to create a receiver.\n   * @param {Session} [session] The optional session on which the sender and receiver links will be\n   * created.\n   * @return {Promise<ReqResLink>} Promise<ReqResLink>\n   */\n  async createRequestResponseLink(senderOptions: SenderOptions, receiverOptions: ReceiverOptions,\n    providedSession?: Session): Promise<ReqResLink> {\n    if (!senderOptions) {\n      throw new Error(`Please provide sender options.`);\n    }\n    if (!receiverOptions) {\n      throw new Error(`Please provide receiver options.`);\n    }\n    const session = providedSession || await this.createSession();\n    const [sender, receiver] = await Promise.all([\n      session.createSender(senderOptions),\n      session.createReceiver(receiverOptions)\n    ]);\n    log.connection(\"[%s] Successfully created the sender and receiver links on the same session.\",\n      this.id);\n    return {\n      session: session,\n      sender: sender,\n      receiver: receiver\n    };\n  }\n\n  /**\n   * Adds event listeners for the possible events that can occur on the connection object and\n   * re-emits the same event back with the received arguments from rhea's event emitter.\n   * @private\n   * @returns {void} void\n   */\n  private _initializeEventListeners(): void {\n    for (const eventName in ConnectionEvents) {\n      this._connection.on(ConnectionEvents[eventName], (context) => {\n        const params: EmitParameters = {\n          rheaContext: context,\n          emitter: this,\n          eventName: ConnectionEvents[eventName],\n          emitterType: \"connection\",\n          connectionId: this.id\n        };\n        emitEvent(params);\n      });\n    }\n\n    // Add event handlers for *_error and *_close events that can be propogated to the connection\n    // object, if they are not handled at their level. * denotes - Sender, Receiver, Session\n\n    // Sender\n    this._connection.on(SenderEvents.senderError, (context) => {\n      const params: EmitParameters = {\n        rheaContext: context,\n        emitter: this,\n        eventName: SenderEvents.senderError,\n        emitterType: \"connection\",\n        connectionId: this.id\n      };\n      emitEvent(params);\n    });\n    this._connection.on(SenderEvents.senderClose, (context) => {\n      const params: EmitParameters = {\n        rheaContext: context,\n        emitter: this,\n        eventName: SenderEvents.senderClose,\n        emitterType: \"connection\",\n        connectionId: this.id\n      };\n      emitEvent(params);\n    });\n\n    // Receiver\n    this._connection.on(ReceiverEvents.receiverError, (context) => {\n      const params: EmitParameters = {\n        rheaContext: context,\n        emitter: this,\n        eventName: ReceiverEvents.receiverError,\n        emitterType: \"connection\",\n        connectionId: this.id\n      };\n      emitEvent(params);\n    });\n    this._connection.on(ReceiverEvents.receiverClose, (context) => {\n      const params: EmitParameters = {\n        rheaContext: context,\n        emitter: this,\n        eventName: ReceiverEvents.receiverClose,\n        emitterType: \"connection\",\n        connectionId: this.id\n      };\n      emitEvent(params);\n    });\n\n    // Session\n    this._connection.on(SessionEvents.sessionError, (context) => {\n      const params: EmitParameters = {\n        rheaContext: context,\n        emitter: this,\n        eventName: SessionEvents.sessionError,\n        emitterType: \"connection\",\n        connectionId: this.id\n      };\n      emitEvent(params);\n    });\n    this._connection.on(SessionEvents.sessionClose, (context) => {\n      const params: EmitParameters = {\n        rheaContext: context,\n        emitter: this,\n        eventName: SessionEvents.sessionClose,\n        emitterType: \"connection\",\n        connectionId: this.id\n      };\n      emitEvent(params);\n    });\n    if (typeof this._connection.eventNames === \"function\") {\n      log.eventHandler(\"[%s] rhea-promise 'connection' object is listening for events: %o \" +\n        \"emitted by rhea's 'connection' object.\", this.id, this._connection.eventNames());\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the Apache License. See License in the project root for license information.\n\nimport { Connection } from \"./connection\";\nimport { Container } from \"./container\";\nimport { Session } from \"./session\";\nimport {\n  Delivery, Message, ConnectionError, EventContext as RheaEventContext\n} from \"rhea\";\nimport { Receiver } from \"./receiver\";\nimport { Sender } from \"./sender\";\nimport { Link, LinkType } from './link';\nimport * as log from \"./log\";\n\n/**\n * Describes the signature of the event handler for any event emitted by rhea-promise.\n * @type OnAmqpEvent\n * @param {EventContext} context The rhea-promise event context.\n */\nexport type OnAmqpEvent = (context: EventContext) => void;\n\n/**\n * Defines the AMQP Connection context. This context is provided when you add an\n * event handler to any of the objects.\n * @interface EventContext\n */\nexport interface EventContext {\n  /**\n   * @property {Connection} connection The amqp connection.\n   */\n  connection: Connection;\n  /**\n   * @property {Container} container The amqp container\n   */\n  container: Container;\n  /**\n   * @property {Session} [session] The amqp session link that was created on the amqp connection.\n   */\n  session?: Session;\n  /**\n   * @property {Delivery} [delivery] The amqp delivery that is received after sending a message.\n   */\n  delivery?: Delivery;\n  /**\n   * @property {AmqpMessage} [message] The amqp message that is received in the message event\n   * handler when rhea emits a message event on a receiver.\n   */\n  message?: Message;\n  /**\n   * @property {Receiver} [receiver] The amqp receiver link that was created on the amqp connection.\n   */\n  receiver?: Receiver;\n  /**\n   * @property {Sender} [sender] The amqp sender link that was created on the amqp connection.\n   */\n  sender?: Sender;\n  /**\n   * @property {Error | ConnectionError} [error] An optional error object.\n   * - On `connection_error` event this property will be present. It will have the same information as\n   * `connection.error` but the type will be `ConnectionError`.\n   * - An error with SASL will be available through this property, but not through `connection.error`\n   * (as the amqp connection was never established).\n   * - On `disconnected` event the context will have an error property that will be of type\n   * `Error` (or some subclass) as emitted by the underlying socket.\n   * - The `session_error`, `sender_error` and `receiver_error` events will not have this (`error`)\n   * property on the EventContext.\n   */\n  error?: Error | ConnectionError;\n  /**\n   * @property {boolean} [reconnecting] The value is true if the library is attempting to automatically\n   * reconnect and false if it has reached the reconnect limit. If reconnect has not been enabled\n   * or if the connection is a tcp server, then the reconnecting property is undefined. This property\n   * is used in conjunction with \"disconnected\" event.\n   */\n  reconnecting?: boolean;\n  /**\n   * @property {RheaEventContext} _context The EventContext emitted by objects from rhea. This\n   * can be used as a fallback mechanism when the translated EventContext provided by this library\n   * has any issues.\n   */\n  _context: RheaEventContext;\n}\n\nexport module EventContext {\n  /**\n   * Translates rhea's EventContext into rhea-promise EventContext\n   * @param rheaContext The received context from rhea's event emitter\n   * @param emitter The rhea-promise equivalent object that is supposed emit the same event\n   * @param eventName The name of the event for which the context will be translated\n   *\n   * @returns EventContext The translated EventContext.\n   */\n  export function translate(\n    rheaContext: RheaEventContext,\n    emitter: Link | Session | Connection,\n    eventName: string): EventContext {\n    const connectionId = (rheaContext.connection && rheaContext.connection.options) ? rheaContext.connection.options.id : \"\";\n    log.contextTranslator(\"[%s] Translating the context for event: '%s'.\", connectionId, eventName);\n    // initialize the result\n    const result: EventContext = {\n      _context: rheaContext,\n      ...rheaContext\n    } as any;\n\n    const connection: Connection = emitter instanceof Connection\n      ? emitter\n      : (emitter as Link | Session).connection;\n\n    // set rhea-promise connection and container\n    result.connection = connection;\n    result.container = connection.container;\n\n    // set rhea-promise session, sender/receiver.\n    if (emitter instanceof Link) {\n      result.session = emitter.session;\n      if (emitter.type === LinkType.receiver && rheaContext.receiver) {\n        result.receiver = emitter as Receiver;\n      } else if (emitter.type === LinkType.sender && rheaContext.sender) {\n        result.sender = emitter as Sender;\n      }\n    } else if (emitter instanceof Session) {\n      result.session = emitter;\n    }\n\n    return result;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the Apache License. See License in the project root for license information.\n\nexport {\n  Delivery, Message, MessageProperties, MessageHeader, EventContext as RheaEventContext,\n  ConnectionOptions as ConnectionOptionsBase, AmqpError, Dictionary, types, message, filter, Filter,\n  uuid_to_string, generate_uuid, string_to_uuid, LinkError, ProtocolError, LinkOptions,\n  DeliveryAnnotations, MessageAnnotations, ReceiverEvents, SenderEvents, ConnectionEvents,\n  SessionEvents, ContainerOptions as ContainerOptionsBase, TerminusOptions, Types, Sasl,\n  EndpointOptions, MessageUtil, TypeError, SimpleError, Source, ConnectionError, Typed, WebSocketImpl, WebSocketInstance\n} from \"rhea\";\n\nexport { EventContext, OnAmqpEvent } from \"./eventContext\";\nexport { Container, ContainerOptions } from \"./container\";\nexport {\n  Connection, ReqResLink, ConnectionOptions, ReceiverOptionsWithSession, SenderOptionsWithSession\n} from \"./connection\";\nexport { Session } from \"./session\";\nexport { Receiver, ReceiverOptions } from \"./receiver\";\nexport { Sender, SenderOptions } from \"./sender\";\nexport {\n  Func, AmqpResponseStatusCode, isAmqpError, ConnectionStringParseOptions, delay, messageHeader,\n  messageProperties, parseConnectionString, ParsedOutput\n} from \"./util/utils\";\n","'use strict';\n\nvar AsyncLock = function (opts) {\n\topts = opts || {};\n\n\tthis.Promise = opts.Promise || Promise;\n\n\t// format: {key : [fn, fn]}\n\t// queues[key] = null indicates no job running for key\n\tthis.queues = {};\n\n\t// domain of current running func {key : fn}\n\tthis.domains = {};\n\n\t// lock is reentrant for same domain\n\tthis.domainReentrant = opts.domainReentrant || false;\n\n\tthis.timeout = opts.timeout || AsyncLock.DEFAULT_TIMEOUT;\n\tthis.maxPending = opts.maxPending || AsyncLock.DEFAULT_MAX_PENDING;\n};\n\nAsyncLock.DEFAULT_TIMEOUT = 0; //Never\nAsyncLock.DEFAULT_MAX_PENDING = 1000;\n\n/**\n * Acquire Locks\n *\n * @param {String|Array} key \tresource key or keys to lock\n * @param {function} fn \tasync function\n * @param {function} cb \tcallback function, otherwise will return a promise\n * @param {Object} opts \toptions\n */\nAsyncLock.prototype.acquire = function (key, fn, cb, opts) {\n\tif (Array.isArray(key)) {\n\t\treturn this._acquireBatch(key, fn, cb, opts);\n\t}\n\n\tif (typeof (fn) !== 'function') {\n\t\tthrow new Error('You must pass a function to execute');\n\t}\n\n\t// faux-deferred promise using new Promise() (as Promise.defer is deprecated)\n\tvar deferredResolve = null;\n\tvar deferredReject = null;\n\tvar deferred = null;\n\n\tif (typeof (cb) !== 'function') {\n\t\topts = cb;\n\t\tcb = null;\n\n\t\t// will return a promise\n\t\tdeferred =  new this.Promise(function(resolve, reject) {\n\t\t\tdeferredResolve = resolve;\n\t\t\tdeferredReject = reject;\n\t\t});\n\t}\n\n\topts = opts || {};\n\n\tvar resolved = false;\n\tvar timer = null;\n\tvar self = this;\n\n\tvar done = function (locked, err, ret) {\n\t\tif (locked) {\n\t\t\tif (self.queues[key].length === 0) {\n\t\t\t\tdelete self.queues[key];\n\t\t\t}\n\t\t\tdelete self.domains[key];\n\t\t}\n\n\t\tif (!resolved) {\n\t\t\tif (!deferred) {\n\t\t\t\tif (typeof (cb) === 'function') {\n\t\t\t\t\tcb(err, ret);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\t//promise mode\n\t\t\t\tif (err) {\n\t\t\t\t\tdeferredReject(err);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdeferredResolve(ret);\n\t\t\t\t}\n\t\t\t}\n\t\t\tresolved = true;\n\t\t}\n\n\t\tif (locked) {\n\t\t\t//run next func\n\t\t\tif (!!self.queues[key] && self.queues[key].length > 0) {\n\t\t\t\tself.queues[key].shift()();\n\t\t\t}\n\t\t}\n\t};\n\n\tvar exec = function (locked) {\n\t\tif (resolved) { // may due to timed out\n\t\t\treturn done(locked);\n\t\t}\n\n\t\tif (timer) {\n\t\t\tclearTimeout(timer);\n\t\t\ttimer = null;\n\t\t}\n\n\t\tif (locked) {\n\t\t\tself.domains[key] = process.domain;\n\t\t}\n\n\t\t// Callback mode\n\t\tif (fn.length === 1) {\n\t\t\tvar called = false;\n\t\t\tfn(function (err, ret) {\n\t\t\t\tif (!called) {\n\t\t\t\t\tcalled = true;\n\t\t\t\t\tdone(locked, err, ret);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\telse {\n\t\t\t// Promise mode\n\t\t\tself._promiseTry(function () {\n\t\t\t\treturn fn();\n\t\t\t})\n\t\t\t.then(function(ret){\n\t\t\t\tdone(locked, undefined, ret);\n\t\t\t}, function(error){\n\t\t\t\tdone(locked, error);\n\t\t\t});\n\t\t}\n\t};\n\tif (!!process.domain) {\n\t\texec = process.domain.bind(exec);\n\t}\n\n\tif (!self.queues[key]) {\n\t\tself.queues[key] = [];\n\t\texec(true);\n\t}\n\telse if (self.domainReentrant && !!process.domain && process.domain === self.domains[key]) {\n\t\t// If code is in the same domain of current running task, run it directly\n\t\t// Since lock is re-enterable\n\t\texec(false);\n\t}\n\telse if (self.queues[key].length >= self.maxPending) {\n\t\tdone(false, new Error('Too much pending tasks'));\n\t}\n\telse {\n\t\tvar taskFn = function () {\n\t\t\texec(true);\n\t\t};\n\t\tif (opts.skipQueue) {\n\t\t\tself.queues[key].unshift(taskFn);\n\t\t} else {\n\t\t\tself.queues[key].push(taskFn);\n\t\t}\n\n\t\tvar timeout = opts.timeout || self.timeout;\n\t\tif (timeout) {\n\t\t\ttimer = setTimeout(function () {\n\t\t\t\ttimer = null;\n\t\t\t\tdone(false, new Error('async-lock timed out'));\n\t\t\t}, timeout);\n\t\t}\n\t}\n\n\tif (deferred) {\n\t\treturn deferred;\n\t}\n};\n\n/*\n * Below is how this function works:\n *\n * Equivalent code:\n * self.acquire(key1, function(cb){\n *     self.acquire(key2, function(cb){\n *         self.acquire(key3, fn, cb);\n *     }, cb);\n * }, cb);\n *\n * Equivalent code:\n * var fn3 = getFn(key3, fn);\n * var fn2 = getFn(key2, fn3);\n * var fn1 = getFn(key1, fn2);\n * fn1(cb);\n */\nAsyncLock.prototype._acquireBatch = function (keys, fn, cb, opts) {\n\tif (typeof (cb) !== 'function') {\n\t\topts = cb;\n\t\tcb = null;\n\t}\n\n\tvar self = this;\n\tvar getFn = function (key, fn) {\n\t\treturn function (cb) {\n\t\t\tself.acquire(key, fn, cb, opts);\n\t\t};\n\t};\n\n\tvar fnx = fn;\n\tkeys.reverse().forEach(function (key) {\n\t\tfnx = getFn(key, fnx);\n\t});\n\n\tif (typeof (cb) === 'function') {\n\t\tfnx(cb);\n\t}\n\telse {\n\t\treturn new this.Promise(function (resolve, reject) {\n\t\t\t// check for promise mode in case keys is empty array\n\t\t\tif (fnx.length === 1) {\n\t\t\t\tfnx(function (err, ret) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treject(err);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tresolve(ret);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tresolve(fnx());\n\t\t\t}\n\t\t});\n\t}\n};\n\n/*\n *\tWhether there is any running or pending asyncFunc\n *\n *\t@param {String} key\n */\nAsyncLock.prototype.isBusy = function (key) {\n\tif (!key) {\n\t\treturn Object.keys(this.queues).length > 0;\n\t}\n\telse {\n\t\treturn !!this.queues[key];\n\t}\n};\n\n/**\n * Promise.try() implementation to become independent of Q-specific methods\n */\nAsyncLock.prototype._promiseTry = function(fn) {\n\ttry {\n\t\treturn this.Promise.resolve(fn());\n\t} catch (e) {\n\t\treturn this.Promise.reject(e);\n\t}\n};\n\nmodule.exports = AsyncLock;\n","'use strict';\nmodule.exports = require('./lib');\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License. See License.txt in the project root for license information.\n\nimport AsyncLock from \"async-lock\";\nexport { AsyncLock };\n/**\n * Describes the options that can be provided to create an async lock.\n * @interface AsyncLockOptions\n */\nexport interface AsyncLockOptions {\n  /**\n   * @property {number} [timeout] The max timeout. Default is: 0 (never timeout).\n   */\n  timeout?: number;\n  /**\n   * @property {number} [maxPending] Maximum pending tasks. Default is: 1000.\n   */\n  maxPending?: number;\n  /**\n   * @property {boolean} [domainReentrant] Whether lock can reenter in the same domain.\n   * Default is: false.\n   */\n  domainReentrant?: boolean;\n  /**\n   * @property {any} [Promise] Your implementation of the promise. Default is: global promise.\n   */\n  Promise?: any;\n}\n/**\n * A constant that indicates whether the environment is node.js or browser based.\n */\nexport const isNode =\n  !!process &&\n  !!process.version &&\n  !!process.versions &&\n  !!process.versions.node;\n\n/**\n * Describes the servicebus connection string model.\n * @interface ServiceBusConnectionStringModel\n */\nexport interface ServiceBusConnectionStringModel {\n  Endpoint: string;\n  SharedAccessKeyName: string;\n  SharedAccessKey: string;\n  EntityPath?: string;\n  [x: string]: any;\n}\n\n/**\n * Describes the eventhub connection string model.\n * @interface EventHubConnectionStringModel\n */\nexport interface EventHubConnectionStringModel {\n  Endpoint: string;\n  SharedAccessKeyName: string;\n  SharedAccessKey: string;\n  EntityPath?: string;\n  [x: string]: any;\n}\n\n/**\n * Describes the stroage connection string model.\n * @interface StorageConnectionStringModel\n */\nexport interface StorageConnectionStringModel {\n  DefaultEndpointsProtocol: string;\n  AccountName: string;\n  AccountKey: string;\n  EndpointSuffix: string;\n  [x: string]: any;\n}\n\n/**\n * Describes the iothub connection string model.\n * @interface IotHubConnectionStringModel\n */\nexport interface IotHubConnectionStringModel {\n  HostName: string;\n  SharedAccessKeyName: string;\n  SharedAccessKey: string;\n  DeviceId?: string;\n}\n\n/**\n * Defines an object with possible properties defined in T.\n * @type ParsedOutput<T>\n */\nexport type ParsedOutput<T> = { [P in keyof T]: T[P] };\n\n/**\n * Parses the connection string and returns an object of type T.\n *\n * Connection strings have the following syntax:\n *\n * ConnectionString ::= Part { \";\" Part } [ \";\" ] [ WhiteSpace ]\n * Part             ::= [ PartLiteral [ \"=\" PartLiteral ] ]\n * PartLiteral      ::= [ WhiteSpace ] Literal [ WhiteSpace ]\n * Literal          ::= ? any sequence of characters except ; or = or WhiteSpace ?\n * WhiteSpace       ::= ? all whitespace characters including \\r and \\n ?\n *\n * @param {string} connectionString The connection string to be parsed.\n * @returns {ParsedOutput<T>} ParsedOutput<T>.\n */\nexport function parseConnectionString<T>(\n  connectionString: string\n): ParsedOutput<T> {\n  const output: { [k: string]: string } = {};\n  const parts = connectionString.trim().split(\";\");\n\n  for (let part of parts) {\n    part = part.trim();\n\n    if (part === \"\") {\n      // parts can be empty\n      continue;\n    }\n\n    const splitIndex = part.indexOf(\"=\");\n    if (splitIndex === -1) {\n      throw new Error(\n        \"Connection string malformed: each part of the connection string must have an `=` assignment.\"\n      );\n    }\n\n    const key = part.substring(0, splitIndex).trim();\n    if (key === \"\") {\n      throw new Error(\n        \"Connection string malformed: missing key for assignment\"\n      );\n    }\n\n    const value = part.substring(splitIndex + 1).trim();\n\n    output[key] = value;\n  }\n\n  return output as any;\n}\n\n/**\n * Gets a new instance of the async lock with desired settings.\n * @param {AsyncLockOptions} [options] The async lock options.\n * @returns {AsyncLock} AsyncLock\n */\nexport function getNewAsyncLock(options?: AsyncLockOptions): AsyncLock {\n  return new AsyncLock(options);\n}\n\n/**\n * @constant {AsyncLock} defaultLock The async lock instance with default settings.\n */\nexport const defaultLock: AsyncLock = new AsyncLock({ maxPending: 10000 });\n\n/**\n * Describes a Timeout class that can wait for the specified amount of time and then resolve/reject\n * the promise with the given value.\n * @class Timout\n */\nexport class Timeout {\n  // Node and browsers return different types from setTimeout\n  // Any is the easiest way to avoid type errors in either platform\n  private _timer?: any;\n\n  set<T>(t: number, value?: T): Promise<T> {\n    return new Promise<T>((resolve, reject) => {\n      this.clear();\n      const callback = value ? () => reject(new Error(`${value}`)) : resolve;\n      this._timer = setTimeout(callback, t);\n    });\n  }\n\n  clear(): void {\n    if (this._timer) {\n      clearTimeout(this._timer);\n    }\n  }\n\n  wrap<T>(promise: Promise<T>, t: number, value?: T): Promise<T> {\n    const wrappedPromise = this._promiseFinally(promise, () => this.clear());\n    const timer = this.set(t, value);\n    return Promise.race([wrappedPromise, timer]);\n  }\n\n  private _promiseFinally<T>(promise: Promise<T>, fn: Function): Promise<T> {\n    const success = (result: T) => {\n      fn();\n      return result;\n    };\n    const error = (e: Error) => {\n      fn();\n      return Promise.reject(e);\n    };\n    return Promise.resolve(promise).then(success, error);\n  }\n\n  static set<T>(t: number, value?: T): Promise<T> {\n    return new Timeout().set(t, value);\n  }\n\n  static wrap<T>(promise: Promise<T>, t: number, value?: T): Promise<T> {\n    return new Timeout().wrap(promise, t, value);\n  }\n}\n\n/**\n * A wrapper for setTimeout that resolves a promise after t milliseconds.\n * @param {number} t - The number of milliseconds to be delayed.\n * @param {T} value - The value to be resolved with after a timeout of t milliseconds.\n * @returns {Promise<T>} - Resolved promise\n */\nexport function delay<T>(t: number, value?: T): Promise<T> {\n  return new Promise(resolve => setTimeout(() => resolve(value), t));\n}\n\n/**\n * Generates a random number between the given interval\n * @param {number} min Min number of the range (inclusive).\n * @param {number} max Max number of the range (inclusive).\n */\nexport function randomNumberFromInterval(min: number, max: number): number {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\n/**\n * Type declaration for a Function type where T is the input to the function and V is the output\n * of the function.\n */\nexport type Func<T, V> = (a: T) => V;\n\n/*\n * Executes an array of promises sequentially. Inspiration of this method is here:\n * https://pouchdb.com/2015/05/18/we-have-a-problem-with-promises.html. An awesome blog on promises!\n *\n * @param {Array} promiseFactories An array of promise factories(A function that return a promise)\n *\n * @param {any} [kickstart] Input to the first promise that is used to kickstart the promise chain.\n * If not provided then the promise chain starts with undefined.\n *\n * @return A chain of resolved or rejected promises\n */\nexport function executePromisesSequentially(\n  promiseFactories: Array<any>,\n  kickstart?: any\n): Promise<any> {\n  let result = Promise.resolve(kickstart);\n  promiseFactories.forEach(promiseFactory => {\n    result = result.then(promiseFactory);\n  });\n  return result;\n}\n\n/**\n * Determines whether the given connection string is an iothub connection string.\n * @param {string} connectionString The connection string.\n * @return {boolean} boolean.\n */\nexport function isIotHubConnectionString(connectionString: string): boolean {\n  connectionString = String(connectionString);\n\n  let result: boolean = false;\n  const model: any = parseConnectionString<any>(connectionString);\n  if (\n    model &&\n    model.HostName &&\n    model.SharedAccessKey &&\n    model.SharedAccessKeyName\n  ) {\n    result = true;\n  }\n  return result;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License. See License.txt in the project root for license information.\n\nimport { AmqpResponseStatusCode, isAmqpError, AmqpError } from \"rhea-promise\";\nimport { isNode } from \"../src/util/utils\";\n\n/**\n * Maps the conditions to the numeric AMQP Response status codes.\n * @enum {ConditionStatusMapper}\n */\nexport enum ConditionStatusMapper {\n  \"com.microsoft:timeout\" = AmqpResponseStatusCode.RequestTimeout,\n  \"amqp:not-found\" = AmqpResponseStatusCode.NotFound,\n  \"amqp:not-implemented\" = AmqpResponseStatusCode.NotImplemented,\n  \"com.microsoft:entity-already-exists\" = AmqpResponseStatusCode.Conflict,\n  \"com.microsoft:message-lock-lost\" = AmqpResponseStatusCode.Gone,\n  \"com.microsoft:session-lock-lost\" = AmqpResponseStatusCode.Gone,\n  \"com.microsoft:no-matching-subscription\" = AmqpResponseStatusCode.InternalServerError,\n  \"amqp:link:message-size-exceeded\" = AmqpResponseStatusCode.Forbidden,\n  \"com.microsoft:server-busy\" = AmqpResponseStatusCode.ServiceUnavailable,\n  \"com.microsoft:argument-error\" = AmqpResponseStatusCode.BadRequest,\n  \"com.microsoft:argument-out-of-range\" = AmqpResponseStatusCode.BadRequest,\n  \"com.microsoft:store-lock-lost\" = AmqpResponseStatusCode.Gone,\n  \"com.microsoft:session-cannot-be-locked\" = AmqpResponseStatusCode.Gone,\n  \"com.microsoft:partition-not-owned\" = AmqpResponseStatusCode.Gone,\n  \"com.microsoft:entity-disabled\" = AmqpResponseStatusCode.BadRequest,\n  \"com.microsoft:publisher-revoked\" = AmqpResponseStatusCode.Unauthorized,\n  \"amqp:link:stolen\" = AmqpResponseStatusCode.Gone,\n  \"amqp:not-allowed\" = AmqpResponseStatusCode.BadRequest,\n  \"amqp:unauthorized-access\" = AmqpResponseStatusCode.Unauthorized,\n  \"amqp:resource-limit-exceeded\" = AmqpResponseStatusCode.Forbidden\n}\n\n/**\n * Maps the amqp error conditions to the Error names.\n * @enum {ConditionErrorNameMapper}\n */\nexport enum ConditionErrorNameMapper {\n  /**\n   * Error is thrown when the address is already in use.\n   */\n  \"com.microsoft:address-already-in-use\" = \"AddressAlreadyInUseError\",\n  /**\n   * Error is thrown when the store lock is lost.\n   */\n  \"com.microsoft:store-lock-lost\" = \"StoreLockLostError\",\n  /**\n   * Error is thrown when a matching subscription is not found.\n   */\n  \"com.microsoft:no-matching-subscription\" = \"NoMatchingSubscriptionError\",\n  /**\n   * Error is thrown when an attempt is made to access a parition that is not owned by the\n   * requesting entity.\n   */\n  \"com.microsoft:partition-not-owned\" = \"PartitionNotOwnedError\",\n  /**\n   * Error is thrown when access to publisher has been revoked.\n   */\n  \"com.microsoft:publisher-revoked\" = \"PublisherRevokedError\",\n  /**\n   * Error is thrown when an attempt is made to create an entity that already exists.\n   */\n  \"com.microsoft:entity-already-exists\" = \"MessagingEntityAlreadyExistsError\",\n  /**\n   * Error is thrown when trying to access/connect to a disabled messaging entity.\n   */\n  \"com.microsoft:entity-disabled\" = \"MessagingEntityDisabledError\",\n  /**\n   * Error is thrown when the lock on the message is lost.\n   */\n  \"com.microsoft:message-lock-lost\" = \"MessageLockLostError\",\n  /**\n   * Error is thrown when the lock on the Azure ServiceBus session is lost.\n   */\n  \"com.microsoft:session-lock-lost\" = \"SessionLockLostError\",\n  /**\n   * Error is thrown when the Azure ServiceBus session cannot be locked.\n   */\n  \"com.microsoft:session-cannot-be-locked\" = \"SessionCannotBeLockedError\",\n  /**\n   * Error is thrown when an internal server error occured. You may have found a bug?\n   */\n  \"amqp:internal-error\" = \"InternalServerError\", // Retryable\n  /**\n   * Error for signaling general communication errors related to messaging operations.\n   */\n  \"amqp:not-found\" = \"ServiceCommunicationError\",\n  /**\n   * Error is thrown when the message is not found.\n   */\n  \"com.microsoft:message-not-found\" = \"MessageNotFoundError\",\n  /**\n   * Error is thrown when relay is not found.\n   */\n  \"com.microsoft:relay-not-found\" = \"RelayNotFoundError\",\n  /**\n   * Error is thrown when a feature is not implemented yet but the placeholder is present.\n   */\n  \"amqp:not-implemented\" = \"NotImplementedError\",\n  /**\n   * Error is thrown when an operation is attempted but is not allowed.\n   */\n  \"amqp:not-allowed\" = \"InvalidOperationError\",\n  /**\n   * Error is thrown the the Azure EventHub/ServiceBus quota has been exceeded.\n   * Quotas are reset periodically, this operation will have to wait until then.\n   * The messaging entity has reached its maximum allowable size.\n   * This can happen if the maximum number of receivers (which is 5) has already\n   * been opened on a per-consumer group level.\n   */\n  \"amqp:resource-limit-exceeded\" = \"QuotaExceededError\",\n  /**\n   * Error is thrown when the connection parameters are wrong and the server refused the connection.\n   */\n  \"amqp:unauthorized-access\" = \"UnauthorizedError\",\n  /**\n   * Error is thrown when the connection parameters are wrong and the server refused the connection.\n   */\n  \"com.microsoft:auth-failed\" = \"UnauthorizedError\",\n  /**\n   * Error is thrown when the service is unavailable. The operation should be retried.\n   */\n  \"com.microsoft:timeout\" = \"ServiceUnavailableError\", // Retryable\n  /**\n   * Error is thrown when no new messages are received for the specified time.\n   */\n  \"com.microsoft:message-wait-timeout\" = \"MessageWaitTimeout\",\n  /**\n   * Error is thrown when timeout happens for the said operation.\n   */\n  \"amqp:operation-timeout\" = \"OperationTimeoutError\",\n  /**\n   * Error is thrown when an argument has a value that is out of the admissible range.\n   */\n  \"com.microsoft:argument-out-of-range\" = \"ArgumentOutOfRangeError\",\n  /**\n   * Error is thrown when a condition that should have been met in order to execute an operation was not.\n   */\n  \"amqp:precondition-failed\" = \"PreconditionFailedError\",\n  /**\n   * Error is thrown when a condition that should have been met in order to execute an operation was not.\n   */\n  \"com.microsoft:precondition-failed\" = \"PreconditionFailedError\",\n  /**\n   * Error is thrown when data could not be decoded.\n   */\n  \"amqp:decode-error\" = \"DecodeError\",\n  /**\n   * Error is thrown when an invalid field was passed in a frame body, and the operation could not proceed.\n   */\n  \"amqp:invalid-field\" = \"InvalidFieldError\",\n  /**\n   * Error is thrown when the client attempted to work with a server entity to which it\n   * has no access because another client is working with it.\n   */\n  \"amqp:resource-locked\" = \"ResourceLockedError\",\n  /**\n   * Error is thrown when a server entity the client is working with has been deleted.\n   */\n  \"amqp:resource-deleted\" = \"ResourceDeletedError\",\n  /**\n   * Error is thrown when the peer sent a frame that is not permitted in the current state.\n   */\n  \"amqp:illegal-state\" = \"IllegalStateError\",\n  /**\n   * Error is thrown when the peer cannot send a frame because the smallest encoding of\n   * the performative with the currently valid values would be too large to fit within\n   * a frame of the agreed maximum frame size.\n   */\n  \"amqp:frame-size-too-small\" = \"FrameSizeTooSmallError\",\n  /**\n   * Error is thrown when an operator intervened to detach for some reason.\n   */\n  \"amqp:link:detach-forced\" = \"DetachForcedError\", // Retryable\n  /**\n   * Error is thrown when the peer sent more message transfers than currently allowed on the link.\n   */\n  \"amqp:link:transfer-limit-exceeded\" = \"TransferLimitExceededError\", // Retryable\n  /**\n   * Error is thrown when the message sent is too large: the maximum size is 256Kb.\n   */\n  \"amqp:link:message-size-exceeded\" = \"MessageTooLargeError\",\n  /**\n   * Error is thrown when the address provided cannot be resolved to a terminus at the current container.\n   */\n  \"amqp:link:redirect\" = \"LinkRedirectError\",\n  /**\n   * Error is thrown when two or more instances connect to the same partition\n   * with different epoch values.\n   */\n  \"amqp:link:stolen\" = \"ReceiverDisconnectedError\",\n  /**\n   * Error is thrown when the peer violated incoming window for the session.\n   */\n  \"amqp:session:window-violation\" = \"SessionWindowViolationError\",\n  /**\n   * Error is thrown when input was received for a link that was detached with an error.\n   */\n  \"amqp:session:errant-link\" = \"ErrantLinkError\",\n  /**\n   * Error is thrown when an attach was received using a handle that is already in use for an attached link.\n   */\n  \"amqp:session:handle-in-use\" = \"HandleInUseError\",\n  /**\n   * Error is thrown when a frame (other than attach) was received referencing a handle which is not\n   * currently in use of an attached link.\n   */\n  \"amqp:session:unattached-handle\" = \"UnattachedHandleError\",\n  /**\n   * Error is thrown when an operator intervened to close the connection for some reason.\n   */\n  \"amqp:connection:forced\" = \"ConnectionForcedError\", // Retryable\n  /**\n   * Error is thrown when a valid frame header cannot be formed from the incoming byte stream.\n   */\n  \"amqp:connection:framing-error\" = \"FramingError\",\n  /**\n   * Error is thrown when the container is no longer available on the current connection.\n   */\n  \"amqp:connection:redirect\" = \"ConnectionRedirectError\",\n  /**\n   * Error is thrown when the server is busy. Callers should wait a while and retry the operation.\n   */\n  \"com.microsoft:server-busy\" = \"ServerBusyError\", // Retryable\n  /**\n   * Error is thrown when an incorrect argument was received.\n   */\n  \"com.microsoft:argument-error\" = \"ArgumentError\",\n  /**\n   * Error is thrown when server cancels the operation due to an internal issue.\n   */\n  \"com.microsoft:operation-cancelled\" = \"OperationCancelledError\", // Retryable\n  /**\n   * Error is thrown when the client sender does not have enough link credits to send the message.\n   */\n  \"client.sender:not-enough-link-credit\" = \"SenderBusyError\", // Retryable\n  /**\n   * Error is thrown when a low level system error is thrown by node.js.\n   * {@link https://nodejs.org/dist/latest-v8.x/docs/api/all.html#errors_class_system_error}\n   */\n  \"system:error\" = \"SystemError\"\n}\n\n/**\n * Maps the Error names to the amqp error conditions.\n * @enum {ErrorNameConditionMapper}\n */\nexport enum ErrorNameConditionMapper {\n  /**\n   * Error is thrown when the address is already in use.\n   */\n  AddressAlreadyInUseError = \"com.microsoft:address-already-in-use\",\n  /**\n   * Error is thrown when the store lock is lost.\n   */\n  StoreLockLostError = \"com.microsoft:store-lock-lost\",\n  /**\n   * Error is thrown when a matching subscription is not found.\n   */\n  NoMatchingSubscriptionError = \"com.microsoft:no-matching-subscription\",\n  /**\n   * Error is thrown when an attempt is made to access a parition that is not owned by the\n   * requesting entity.\n   */\n  PartitionNotOwnedError = \"com.microsoft:partition-not-owned\",\n  /**\n   * Error is thrown when access to publisher has been revoked.\n   */\n  PublisherRevokedError = \"com.microsoft:publisher-revoked\",\n  /**\n   * Error is thrown when an attempt is made to create an entity that already exists.\n   */\n  MessagingEntityAlreadyExistsError = \"com.microsoft:entity-already-exists\",\n  /**\n   * Error is thrown when trying to access/connect to a disabled messaging entity.\n   */\n  MessagingEntityDisabledError = \"com.microsoft:entity-disabled\",\n  /**\n   * Error is thrown when the lock on the message is lost.\n   */\n  MessageLockLostError = \"com.microsoft:message-lock-lost\",\n  /**\n   * Error is thrown when the lock on the Azure ServiceBus session is lost.\n   */\n  SessionLockLostError = \"com.microsoft:session-lock-lost\",\n  /**\n   * Error is thrown when the Azure ServiceBus session cannot be locked.\n   */\n  SessionCannotBeLockedError = \"com.microsoft:session-cannot-be-locked\",\n  /**\n   * Error is thrown when an internal server error occured. You may have found a bug?\n   */\n  InternalServerError = \"amqp:internal-error\", // Retryable\n  /**\n   * Error for signaling general communication errors related to messaging operations.\n   */\n  ServiceCommunicationError = \"amqp:not-found\",\n  /**\n   * Error is thrown when message is not found.\n   */\n  MessageNotFoundError = \"com.microsoft:message-not-found\",\n  /**\n   * Error is thrown when relay is not found.\n   */\n  RelayNotFoundError = \"com.microsoft:relay-not-found\",\n  /**\n   * Error is thrown when a feature is not implemented yet but the placeholder is present.\n   */\n  NotImplementedError = \"amqp:not-implemented\",\n  /**\n   * Error is thrown when an operation is attempted but is not allowed.\n   */\n  InvalidOperationError = \"amqp:not-allowed\",\n  /**\n   * Error is thrown the the Azure EventHub/ServiceBus quota has been exceeded.\n   * Quotas are reset periodically, this operation will have to wait until then.\n   * The messaging entity has reached its maximum allowable size.\n   * This can happen if the maximum number of receivers (which is 5) has already\n   * been opened on a per-consumer group level.\n   */\n  QuotaExceededError = \"amqp:resource-limit-exceeded\",\n  /**\n   * Error is thrown when the connection parameters are wrong and the server refused the connection.\n   */\n  UnauthorizedError = \"amqp:unauthorized-access\",\n  /**\n   * Error is thrown when the service is unavailable. The operation should be retried.\n   */\n  ServiceUnavailableError = \"com.microsoft:timeout\", // Retryable\n  /**\n   * Error is thrown when no new messages are received for the specified time.\n   */\n  MessageWaitTimeout = \"com.microsoft:message-wait-timeout\",\n  /**\n   * Error is thrown when timeout happens for the said operation.\n   */\n  OperationTimeoutError = \"amqp:operation-timeout\",\n  /**\n   * Error is thrown when an argument has a value that is out of the admissible range.\n   */\n  ArgumentOutOfRangeError = \"com.microsoft:argument-out-of-range\",\n  /**\n   * Error is thrown when a condition that should have been met in order to execute an operation was not.\n   */\n  PreconditionFailedError = \"amqp:precondition-failed\",\n  /**\n   * Error is thrown when data could not be decoded.\n   */\n  DecodeError = \"amqp:decode-error\",\n  /**\n   * Error is thrown when an invalid field was passed in a frame body, and the operation could not proceed.\n   */\n  InvalidFieldError = \"amqp:invalid-field\",\n  /**\n   * Error is thrown when the client attempted to work with a server entity to which it\n   * has no access because another client is working with it.\n   */\n  ResourceLockedError = \"amqp:resource-locked\",\n  /**\n   * Error is thrown when a server entity the client is working with has been deleted.\n   */\n  ResourceDeletedError = \"amqp:resource-deleted\",\n  /**\n   * Error is thrown when the peer sent a frame that is not permitted in the current state.\n   */\n  IllegalStateError = \"amqp:illegal-state\",\n  /**\n   * Error is thrown when the peer cannot send a frame because the smallest encoding of\n   * the performative with the currently valid values would be too large to fit within\n   * a frame of the agreed maximum frame size.\n   */\n  FrameSizeTooSmallError = \"amqp:frame-size-too-small\",\n  /**\n   * Error is thrown when an operator intervened to detach for some reason.\n   */\n  DetachForcedError = \"amqp:link:detach-forced\", // Retryable\n  /**\n   * Error is thrown when the peer sent more message transfers than currently allowed on the link.\n   */\n  TransferLimitExceededError = \"amqp:link:transfer-limit-exceeded\", // Retryable\n  /**\n   * Error is thrown when the message sent is too large: the maximum size is 256Kb.\n   */\n  MessageTooLargeError = \"amqp:link:message-size-exceeded\",\n  /**\n   * Error is thrown when the address provided cannot be resolved to a terminus at the current container.\n   */\n  LinkRedirectError = \"amqp:link:redirect\",\n  /**\n   * Error is thrown when two or more instances connect to the same partition\n   * with different epoch values.\n   */\n  ReceiverDisconnectedError = \"amqp:link:stolen\",\n  /**\n   * Error is thrown when the peer violated incoming window for the session.\n   */\n  SessionWindowViolationError = \"amqp:session:window-violation\",\n  /**\n   * Error is thrown when input was received for a link that was detached with an error.\n   */\n  ErrantLinkError = \"amqp:session:errant-link\",\n  /**\n   * Error is thrown when an attach was received using a handle that is already in use for an attached link.\n   */\n  HandleInUseError = \"amqp:session:handle-in-use\",\n  /**\n   * Error is thrown when a frame (other than attach) was received referencing a handle which is not\n   * currently in use of an attached link.\n   */\n  UnattachedHandleError = \"amqp:session:unattached-handle\",\n  /**\n   * Error is thrown when an operator intervened to close the connection for some reason.\n   */\n  ConnectionForcedError = \"amqp:connection:forced\", // Retryable\n  /**\n   * Error is thrown when a valid frame header cannot be formed from the incoming byte stream.\n   */\n  FramingError = \"amqp:connection:framing-error\",\n  /**\n   * Error is thrown when the container is no longer available on the current connection.\n   */\n  ConnectionRedirectError = \"amqp:connection:redirect\",\n  /**\n   * Error is thrown when the server is busy. Callers should wait a while and retry the operation.\n   */\n  ServerBusyError = \"com.microsoft:server-busy\", // Retryable\n  /**\n   * Error is thrown when an incorrect argument was received.\n   */\n  ArgumentError = \"com.microsoft:argument-error\",\n  /**\n   * Error is thrown when server cancels the operation due to an internal issue.\n   */\n  OperationCancelledError = \"com.microsoft:operation-cancelled\", // Retryable\n  /**\n   * Error is thrown when the client sender does not have enough link credits to send the message.\n   */\n  SenderBusyError = \"client.sender:not-enough-link-credit\", // Retryable\n  /**\n   * Error is thrown when a low level system error is thrown by node.js.\n   * {@link https://nodejs.org/api/errors.html#errors_class_systemerror}\n   */\n  SystemError = \"system:error\"\n}\n\n/**\n * Describes the base class for Messaging Error.\n * @class {MessagingError}\n * @extends Error\n */\nexport class MessagingError extends Error {\n  /**\n   * @property {string} [condition] The error condition.\n   */\n  condition?: string;\n  /**\n   * @property {string} name The error name. Default value: \"MessagingError\".\n   */\n  name: string = \"MessagingError\";\n  /**\n   * @property {boolean} translated Has the error been translated. Default: true.\n   */\n  translated: boolean = true;\n  /**\n   *\n   * @property {boolean} retryable Describes whether the error is retryable. Default: true.\n   */\n  retryable: boolean = true;\n  /**\n   * @property {any} [info] Any additional error information given by the service.\n   */\n  info?: any;\n  /**\n   * @param {string} message The error message that provides more information about the error.\n   */\n  constructor(message: string) {\n    super(message);\n  }\n}\n\n/**\n * Provides a list of retryable AMQP errors.\n * \"InternalServerError\", \"ServerBusyError\", \"ServiceUnavailableError\", \"OperationCancelledError\",\n * \"SenderBusyError\", \"MessagingError\", \"DetachForcedError\", \"ConnectionForcedError\",\n * \"TransferLimitExceededError\"\n */\nexport const retryableErrors: string[] = [\n  \"InternalServerError\",\n  \"ServerBusyError\",\n  \"ServiceUnavailableError\",\n  \"OperationCancelledError\",\n  \"SenderBusyError\",\n  \"MessagingError\",\n  \"DetachForcedError\",\n  \"ConnectionForcedError\",\n  \"TransferLimitExceededError\"\n];\n\n/**\n * Maps some SytemErrors to amqp error conditions\n * @enum SystemErrorConditionMapper\n */\nexport enum SystemErrorConditionMapper {\n  ENOTFOUND = \"amqp:not-found\",\n  EBUSY = \"com.microsoft:server-busy\",\n  ECONNREFUSED = \"amqp:connection:forced\",\n  ETIMEDOUT = \"com.microsoft:timeout\",\n  ECONNRESET = \"com.microsoft:timeout\",\n  ENETDOWN = \"com.microsoft:timeout\",\n  EHOSTDOWN = \"com.microsoft:timeout\",\n  ENETRESET = \"com.microsoft:timeout\",\n  ENETUNREACH = \"com.microsoft:timeout\",\n  ENONET = \"com.microsoft:timeout\"\n}\n\nexport function isSystemError(err: any): boolean {\n  let result: boolean = false;\n  if (\n    err.code &&\n    typeof err.code === \"string\" &&\n    (err.syscall && typeof err.syscall === \"string\") &&\n    (err.errno && (typeof err.errno === \"string\" || typeof err.errno === \"number\"))\n  ) {\n    result = true;\n  }\n  return result;\n}\n\n/**\n * @internal\n * Since browser doesnt differentiate between the various kinds of service communication errors,\n * this utility is used to look at the error target to identify such category of errors.\n * For more information refer to - https://html.spec.whatwg.org/multipage/comms.html#feedback-from-the-protocol\n * @param err object that may contain error information\n */\nfunction isBrowserWebsocketError(err: any): boolean {\n  let result: boolean = false;\n  if (\n    !isNode &&\n    window &&\n    err.type === \"error\" &&\n    err.target instanceof (window as any).WebSocket\n  ) {\n    result = true;\n  }\n  return result;\n}\n\n/**\n * Translates the AQMP error received at the protocol layer or a generic Error into a MessagingError.\n *\n * @param {AmqpError} err The amqp error that was received.\n * @returns {MessagingError} MessagingError object.\n */\nexport function translate(err: AmqpError | Error): MessagingError {\n  if ((err as MessagingError).translated) {\n    // already translated\n    return err as MessagingError;\n  }\n\n  let error: MessagingError = err as MessagingError;\n\n  // Built-in errors like TypeError and RangeError should not be retryable as these indicate issues\n  // with user input and not an issue with the Messaging process.\n  if (err instanceof TypeError || err instanceof RangeError) {\n    error.retryable = false;\n    return error;\n  }\n\n  if (isAmqpError(err)) {\n    // translate\n    const condition = (err as AmqpError).condition;\n    const description = (err as AmqpError).description as string;\n    error = new MessagingError(description);\n    if ((err as any).stack) error.stack = (err as any).stack;\n    error.info = (err as AmqpError).info;\n    error.condition = condition;\n    if (condition) {\n      error.name = (<any>ConditionErrorNameMapper)[condition];\n    }\n    if (!error.name) error.name = \"MessagingError\";\n    if (\n      description &&\n      (description.includes(\"status-code: 404\") ||\n        description.match(/The messaging entity .* could not be found.*/i) !== null)\n    ) {\n      error.name = \"MessagingEntityNotFoundError\";\n    }\n    if (retryableErrors.indexOf(error.name) === -1) {\n      // not found\n      error.retryable = false;\n    }\n  } else if (isSystemError(err)) {\n    // translate\n    const condition = (err as any).code;\n    const description = (err as Error).message;\n    error = new MessagingError(description);\n    if ((err as any).stack) error.stack = (err as any).stack;\n    if (condition) {\n      const amqpErrorCondition = (<any>SystemErrorConditionMapper)[condition];\n      error.name = (<any>ConditionErrorNameMapper)[amqpErrorCondition];\n    }\n    if (!error.name) error.name = \"SystemError\";\n    if (retryableErrors.indexOf(error.name) === -1) {\n      // not found\n      error.retryable = false;\n    }\n  } else if (isBrowserWebsocketError(err)) {\n    // Translate browser communication errors during opening handshake to generic SeviceCommunicationError\n    error = new MessagingError(\"Websocket connection failed.\");\n    error.name = ConditionErrorNameMapper[ErrorNameConditionMapper.ServiceCommunicationError];\n    error.retryable = false;\n  } else {\n    // Translate a generic error into MessagingError.\n    error = new MessagingError((err as Error).message);\n    error.stack = (err as Error).stack;\n  }\n  return error;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License. See License.txt in the project root for license information.\n\nimport debugModule from \"debug\";\n/**\n * @ignore\n * log statements for cbs\n */\nexport const cbs = debugModule(\"azure:amqp-common:cbs\");\n/**\n * @ignore\n * log statements for error\n */\nexport const error = debugModule(\"azure:amqp-common:error\");\n/**\n * @ignore\n * log statements for datatransformer\n */\nexport const transformer = debugModule(\"azure:amqp-common:datatransformer\");\n/**\n * @ignore\n * log statements for messageHeader\n */\nexport const msgHeader = debugModule(\"azure:amqp-common:messageHeader\");\n/**\n * @ignore\n * log statements for messageProperties\n */\nexport const msgProperties = debugModule(\"azure:amqp-common:messageProperties\");\n/**\n * @ignore\n * log statements for retry\n */\nexport const retry = debugModule(\"azure:amqp-common:retry\");\n/**\n * @ignore\n * log statements for reqreslink\n */\nexport const reqres = debugModule(\"azure:amqp-common:reqreslink\");\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/**\n * Checks whether a network connection is detected.\n * @ignore\n * @internal\n */\nexport function checkNetworkConnection(): Promise<boolean> {\n  return Promise.resolve(window.navigator.onLine);\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License. See License.txt in the project root for license information.\n\nimport { translate, MessagingError } from \"./errors\";\nimport { delay } from \"./util/utils\";\nimport * as log from \"./log\";\nimport { defaultRetryAttempts, defaultDelayBetweenRetriesInSeconds } from \"./util/constants\";\nimport { checkNetworkConnection } from \"./util/checkNetworkConnection\";\n\n/**\n * Determines whether the object is a Delivery object.\n * @ignore\n */\nfunction isDelivery(obj: any): boolean {\n  let result: boolean = false;\n  if (\n    obj &&\n    typeof obj.id === \"number\" &&\n    typeof obj.settled === \"boolean\" &&\n    typeof obj.remote_settled === \"boolean\" &&\n    typeof obj.format === \"number\"\n  ) {\n    result = true;\n  }\n  return result;\n}\n\n/**\n * Describes the retry operation type.\n * @enum RetryOperationType\n */\nexport enum RetryOperationType {\n  cbsAuth = \"cbsAuth\",\n  connection = \"connection\",\n  management = \"management\",\n  receiverLink = \"receiverLink\",\n  senderLink = \"senderLink\",\n  sendMessage = \"sendMessage\",\n  session = \"session\"\n}\n\n/**\n * Describes the parameters that need to be configured for the retry operation.\n * @interface RetryConfig\n */\nexport interface RetryConfig<T> {\n  /**\n   * @property {Promise<T>} operation The operation that needs to be retried.\n   */\n  operation: () => Promise<T>;\n  /**\n   * @property {string} connectionId The connection identifier. Used in logging information.\n   * Extremely useful when multiple connections are logged in the same file.\n   */\n  connectionId: string;\n  /**\n   * @property {RetryOperationType} operationType The name/type of operation to be performed.\n   * Extremely useful in providing better debug logs.\n   */\n  operationType: RetryOperationType;\n  /**\n   * @property {number} [times] Number of times the operation needs to be retried in case\n   * of error. Default: 3.\n   */\n  times?: number;\n  /**\n   * @property {number} [delayInSeconds] Amount of time to wait in seconds before making the\n   * next attempt. Default: 15.\n   */\n  delayInSeconds?: number;\n  /**\n   * @property {string} connectionHost The host \"<yournamespace>.servicebus.windows.net\".\n   * Used to check network connectivity.\n   */\n  connectionHost?: string;\n}\n\n/**\n * Validates the retry config.\n * @ignore\n */\nfunction validateRetryConfig<T>(config: RetryConfig<T>): void {\n  if (!config.operation) {\n    throw new TypeError(\"Missing 'operation' in retry configuration\");\n  }\n\n  if (!config.connectionId) {\n    throw new TypeError(\"Missing 'connectionId' in retry configuration\");\n  }\n\n  if (!config.operationType) {\n    throw new TypeError(\"Missing 'operationType' in retry configuration\");\n  }\n}\n\n/**\n * It will attempt to linearly retry an operation specified number of times with a specified\n * delay in between each retry. The retries will only happen if the error is retryable.\n *\n * @param {RetryConfig<T>} config Parameters to configure retry operation.\n *\n * @return {Promise<T>} Promise<T>.\n */\nexport async function retry<T>(config: RetryConfig<T>): Promise<T> {\n  validateRetryConfig(config);\n  if (config.times == undefined) config.times = defaultRetryAttempts;\n  if (config.delayInSeconds == undefined) {\n    config.delayInSeconds = defaultDelayBetweenRetriesInSeconds;\n  }\n  let lastError: MessagingError | undefined;\n  let result: any;\n  let success = false;\n  for (let i = 0; i < config.times; i++) {\n    const j = i + 1;\n    log.retry(\n      \"[%s] Retry for '%s', attempt number: %d\",\n      config.connectionId,\n      config.operationType,\n      j\n    );\n    try {\n      result = await config.operation();\n      success = true;\n      log.retry(\n        \"[%s] Success for '%s', after attempt number: %d.\",\n        config.connectionId,\n        config.operationType,\n        j\n      );\n      if (result && !isDelivery(result)) {\n        log.retry(\n          \"[%s] Success result for '%s': %O\",\n          config.connectionId,\n          config.operationType,\n          result\n        );\n      }\n      break;\n    } catch (err) {\n      if (!err.translated) {\n        err = translate(err);\n      }\n\n      if (!err.retryable && err.name === \"ServiceCommunicationError\" && config.connectionHost) {\n        const isConnected = await checkNetworkConnection(config.connectionHost);\n        if (!isConnected) {\n          err.name = \"ConnectionLostError\";\n          err.retryable = true;\n        }\n      }\n      lastError = err;\n      log.error(\n        \"[%s] Error occured for '%s' in attempt number %d: %O\",\n        config.connectionId,\n        config.operationType,\n        j,\n        err\n      );\n      if (lastError && lastError.retryable) {\n        log.error(\n          \"[%s] Sleeping for %d seconds for '%s'.\",\n          config.connectionId,\n          config.delayInSeconds,\n          config.operationType\n        );\n        await delay(config.delayInSeconds * 1000);\n        continue;\n      } else {\n        break;\n      }\n    }\n  }\n  if (success) {\n    return result;\n  } else {\n    throw lastError;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License. See License.txt in the project root for license information.\n\nimport * as Constants from \"./util/constants\";\nimport { retry, RetryConfig, RetryOperationType } from \"./retry\";\nimport {\n  Session,\n  Connection,\n  Sender,\n  Receiver,\n  Message as AmqpMessage,\n  EventContext,\n  AmqpError,\n  SenderOptions,\n  ReceiverOptions,\n  ReceiverEvents,\n  ReqResLink,\n  generate_uuid\n} from \"rhea-promise\";\nimport { translate, ConditionStatusMapper } from \"./errors\";\nimport * as log from \"./log\";\n\n/**\n * Describes the options that can be specified while sending a request.\n * @interface SendRequestOptions\n */\nexport interface SendRequestOptions {\n  /**\n   * @property {number} [timeoutInSeconds] Max time to wait for the operation to complete.\n   * Default: `10 seconds`.\n   */\n  timeoutInSeconds?: number;\n  /**\n   * @property {number} [times] Number of times the operation needs to be retried in case\n   * of error. Default: 3.\n   */\n  times?: number;\n  /**\n   * @property {number} [delayInSeconds] Amount of time to wait in seconds before making the\n   * next attempt. Default: 15.\n   */\n  delayInSeconds?: number;\n}\n\n/**\n * Describes an amqp request(sender)-response(receiver) link that is created over an amqp session.\n * @class RequestResponseLink\n */\nexport class RequestResponseLink implements ReqResLink {\n  /**\n   * @constructor\n   * @param {Session} session The amqp session.\n   * @param {Sender} sender The amqp sender link.\n   * @param {Receiver} receiver The amqp receiver link.\n   */\n  constructor(\n    public session: Session,\n    public sender: Sender,\n    public receiver: Receiver\n  ) {\n    this.session = session;\n    this.sender = sender;\n    this.receiver = receiver;\n  }\n\n  /**\n   * Provides the underlying amqp connection object.\n   * @returns {Connection} Connection.\n   */\n  get connection(): Connection {\n    return this.session.connection;\n  }\n\n  /**\n   * Indicates whether the session and the sender and receiver links are all open or closed.\n   * @returns {boolean} boolean - `true` - `open`, `false` - `closed`.\n   */\n  isOpen(): boolean {\n    return (\n      this.session.isOpen() && this.sender.isOpen() && this.receiver.isOpen()\n    );\n  }\n\n  /**\n   * Sends the given request message and returns the received response. If the operation is not\n   * completed in the provided timeout in seconds `default: 10`, then the request will be retried\n   * linearly for the provided number of times `default: 3` with the provided delay in seconds\n   * `default: 15` between each attempt.\n   *\n   * @param {Message} request The AMQP (request) message.\n   * @param {SendRequestOptions} [options] Options that can be provided while sending a request.\n   * @returns {Promise<Message>} Promise<Message> The AMQP (response) message.\n   */\n  sendRequest(\n    request: AmqpMessage,\n    options?: SendRequestOptions\n  ): Promise<AmqpMessage> {\n    if (!options) options = {};\n\n    if (!options.timeoutInSeconds) {\n      options.timeoutInSeconds = Constants.defaultOperationTimeoutInSeconds;\n    }\n\n    let count: number = 0;\n\n    const sendRequestPromise = () =>\n      new Promise<AmqpMessage>((resolve: any, reject: any) => {\n        let waitTimer: any;\n        let timeOver: boolean = false;\n        type NormalizedInfo = {\n          statusCode: number;\n          statusDescription: string;\n          errorCondition: string;\n        };\n\n        count++;\n        if (count !== 1) {\n          // Generate a new message_id every time after the first attempt\n          request.message_id = generate_uuid();\n        } else if (!request.message_id) {\n          // Set the message_id in the first attempt only if it is not set\n          request.message_id = generate_uuid();\n        }\n\n        // Handle different variations of property names in responses emitted by EventHubs and ServiceBus.\n        const getCodeDescriptionAndError = (props: any): NormalizedInfo => {\n          if (!props) props = {};\n          return {\n            statusCode: (props[Constants.statusCode] ||\n              props.statusCode) as number,\n            statusDescription: (props[Constants.statusDescription] ||\n              props.statusDescription) as string,\n            errorCondition: (props[Constants.errorCondition] ||\n              props.errorCondition) as string\n          };\n        };\n\n        const messageCallback = (context: EventContext) => {\n          // remove the event listener as this will be registered next time when someone makes a request.\n          this.receiver.removeListener(ReceiverEvents.message, messageCallback);\n          const info = getCodeDescriptionAndError(\n            context.message!.application_properties\n          );\n          const responseCorrelationId = context.message!.correlation_id;\n          log.reqres(\n            \"[%s] %s response: \",\n            this.connection.id,\n            request.to || \"$management\",\n            context.message\n          );\n          if (info.statusCode > 199 && info.statusCode < 300) {\n            if (\n              request.message_id === responseCorrelationId ||\n              request.correlation_id === responseCorrelationId\n            ) {\n              if (!timeOver) {\n                clearTimeout(waitTimer);\n              }\n              log.reqres(\n                \"[%s] request-messageId | '%s' == '%s' | response-correlationId.\",\n                this.connection.id,\n                request.message_id,\n                responseCorrelationId\n              );\n              return resolve(context.message);\n            } else {\n              log.error(\n                \"[%s] request-messageId | '%s' != '%s' | response-correlationId. \" +\n                  \"Hence dropping this response and waiting for the next one.\",\n                this.connection.id,\n                request.message_id,\n                responseCorrelationId\n              );\n            }\n          } else {\n            const condition =\n              info.errorCondition ||\n              ConditionStatusMapper[info.statusCode] ||\n              \"amqp:internal-error\";\n            const e: AmqpError = {\n              condition: condition,\n              description: info.statusDescription\n            };\n            const error = translate(e);\n            log.error(error);\n            return reject(error);\n          }\n        };\n\n        const actionAfterTimeout = () => {\n          timeOver = true;\n          this.receiver.removeListener(ReceiverEvents.message, messageCallback);\n          const address = this.receiver.address || \"address\";\n          const desc: string =\n            `The request with message_id \"${\n              request.message_id\n            }\" to \"${address}\" ` +\n            `endpoint timed out. Please try again later.`;\n          const e: AmqpError = {\n            condition: ConditionStatusMapper[408],\n            description: desc\n          };\n          return reject(translate(e));\n        };\n\n        this.receiver.on(ReceiverEvents.message, messageCallback);\n        waitTimer = setTimeout(\n          actionAfterTimeout,\n          options!.timeoutInSeconds! * 1000\n        );\n        log.reqres(\n          \"[%s] %s request sent: %O\",\n          this.connection.id,\n          request.to || \"$managment\",\n          request\n        );\n        this.sender.send(request);\n      });\n    const config: RetryConfig<AmqpMessage> = {\n      operation: sendRequestPromise,\n      connectionId: this.connection.id,\n      operationType:\n        request.to && request.to === Constants.cbsEndpoint\n          ? RetryOperationType.cbsAuth\n          : RetryOperationType.management,\n      delayInSeconds: options.delayInSeconds,\n      times: options.times\n    };\n    return retry<AmqpMessage>(config);\n  }\n\n  /**\n   * Closes the sender, receiver link and the underlying session.\n   * @returns {Promise<void>} Promise<void>\n   */\n  async close(): Promise<void> {\n    await this.sender.close();\n    await this.receiver.close();\n    await this.session.close();\n  }\n\n  /**\n   * Removes the sender, receiver link and it's underlying session.\n   * @returns {void} void\n   */\n  remove(): void {\n    this.sender.remove();\n    this.receiver.remove();\n    this.session.remove();\n  }\n\n  /**\n   * Creates an amqp request/response link.\n   *\n   * @param {Connection} connection The amqp connection.\n   * @param {SenderOptions} senderOptions Options that must be provided to create the sender link.\n   * @param {ReceiverOptions} receiverOptions Options that must be provided to create the receiver link.\n   * @returns {Promise<RequestResponseLink>} Promise<RequestResponseLink>\n   */\n  static async create(\n    connection: Connection,\n    senderOptions: SenderOptions,\n    receiverOptions: ReceiverOptions\n  ): Promise<RequestResponseLink> {\n    const session = await connection.createSession();\n    const sender = await session.createSender(senderOptions);\n    const receiver = await session.createReceiver(receiverOptions);\n    log.reqres(\n      \"[%s] Successfully created the sender and receiver links on the same session.\",\n      connection.id\n    );\n    return new RequestResponseLink(session, sender, receiver);\n  }\n}\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\nmodule.exports = function isBuffer (obj) {\n  return obj != null && obj.constructor != null &&\n    typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License. See License.txt in the project root for license information.\n\nimport { message } from \"rhea-promise\";\nimport * as log from \"./log\";\nimport isBuffer from \"is-buffer\";\nimport { Buffer } from \"buffer\";\n\n/**\n * Describes the transformations that can be performed to encode/decode the data before sending it\n * on (or receiving it from) the wire.\n * @interface DataTransformer\n */\nexport interface DataTransformer {\n  /**\n   * @property {Function} encode A function that takes the body property from an EventData object\n   * and returns an encoded body (some form of AMQP type).\n   */\n  encode: (body: any) => any;\n  /**\n   * @property {Function} decode A function that takes the body property from an AMQP message\n   * and returns the decoded message body. If it cannot decode the body then it returns the body\n   * as-is.\n   */\n  decode: (body: any) => any;\n}\n\n/**\n * The default data transformer that will be used by the Azure SDK.\n */\nexport class DefaultDataTransformer implements DataTransformer {\n  /**\n   * A function that takes the body property from an EventData object\n   * and returns an encoded body (some form of AMQP type).\n   *\n   * @param {*} body The AMQP message body\n   * @return {DataSection} encodedBody - The encoded AMQP message body as an AMQP Data type\n   * (data section in rhea terms). Section object with following properties:\n   * - typecode: 117 (0x75)\n   * - content: The given AMQP message body as a Buffer.\n   * - multiple: true | undefined.\n   */\n  encode(body: any): any {\n    let result: any;\n    log.transformer(\n      \"[encode] The given message body that needs to be encoded is: \",\n      body\n    );\n    if (isBuffer(body)) {\n      result = message.data_section(body);\n    } else {\n      // string, undefined, null, boolean, array, object, number should end up here\n      // coercing undefined to null as that will ensure that null value will be given to the\n      // customer on receive.\n      if (body === undefined) body = null; // tslint:disable-line\n      try {\n        const bodyStr = JSON.stringify(body);\n        result = message.data_section(Buffer.from(bodyStr, \"utf8\"));\n      } catch (err) {\n        const msg =\n          `An error occurred while executing JSON.stringify() on the given body ` +\n          body +\n          `${err ? err.stack : JSON.stringify(err)}`;\n        log.error(\"[encode] \" + msg);\n        throw new Error(msg);\n      }\n    }\n    log.transformer(\"[encode] The encoded message body is: %O.\", result);\n    return result;\n  }\n\n  /**\n   * @property {Function} [decode] A function that takes the body property from an AMQP message\n   * (an AMQP Data type (data section in rhea terms)) and returns the decoded message body.\n   * If it cannot decode the body then it returns the body\n   * as-is.\n   * @param {DataSection} body The AMQP message body\n   * @return {*} decoded body or the given body as-is.\n   */\n  decode(body: any): any {\n    let processedBody: any = body;\n    try {\n      log.transformer(\n        \"[decode] Received message body for decoding is: %O\",\n        body\n      );\n      if (body.content && isBuffer(body.content)) {\n        // This indicates that we are getting the AMQP described type. Let us try decoding it.\n        processedBody = body.content;\n      }\n      try {\n        // Trying to stringify and JSON.parse() anything else will fail flat and we shall return\n        // the original type back\n        const bodyStr: string = processedBody.toString(\"utf8\");\n        processedBody = JSON.parse(bodyStr);\n      } catch (err) {\n        log.error(\n          \"[decode] An error occurred while trying JSON.parse() on the received body. \" +\n            \"The error is %O\",\n          err\n        );\n      }\n    } catch (err) {\n      log.error(\n        \"[decode] An error occurred while decoding the received message body. The error is: %O\",\n        err\n      );\n    }\n    log.transformer(\"[decode] The decoded message body is: %O\", processedBody);\n    return processedBody;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License. See License.txt in the project root for license information.\n\n/**\n * Describes the type of supported tokens.\n * @enum TokenType\n */\nexport enum TokenType {\n  /**\n   * The \"jwt\" token type. Used with AADTokenProvider.\n   */\n  CbsTokenTypeJwt = \"jwt\",\n  /**\n   * The sas token type. Used with SasTokenProvider.\n   */\n  CbsTokenTypeSas = \"servicebus.windows.net:sastoken\"\n}\n\n/**\n * Provides information about the token.\n * @interface TokenInfo\n */\nexport interface TokenInfo {\n  /**\n   * @property {string} tokenType - The type of token - \"jwt\" or \"servicebus.windows.net:sastoken\".\n   */\n  tokenType: TokenType;\n  /**\n   * @property {string} token - The access token.\n   */\n  token: string;\n  /**\n   * @property {number} expiry - The token expiration time in seconds.\n   */\n  expiry: number;\n}\n\n/**\n * Describes the base token provider.\n * @interface TokenProvider\n */\nexport interface TokenProvider {\n  /**\n   * @property {number} tokenRenewalMarginInSeconds - The number of seconds within which it is good to renew the token. Default = 900 seconds (15 minutes).\n   */\n  tokenRenewalMarginInSeconds: number;\n  /**\n   * @property {number} tokenValidTimeInSeconds - The number of seconds for which the token is valid. Default = 3600 seconds (1 hour).\n   */\n  tokenValidTimeInSeconds: number;\n  /**\n   * Gets the token for the desired audience.\n   * @param {string} [audience] - The audience for which the token is desired.\n   * @returns {Promise<TokenInfo>}\n   */\n  getToken(audience?: string): Promise<TokenInfo>;\n}\n","/*\n A JavaScript implementation of the SHA family of hashes, as\n defined in FIPS PUB 180-4 and FIPS PUB 202, as well as the corresponding\n HMAC implementation as defined in FIPS PUB 198a\n\n Copyright Brian Turek 2008-2017\n Distributed under the BSD License\n See http://caligatio.github.com/jsSHA/ for more information\n\n Several functions taken from Paul Johnston\n*/\n'use strict';(function(Y){function C(c,a,b){var e=0,h=[],n=0,g,l,d,f,m,q,u,r,I=!1,v=[],w=[],t,y=!1,z=!1,x=-1;b=b||{};g=b.encoding||\"UTF8\";t=b.numRounds||1;if(t!==parseInt(t,10)||1>t)throw Error(\"numRounds must a integer >= 1\");if(\"SHA-1\"===c)m=512,q=K,u=Z,f=160,r=function(a){return a.slice()};else if(0===c.lastIndexOf(\"SHA-\",0))if(q=function(a,b){return L(a,b,c)},u=function(a,b,h,e){var k,f;if(\"SHA-224\"===c||\"SHA-256\"===c)k=(b+65>>>9<<4)+15,f=16;else if(\"SHA-384\"===c||\"SHA-512\"===c)k=(b+129>>>10<<\n5)+31,f=32;else throw Error(\"Unexpected error in SHA-2 implementation\");for(;a.length<=k;)a.push(0);a[b>>>5]|=128<<24-b%32;b=b+h;a[k]=b&4294967295;a[k-1]=b/4294967296|0;h=a.length;for(b=0;b<h;b+=f)e=L(a.slice(b,b+f),e,c);if(\"SHA-224\"===c)a=[e[0],e[1],e[2],e[3],e[4],e[5],e[6]];else if(\"SHA-256\"===c)a=e;else if(\"SHA-384\"===c)a=[e[0].a,e[0].b,e[1].a,e[1].b,e[2].a,e[2].b,e[3].a,e[3].b,e[4].a,e[4].b,e[5].a,e[5].b];else if(\"SHA-512\"===c)a=[e[0].a,e[0].b,e[1].a,e[1].b,e[2].a,e[2].b,e[3].a,e[3].b,e[4].a,\ne[4].b,e[5].a,e[5].b,e[6].a,e[6].b,e[7].a,e[7].b];else throw Error(\"Unexpected error in SHA-2 implementation\");return a},r=function(a){return a.slice()},\"SHA-224\"===c)m=512,f=224;else if(\"SHA-256\"===c)m=512,f=256;else if(\"SHA-384\"===c)m=1024,f=384;else if(\"SHA-512\"===c)m=1024,f=512;else throw Error(\"Chosen SHA variant is not supported\");else if(0===c.lastIndexOf(\"SHA3-\",0)||0===c.lastIndexOf(\"SHAKE\",0)){var F=6;q=D;r=function(a){var c=[],e;for(e=0;5>e;e+=1)c[e]=a[e].slice();return c};x=1;if(\"SHA3-224\"===\nc)m=1152,f=224;else if(\"SHA3-256\"===c)m=1088,f=256;else if(\"SHA3-384\"===c)m=832,f=384;else if(\"SHA3-512\"===c)m=576,f=512;else if(\"SHAKE128\"===c)m=1344,f=-1,F=31,z=!0;else if(\"SHAKE256\"===c)m=1088,f=-1,F=31,z=!0;else throw Error(\"Chosen SHA variant is not supported\");u=function(a,c,e,b,h){e=m;var k=F,f,g=[],n=e>>>5,l=0,d=c>>>5;for(f=0;f<d&&c>=e;f+=n)b=D(a.slice(f,f+n),b),c-=e;a=a.slice(f);for(c%=e;a.length<n;)a.push(0);f=c>>>3;a[f>>2]^=k<<f%4*8;a[n-1]^=2147483648;for(b=D(a,b);32*g.length<h;){a=b[l%\n5][l/5|0];g.push(a.b);if(32*g.length>=h)break;g.push(a.a);l+=1;0===64*l%e&&D(null,b)}return g}}else throw Error(\"Chosen SHA variant is not supported\");d=M(a,g,x);l=A(c);this.setHMACKey=function(a,b,h){var k;if(!0===I)throw Error(\"HMAC key already set\");if(!0===y)throw Error(\"Cannot set HMAC key after calling update\");if(!0===z)throw Error(\"SHAKE is not supported for HMAC\");g=(h||{}).encoding||\"UTF8\";b=M(b,g,x)(a);a=b.binLen;b=b.value;k=m>>>3;h=k/4-1;if(k<a/8){for(b=u(b,a,0,A(c),f);b.length<=h;)b.push(0);\nb[h]&=4294967040}else if(k>a/8){for(;b.length<=h;)b.push(0);b[h]&=4294967040}for(a=0;a<=h;a+=1)v[a]=b[a]^909522486,w[a]=b[a]^1549556828;l=q(v,l);e=m;I=!0};this.update=function(a){var c,b,k,f=0,g=m>>>5;c=d(a,h,n);a=c.binLen;b=c.value;c=a>>>5;for(k=0;k<c;k+=g)f+m<=a&&(l=q(b.slice(k,k+g),l),f+=m);e+=f;h=b.slice(f>>>5);n=a%m;y=!0};this.getHash=function(a,b){var k,g,d,m;if(!0===I)throw Error(\"Cannot call getHash after setting HMAC key\");d=N(b);if(!0===z){if(-1===d.shakeLen)throw Error(\"shakeLen must be specified in options\");\nf=d.shakeLen}switch(a){case \"HEX\":k=function(a){return O(a,f,x,d)};break;case \"B64\":k=function(a){return P(a,f,x,d)};break;case \"BYTES\":k=function(a){return Q(a,f,x)};break;case \"ARRAYBUFFER\":try{g=new ArrayBuffer(0)}catch(p){throw Error(\"ARRAYBUFFER not supported by this environment\");}k=function(a){return R(a,f,x)};break;default:throw Error(\"format must be HEX, B64, BYTES, or ARRAYBUFFER\");}m=u(h.slice(),n,e,r(l),f);for(g=1;g<t;g+=1)!0===z&&0!==f%32&&(m[m.length-1]&=16777215>>>24-f%32),m=u(m,f,\n0,A(c),f);return k(m)};this.getHMAC=function(a,b){var k,g,d,p;if(!1===I)throw Error(\"Cannot call getHMAC without first setting HMAC key\");d=N(b);switch(a){case \"HEX\":k=function(a){return O(a,f,x,d)};break;case \"B64\":k=function(a){return P(a,f,x,d)};break;case \"BYTES\":k=function(a){return Q(a,f,x)};break;case \"ARRAYBUFFER\":try{k=new ArrayBuffer(0)}catch(v){throw Error(\"ARRAYBUFFER not supported by this environment\");}k=function(a){return R(a,f,x)};break;default:throw Error(\"outputFormat must be HEX, B64, BYTES, or ARRAYBUFFER\");\n}g=u(h.slice(),n,e,r(l),f);p=q(w,A(c));p=u(g,f,m,p,f);return k(p)}}function b(c,a){this.a=c;this.b=a}function O(c,a,b,e){var h=\"\";a/=8;var n,g,d;d=-1===b?3:0;for(n=0;n<a;n+=1)g=c[n>>>2]>>>8*(d+n%4*b),h+=\"0123456789abcdef\".charAt(g>>>4&15)+\"0123456789abcdef\".charAt(g&15);return e.outputUpper?h.toUpperCase():h}function P(c,a,b,e){var h=\"\",n=a/8,g,d,p,f;f=-1===b?3:0;for(g=0;g<n;g+=3)for(d=g+1<n?c[g+1>>>2]:0,p=g+2<n?c[g+2>>>2]:0,p=(c[g>>>2]>>>8*(f+g%4*b)&255)<<16|(d>>>8*(f+(g+1)%4*b)&255)<<8|p>>>8*(f+\n(g+2)%4*b)&255,d=0;4>d;d+=1)8*g+6*d<=a?h+=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\".charAt(p>>>6*(3-d)&63):h+=e.b64Pad;return h}function Q(c,a,b){var e=\"\";a/=8;var h,d,g;g=-1===b?3:0;for(h=0;h<a;h+=1)d=c[h>>>2]>>>8*(g+h%4*b)&255,e+=String.fromCharCode(d);return e}function R(c,a,b){a/=8;var e,h=new ArrayBuffer(a),d,g;g=new Uint8Array(h);d=-1===b?3:0;for(e=0;e<a;e+=1)g[e]=c[e>>>2]>>>8*(d+e%4*b)&255;return h}function N(c){var a={outputUpper:!1,b64Pad:\"=\",shakeLen:-1};c=c||{};\na.outputUpper=c.outputUpper||!1;!0===c.hasOwnProperty(\"b64Pad\")&&(a.b64Pad=c.b64Pad);if(!0===c.hasOwnProperty(\"shakeLen\")){if(0!==c.shakeLen%8)throw Error(\"shakeLen must be a multiple of 8\");a.shakeLen=c.shakeLen}if(\"boolean\"!==typeof a.outputUpper)throw Error(\"Invalid outputUpper formatting option\");if(\"string\"!==typeof a.b64Pad)throw Error(\"Invalid b64Pad formatting option\");return a}function M(c,a,b){switch(a){case \"UTF8\":case \"UTF16BE\":case \"UTF16LE\":break;default:throw Error(\"encoding must be UTF8, UTF16BE, or UTF16LE\");\n}switch(c){case \"HEX\":c=function(a,c,d){var g=a.length,l,p,f,m,q,u;if(0!==g%2)throw Error(\"String of HEX type must be in byte increments\");c=c||[0];d=d||0;q=d>>>3;u=-1===b?3:0;for(l=0;l<g;l+=2){p=parseInt(a.substr(l,2),16);if(isNaN(p))throw Error(\"String of HEX type contains invalid characters\");m=(l>>>1)+q;for(f=m>>>2;c.length<=f;)c.push(0);c[f]|=p<<8*(u+m%4*b)}return{value:c,binLen:4*g+d}};break;case \"TEXT\":c=function(c,h,d){var g,l,p=0,f,m,q,u,r,t;h=h||[0];d=d||0;q=d>>>3;if(\"UTF8\"===a)for(t=-1===\nb?3:0,f=0;f<c.length;f+=1)for(g=c.charCodeAt(f),l=[],128>g?l.push(g):2048>g?(l.push(192|g>>>6),l.push(128|g&63)):55296>g||57344<=g?l.push(224|g>>>12,128|g>>>6&63,128|g&63):(f+=1,g=65536+((g&1023)<<10|c.charCodeAt(f)&1023),l.push(240|g>>>18,128|g>>>12&63,128|g>>>6&63,128|g&63)),m=0;m<l.length;m+=1){r=p+q;for(u=r>>>2;h.length<=u;)h.push(0);h[u]|=l[m]<<8*(t+r%4*b);p+=1}else if(\"UTF16BE\"===a||\"UTF16LE\"===a)for(t=-1===b?2:0,l=\"UTF16LE\"===a&&1!==b||\"UTF16LE\"!==a&&1===b,f=0;f<c.length;f+=1){g=c.charCodeAt(f);\n!0===l&&(m=g&255,g=m<<8|g>>>8);r=p+q;for(u=r>>>2;h.length<=u;)h.push(0);h[u]|=g<<8*(t+r%4*b);p+=2}return{value:h,binLen:8*p+d}};break;case \"B64\":c=function(a,c,d){var g=0,l,p,f,m,q,u,r,t;if(-1===a.search(/^[a-zA-Z0-9=+\\/]+$/))throw Error(\"Invalid character in base-64 string\");p=a.indexOf(\"=\");a=a.replace(/\\=/g,\"\");if(-1!==p&&p<a.length)throw Error(\"Invalid '=' found in base-64 string\");c=c||[0];d=d||0;u=d>>>3;t=-1===b?3:0;for(p=0;p<a.length;p+=4){q=a.substr(p,4);for(f=m=0;f<q.length;f+=1)l=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\".indexOf(q[f]),\nm|=l<<18-6*f;for(f=0;f<q.length-1;f+=1){r=g+u;for(l=r>>>2;c.length<=l;)c.push(0);c[l]|=(m>>>16-8*f&255)<<8*(t+r%4*b);g+=1}}return{value:c,binLen:8*g+d}};break;case \"BYTES\":c=function(a,c,d){var g,l,p,f,m,q;c=c||[0];d=d||0;p=d>>>3;q=-1===b?3:0;for(l=0;l<a.length;l+=1)g=a.charCodeAt(l),m=l+p,f=m>>>2,c.length<=f&&c.push(0),c[f]|=g<<8*(q+m%4*b);return{value:c,binLen:8*a.length+d}};break;case \"ARRAYBUFFER\":try{c=new ArrayBuffer(0)}catch(e){throw Error(\"ARRAYBUFFER not supported by this environment\");}c=\nfunction(a,c,d){var g,l,p,f,m,q;c=c||[0];d=d||0;l=d>>>3;m=-1===b?3:0;q=new Uint8Array(a);for(g=0;g<a.byteLength;g+=1)f=g+l,p=f>>>2,c.length<=p&&c.push(0),c[p]|=q[g]<<8*(m+f%4*b);return{value:c,binLen:8*a.byteLength+d}};break;default:throw Error(\"format must be HEX, TEXT, B64, BYTES, or ARRAYBUFFER\");}return c}function y(c,a){return c<<a|c>>>32-a}function S(c,a){return 32<a?(a-=32,new b(c.b<<a|c.a>>>32-a,c.a<<a|c.b>>>32-a)):0!==a?new b(c.a<<a|c.b>>>32-a,c.b<<a|c.a>>>32-a):c}function w(c,a){return c>>>\na|c<<32-a}function t(c,a){var k=null,k=new b(c.a,c.b);return k=32>=a?new b(k.a>>>a|k.b<<32-a&4294967295,k.b>>>a|k.a<<32-a&4294967295):new b(k.b>>>a-32|k.a<<64-a&4294967295,k.a>>>a-32|k.b<<64-a&4294967295)}function T(c,a){var k=null;return k=32>=a?new b(c.a>>>a,c.b>>>a|c.a<<32-a&4294967295):new b(0,c.a>>>a-32)}function aa(c,a,b){return c&a^~c&b}function ba(c,a,k){return new b(c.a&a.a^~c.a&k.a,c.b&a.b^~c.b&k.b)}function U(c,a,b){return c&a^c&b^a&b}function ca(c,a,k){return new b(c.a&a.a^c.a&k.a^a.a&\nk.a,c.b&a.b^c.b&k.b^a.b&k.b)}function da(c){return w(c,2)^w(c,13)^w(c,22)}function ea(c){var a=t(c,28),k=t(c,34);c=t(c,39);return new b(a.a^k.a^c.a,a.b^k.b^c.b)}function fa(c){return w(c,6)^w(c,11)^w(c,25)}function ga(c){var a=t(c,14),k=t(c,18);c=t(c,41);return new b(a.a^k.a^c.a,a.b^k.b^c.b)}function ha(c){return w(c,7)^w(c,18)^c>>>3}function ia(c){var a=t(c,1),k=t(c,8);c=T(c,7);return new b(a.a^k.a^c.a,a.b^k.b^c.b)}function ja(c){return w(c,17)^w(c,19)^c>>>10}function ka(c){var a=t(c,19),k=t(c,61);\nc=T(c,6);return new b(a.a^k.a^c.a,a.b^k.b^c.b)}function G(c,a){var b=(c&65535)+(a&65535);return((c>>>16)+(a>>>16)+(b>>>16)&65535)<<16|b&65535}function la(c,a,b,e){var h=(c&65535)+(a&65535)+(b&65535)+(e&65535);return((c>>>16)+(a>>>16)+(b>>>16)+(e>>>16)+(h>>>16)&65535)<<16|h&65535}function H(c,a,b,e,h){var d=(c&65535)+(a&65535)+(b&65535)+(e&65535)+(h&65535);return((c>>>16)+(a>>>16)+(b>>>16)+(e>>>16)+(h>>>16)+(d>>>16)&65535)<<16|d&65535}function ma(c,a){var d,e,h;d=(c.b&65535)+(a.b&65535);e=(c.b>>>16)+\n(a.b>>>16)+(d>>>16);h=(e&65535)<<16|d&65535;d=(c.a&65535)+(a.a&65535)+(e>>>16);e=(c.a>>>16)+(a.a>>>16)+(d>>>16);return new b((e&65535)<<16|d&65535,h)}function na(c,a,d,e){var h,n,g;h=(c.b&65535)+(a.b&65535)+(d.b&65535)+(e.b&65535);n=(c.b>>>16)+(a.b>>>16)+(d.b>>>16)+(e.b>>>16)+(h>>>16);g=(n&65535)<<16|h&65535;h=(c.a&65535)+(a.a&65535)+(d.a&65535)+(e.a&65535)+(n>>>16);n=(c.a>>>16)+(a.a>>>16)+(d.a>>>16)+(e.a>>>16)+(h>>>16);return new b((n&65535)<<16|h&65535,g)}function oa(c,a,d,e,h){var n,g,l;n=(c.b&\n65535)+(a.b&65535)+(d.b&65535)+(e.b&65535)+(h.b&65535);g=(c.b>>>16)+(a.b>>>16)+(d.b>>>16)+(e.b>>>16)+(h.b>>>16)+(n>>>16);l=(g&65535)<<16|n&65535;n=(c.a&65535)+(a.a&65535)+(d.a&65535)+(e.a&65535)+(h.a&65535)+(g>>>16);g=(c.a>>>16)+(a.a>>>16)+(d.a>>>16)+(e.a>>>16)+(h.a>>>16)+(n>>>16);return new b((g&65535)<<16|n&65535,l)}function B(c,a){return new b(c.a^a.a,c.b^a.b)}function A(c){var a=[],d;if(\"SHA-1\"===c)a=[1732584193,4023233417,2562383102,271733878,3285377520];else if(0===c.lastIndexOf(\"SHA-\",0))switch(a=\n[3238371032,914150663,812702999,4144912697,4290775857,1750603025,1694076839,3204075428],d=[1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225],c){case \"SHA-224\":break;case \"SHA-256\":a=d;break;case \"SHA-384\":a=[new b(3418070365,a[0]),new b(1654270250,a[1]),new b(2438529370,a[2]),new b(355462360,a[3]),new b(1731405415,a[4]),new b(41048885895,a[5]),new b(3675008525,a[6]),new b(1203062813,a[7])];break;case \"SHA-512\":a=[new b(d[0],4089235720),new b(d[1],2227873595),\nnew b(d[2],4271175723),new b(d[3],1595750129),new b(d[4],2917565137),new b(d[5],725511199),new b(d[6],4215389547),new b(d[7],327033209)];break;default:throw Error(\"Unknown SHA variant\");}else if(0===c.lastIndexOf(\"SHA3-\",0)||0===c.lastIndexOf(\"SHAKE\",0))for(c=0;5>c;c+=1)a[c]=[new b(0,0),new b(0,0),new b(0,0),new b(0,0),new b(0,0)];else throw Error(\"No SHA variants supported\");return a}function K(c,a){var b=[],e,d,n,g,l,p,f;e=a[0];d=a[1];n=a[2];g=a[3];l=a[4];for(f=0;80>f;f+=1)b[f]=16>f?c[f]:y(b[f-\n3]^b[f-8]^b[f-14]^b[f-16],1),p=20>f?H(y(e,5),d&n^~d&g,l,1518500249,b[f]):40>f?H(y(e,5),d^n^g,l,1859775393,b[f]):60>f?H(y(e,5),U(d,n,g),l,2400959708,b[f]):H(y(e,5),d^n^g,l,3395469782,b[f]),l=g,g=n,n=y(d,30),d=e,e=p;a[0]=G(e,a[0]);a[1]=G(d,a[1]);a[2]=G(n,a[2]);a[3]=G(g,a[3]);a[4]=G(l,a[4]);return a}function Z(c,a,b,e){var d;for(d=(a+65>>>9<<4)+15;c.length<=d;)c.push(0);c[a>>>5]|=128<<24-a%32;a+=b;c[d]=a&4294967295;c[d-1]=a/4294967296|0;a=c.length;for(d=0;d<a;d+=16)e=K(c.slice(d,d+16),e);return e}function L(c,\na,k){var e,h,n,g,l,p,f,m,q,u,r,t,v,w,y,A,z,x,F,B,C,D,E=[],J;if(\"SHA-224\"===k||\"SHA-256\"===k)u=64,t=1,D=Number,v=G,w=la,y=H,A=ha,z=ja,x=da,F=fa,C=U,B=aa,J=d;else if(\"SHA-384\"===k||\"SHA-512\"===k)u=80,t=2,D=b,v=ma,w=na,y=oa,A=ia,z=ka,x=ea,F=ga,C=ca,B=ba,J=V;else throw Error(\"Unexpected error in SHA-2 implementation\");k=a[0];e=a[1];h=a[2];n=a[3];g=a[4];l=a[5];p=a[6];f=a[7];for(r=0;r<u;r+=1)16>r?(q=r*t,m=c.length<=q?0:c[q],q=c.length<=q+1?0:c[q+1],E[r]=new D(m,q)):E[r]=w(z(E[r-2]),E[r-7],A(E[r-15]),E[r-\n16]),m=y(f,F(g),B(g,l,p),J[r],E[r]),q=v(x(k),C(k,e,h)),f=p,p=l,l=g,g=v(n,m),n=h,h=e,e=k,k=v(m,q);a[0]=v(k,a[0]);a[1]=v(e,a[1]);a[2]=v(h,a[2]);a[3]=v(n,a[3]);a[4]=v(g,a[4]);a[5]=v(l,a[5]);a[6]=v(p,a[6]);a[7]=v(f,a[7]);return a}function D(c,a){var d,e,h,n,g=[],l=[];if(null!==c)for(e=0;e<c.length;e+=2)a[(e>>>1)%5][(e>>>1)/5|0]=B(a[(e>>>1)%5][(e>>>1)/5|0],new b(c[e+1],c[e]));for(d=0;24>d;d+=1){n=A(\"SHA3-\");for(e=0;5>e;e+=1){h=a[e][0];var p=a[e][1],f=a[e][2],m=a[e][3],q=a[e][4];g[e]=new b(h.a^p.a^f.a^\nm.a^q.a,h.b^p.b^f.b^m.b^q.b)}for(e=0;5>e;e+=1)l[e]=B(g[(e+4)%5],S(g[(e+1)%5],1));for(e=0;5>e;e+=1)for(h=0;5>h;h+=1)a[e][h]=B(a[e][h],l[e]);for(e=0;5>e;e+=1)for(h=0;5>h;h+=1)n[h][(2*e+3*h)%5]=S(a[e][h],W[e][h]);for(e=0;5>e;e+=1)for(h=0;5>h;h+=1)a[e][h]=B(n[e][h],new b(~n[(e+1)%5][h].a&n[(e+2)%5][h].a,~n[(e+1)%5][h].b&n[(e+2)%5][h].b));a[0][0]=B(a[0][0],X[d])}return a}var d,V,W,X;d=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,\n1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,\n2227730452,2361852424,2428436474,2756734187,3204031479,3329325298];V=[new b(d[0],3609767458),new b(d[1],602891725),new b(d[2],3964484399),new b(d[3],2173295548),new b(d[4],4081628472),new b(d[5],3053834265),new b(d[6],2937671579),new b(d[7],3664609560),new b(d[8],2734883394),new b(d[9],1164996542),new b(d[10],1323610764),new b(d[11],3590304994),new b(d[12],4068182383),new b(d[13],991336113),new b(d[14],633803317),new b(d[15],3479774868),new b(d[16],2666613458),new b(d[17],944711139),new b(d[18],2341262773),\nnew b(d[19],2007800933),new b(d[20],1495990901),new b(d[21],1856431235),new b(d[22],3175218132),new b(d[23],2198950837),new b(d[24],3999719339),new b(d[25],766784016),new b(d[26],2566594879),new b(d[27],3203337956),new b(d[28],1034457026),new b(d[29],2466948901),new b(d[30],3758326383),new b(d[31],168717936),new b(d[32],1188179964),new b(d[33],1546045734),new b(d[34],1522805485),new b(d[35],2643833823),new b(d[36],2343527390),new b(d[37],1014477480),new b(d[38],1206759142),new b(d[39],344077627),\nnew b(d[40],1290863460),new b(d[41],3158454273),new b(d[42],3505952657),new b(d[43],106217008),new b(d[44],3606008344),new b(d[45],1432725776),new b(d[46],1467031594),new b(d[47],851169720),new b(d[48],3100823752),new b(d[49],1363258195),new b(d[50],3750685593),new b(d[51],3785050280),new b(d[52],3318307427),new b(d[53],3812723403),new b(d[54],2003034995),new b(d[55],3602036899),new b(d[56],1575990012),new b(d[57],1125592928),new b(d[58],2716904306),new b(d[59],442776044),new b(d[60],593698344),new b(d[61],\n3733110249),new b(d[62],2999351573),new b(d[63],3815920427),new b(3391569614,3928383900),new b(3515267271,566280711),new b(3940187606,3454069534),new b(4118630271,4000239992),new b(116418474,1914138554),new b(174292421,2731055270),new b(289380356,3203993006),new b(460393269,320620315),new b(685471733,587496836),new b(852142971,1086792851),new b(1017036298,365543100),new b(1126000580,2618297676),new b(1288033470,3409855158),new b(1501505948,4234509866),new b(1607167915,987167468),new b(1816402316,\n1246189591)];X=[new b(0,1),new b(0,32898),new b(2147483648,32906),new b(2147483648,2147516416),new b(0,32907),new b(0,2147483649),new b(2147483648,2147516545),new b(2147483648,32777),new b(0,138),new b(0,136),new b(0,2147516425),new b(0,2147483658),new b(0,2147516555),new b(2147483648,139),new b(2147483648,32905),new b(2147483648,32771),new b(2147483648,32770),new b(2147483648,128),new b(0,32778),new b(2147483648,2147483658),new b(2147483648,2147516545),new b(2147483648,32896),new b(0,2147483649),\nnew b(2147483648,2147516424)];W=[[0,36,3,41,18],[1,44,10,45,2],[62,6,43,15,61],[28,55,25,21,56],[27,20,39,8,14]];\"function\"===typeof define&&define.amd?define(function(){return C}):\"undefined\"!==typeof exports?(\"undefined\"!==typeof module&&module.exports&&(module.exports=C),exports=C):Y.jsSHA=C})(this);\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License. See License.txt in the project root for license information.\n\nimport {\n  parseConnectionString,\n  ServiceBusConnectionStringModel\n} from \"../util/utils\";\nimport { TokenInfo, TokenProvider, TokenType } from \"./token\";\nimport { Buffer } from \"buffer\";\nimport isBuffer from \"is-buffer\";\nimport jssha from \"jssha\";\n\n/**\n * @class SasTokenProvider\n * Defines the SasTokenProvider.\n */\nexport class SasTokenProvider implements TokenProvider {\n  /**\n   * @property {string} namespace - The namespace of the EventHub/ServiceBus instance.\n   */\n  namespace: string;\n\n  /**\n   * @property {string} keyName - The name of the EventHub/ServiceBus key.\n   */\n  keyName: string;\n\n  /**\n   * @property {string} key - The secret value associated with the above EventHub/ServiceBus key.\n   */\n  key: string;\n  /**\n   * @property {number} tokenRenewalMarginInSeconds - The number of seconds within which it\n   * is good to renew the token. Default = 900 seconds (15 minutes).\n   */\n  tokenRenewalMarginInSeconds: number;\n  /**\n   * @property {number} tokenValidTimeInSeconds - The number of seconds for which the token\n   * is valid. Default = 3600 seconds (1 hour).\n   */\n  tokenValidTimeInSeconds: number;\n\n  /**\n   * Initializes a new instance of SasTokenProvider\n   * @constructor\n   * @param {string} namespace - The namespace of the EventHub/ServiceBus instance.\n   * @param {string} keyName - The name of the EventHub/ServiceBus key.\n   * @param {string} key - The secret value associated with the above EventHub/ServiceBus key\n   */\n  constructor(\n    namespace: string,\n    keyName: string,\n    key: string,\n    tokenValidTimeInSeconds?: number,\n    tokenRenewalMarginInSeconds?: number\n  ) {\n    this.namespace = namespace;\n    this.keyName = keyName;\n    this.key = key;\n    this.tokenValidTimeInSeconds = tokenValidTimeInSeconds || 3600;\n    this.tokenRenewalMarginInSeconds = tokenRenewalMarginInSeconds || 900;\n    if (this.tokenValidTimeInSeconds <= this.tokenRenewalMarginInSeconds) {\n      throw new Error(\n        \"tokenRenewalMarginInSeconds must be less than tokenValidTimeInSeconds\"\n      );\n    }\n  }\n\n  /**\n   * Gets the sas token for the specified audience\n   * @param {string} [audience] - The audience for which the token is desired. If not\n   * provided then the Endpoint from the connection string will be applied.\n   */\n  async getToken(audience?: string): Promise<TokenInfo> {\n    return this._createToken(\n      Math.floor(Date.now() / 1000) + this.tokenValidTimeInSeconds,\n      audience\n    );\n  }\n\n  /**\n   * @protected\n   * Creates the sas token based on the provided information\n   * @param {string | number} expiry - The time period in unix time after which the token will expire.\n   * @param {string} [audience] - The audience for which the token is desired. If not\n   * provided then the Endpoint from the connection string will be applied.\n   * @param {string | Buffer} [hashInput] The input to be provided to hmac to create the hash.\n   */\n  protected _createToken(\n    expiry: number,\n    audience?: string,\n    hashInput?: string | Buffer\n  ): TokenInfo {\n    if (!audience) audience = this.namespace;\n    audience = encodeURIComponent(audience);\n    const keyName = encodeURIComponent(this.keyName);\n    const stringToSign = audience + \"\\n\" + expiry;\n    hashInput = hashInput || this.key;\n    let shaObj: any;\n    if (isBuffer(hashInput)) {\n      shaObj = new jssha(\"SHA-256\", \"ARRAYBUFFER\");\n      shaObj.setHMACKey(hashInput, \"ARRAYBUFFER\");\n      shaObj.update(Buffer.from(stringToSign));\n    } else {\n      shaObj = new jssha(\"SHA-256\", \"TEXT\");\n      shaObj.setHMACKey(hashInput, \"TEXT\");\n      shaObj.update(stringToSign);\n    }\n    const sig = encodeURIComponent(shaObj.getHMAC(\"B64\"));\n    return {\n      token: `SharedAccessSignature sr=${audience}&sig=${sig}&se=${expiry}&skn=${keyName}`,\n      tokenType: TokenType.CbsTokenTypeSas,\n      expiry: expiry\n    };\n  }\n\n  /**\n   * Creates a token provider from the EventHub/ServiceBus connection string;\n   * @param {string} connectionString - The EventHub/ServiceBus connection string\n   */\n  static fromConnectionString(connectionString: string): SasTokenProvider {\n    const parsed = parseConnectionString<ServiceBusConnectionStringModel>(\n      connectionString\n    );\n    return new SasTokenProvider(\n      parsed.Endpoint,\n      parsed.SharedAccessKeyName,\n      parsed.SharedAccessKey\n    );\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License. See License.txt in the project root for license information.\n\nimport {\n  parseConnectionString,\n  ServiceBusConnectionStringModel\n} from \"../util/utils\";\nimport { WebSocketImpl } from \"rhea-promise\";\n\n/**\n * Describes the options that can be provided while creating a connection config.\n * @interface ConnectionConfigOptions\n */\nexport interface ConnectionConfigOptions {\n  /**\n   * @property {boolean} [isEntityPathRequired] Indicates whether the entity path is required in the\n   * connection config.\n   */\n  isEntityPathRequired?: boolean;\n}\n\n/**\n * Describes the connection config object that is created after parsing an EventHub or ServiceBus\n * connection string.\n * @interface ConnectionConfig\n */\nexport interface ConnectionConfig {\n  /**\n   * @property {string} endpoint - The service bus endpoint\n   * \"sb://<yournamespace>.servicebus.windows.net/\".\n   */\n  endpoint: string;\n  /**\n   * @property {string} host - The host \"<yournamespace>.servicebus.windows.net\".\n   */\n  host: string;\n  /**\n   * @property {string} connectionString - The connection string.\n   */\n  connectionString: string;\n  /**\n   * @property {string} entityPath - The name/path of the entity (hub/queue/topic name) to which the\n   * connection needs to happen.\n   */\n  entityPath?: string;\n  /**\n   * @property {string} sharedAccessKeyName - The name of the access key.\n   */\n  sharedAccessKeyName: string;\n  /**\n   * @property {string} sharedAccessKey - The secret value of the access key.\n   */\n  sharedAccessKey: string;\n\n  /**\n   * @property {WebSocketImpl} [webSocket] - The WebSocket constructor used to create an AMQP connection\n   * over a WebSocket. In browsers, the built-in WebSocket will be  used by default. In Node, a\n   * TCP socket will be used if a WebSocket constructor is not provided.\n   */\n  webSocket?: WebSocketImpl;\n\n  /**\n   * @property {string} [webSocketEndpointPath] - The path for the endpoint that accepts an AMQP\n   * connection over WebSockets.\n   */\n  webSocketEndpointPath?: string;\n\n  /**\n   * @property {any} [webSocketConstructorOptions] - Options to be passed to the WebSocket constructor\n   */\n  webSocketConstructorOptions?: any;\n}\n\n/**\n * Describes the ConnectionConfig module\n * @module ConnectionConfig\n */\nexport namespace ConnectionConfig {\n  /**\n   * Creates the connection config.\n   * @param {string} connectionString - The connection string for a given service like\n   * EventHub/ServiceBus.\n   * @param {string} [path]           - The name/path of the entity (hub name) to which the\n   * connection needs to happen. This will override the EntityPath in the connectionString\n   * if present.\n   * @returns {ConnectionConfig} ConnectionConfig\n   */\n  export function create(\n    connectionString: string,\n    path?: string\n  ): ConnectionConfig {\n    connectionString = String(connectionString);\n\n    const parsedCS = parseConnectionString<ServiceBusConnectionStringModel>(\n      connectionString\n    );\n    if (!parsedCS.Endpoint) {\n      throw new TypeError(\"Missing Endpoint in Connection String.\");\n    }\n\n    if (!parsedCS.Endpoint.endsWith(\"/\")) parsedCS.Endpoint += \"/\";\n\n    const result: ConnectionConfig = {\n      connectionString: connectionString,\n      endpoint: parsedCS.Endpoint,\n      host:\n        parsedCS && parsedCS.Endpoint\n          ? (parsedCS.Endpoint.match(\"sb://([^/]*)\") || [])[1]\n          : \"\",\n      sharedAccessKeyName: parsedCS.SharedAccessKeyName,\n      sharedAccessKey: parsedCS.SharedAccessKey\n    };\n\n    if (path || parsedCS.EntityPath) {\n      result.entityPath = path || parsedCS.EntityPath;\n    }\n    return result;\n  }\n\n  /**\n   * Validates the properties of connection config.\n   * @param {ConnectionConfig} config The connection config to be validated.\n   * @returns {void} void\n   */\n  export function validate(\n    config: ConnectionConfig,\n    options?: ConnectionConfigOptions\n  ): void {\n    if (!options) options = {};\n\n    if (!config) {\n      throw new TypeError(\"Missing configuration\");\n    }\n\n    if (!config.endpoint) {\n      throw new TypeError(\"Missing 'endpoint' in configuration\");\n    }\n    config.endpoint = String(config.endpoint);\n\n    if (!config.host) {\n      throw new TypeError(\"Missing 'host' in configuration\");\n    }\n    config.host = String(config.host);\n\n    if (options.isEntityPathRequired && !config.entityPath) {\n      throw new TypeError(\"Missing 'entityPath' in configuration\");\n    }\n    config.entityPath = String(config.entityPath);\n\n    if (!config.sharedAccessKeyName) {\n      throw new TypeError(\"Missing 'sharedAccessKeyName' in configuration\");\n    }\n    config.sharedAccessKeyName = String(config.sharedAccessKeyName);\n\n    if (!config.sharedAccessKey) {\n      throw new TypeError(\"Missing 'sharedAccessKey' in configuration\");\n    }\n    config.sharedAccessKey = String(config.sharedAccessKey);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License. See License.txt in the project root for license information.\n\nimport { ConnectionConfig } from \"./connectionConfig\";\n\n/**\n * Describes the connection config object that is created after parsing an EventHub connection\n * string. It also provides some convenience methods for getting the address and audience for\n * different entities.\n * @interface EventHubConnectionConfig\n */\nexport interface EventHubConnectionConfig extends ConnectionConfig {\n  /**\n   * @property {string} entityPath - The name/path of the entity (event hub name) to which the\n   * connection needs to happen.\n   */\n  entityPath: string;\n  /**\n   * Provides the EventHub Sender address in one of the following forms based on the input:\n   * - `\"<hubName>\"`\n   * - `\"<hubName>/Partitions/<partitionId>\"`\n   *\n   * @param partitionId The partitionId in the EventHub to which messages will be sent.\n   */\n  getSenderAddress(partitionId?: string | number): string;\n  /**\n   * Provides the EventHub Sender audience in one of the following forms based on the input:\n   * - `\"sb://<yournamespace>.servicebus.windows.net/<hubName>\"`\n   * - `\"sb://<yournamespace>.servicebus.windows.net/<hubName>/Partitions/<partitionId>\"`\n   *\n   * @param partitionId The partitionId in the EventHub to which messages will be sent.\n   */\n  getSenderAudience(partitionId?: string | number): string;\n  /**\n   * Provides the EventHub Receiver address:\n   * - `\"<hub-name>/ConsumerGroups/<consumer-group-name>/Partitions/<partition-id>\"`\n   *\n   * @param partitionId The partitionId in the EventHub from which messages will be received.\n   * @param consumergroup The consumergoup in the EventHub from which the messages will\n   * be received. Default: `$default`.\n   */\n  getReceiverAddress(\n    partitionId: string | number,\n    consumergroup?: string\n  ): string;\n  /**\n   * Provides the EventHub Receiver audience.\n   * - `\"sb://<your-namespace>.servicebus.windows.net/<hub-name>/ConsumerGroups/<consumer-group-name>/Partitions/<partition-id>\"`\n   *\n   * @param partitionId The partitionId in the EventHub from which messages will be received.\n   * @param consumergroup The consumergoup in the EventHub from which the messages will\n   * be received. Default: `$default`.\n   */\n  getReceiverAudience(\n    partitionId: string | number,\n    consumergroup?: string\n  ): string;\n  /**\n   * Provides the EventHub Management address.\n   * - `\"<hub-name>/$management\"`\n   */\n  getManagementAddress(): string;\n  /**\n   * Provides the EventHub Management audience.\n   * - `\"sb://<your-namespace>.servicebus.windows.net/<hub-name>/$management\"`\n   */\n  getManagementAudience(): string;\n}\n\n/**\n * Describes the connection config object that is created after parsing an EventHub connection\n * string. It also provides some convenience methods for getting the address and audience for\n * different entities.\n * @module EventHubConnectionConfig\n */\nexport module EventHubConnectionConfig {\n  /**\n   * Creates the connection config.\n   * @param {string} connectionString - The connection string for a given service like\n   * EventHub/ServiceBus.\n   * @param {string} [path]           - The name/path of the entity (hub name) to which the\n   * connection needs to happen. This will override the EntityPath in the connectionString\n   * if present.\n   * @returns {EventHubConnectionConfig} EventHubConnectionConfig\n   */\n  export function create(\n    connectionString: string,\n    path?: string\n  ): EventHubConnectionConfig {\n    const config = ConnectionConfig.create(connectionString, path);\n    if (!config.entityPath) {\n      throw new TypeError(\n        `Either provide \"path\" or the \"connectionString\": \"${connectionString}\", ` +\n          `must contain EntityPath=\"<path-to-the-entity>\".`\n      );\n    }\n    return createFromConnectionConfig(config);\n  }\n\n  /**\n   * Creates an EventHubConnectionConfig from the provided base ConnectionConfig.\n   * @param config The base connection config from which the EventHubConnectionConfig needs to be\n   * created.\n   * @returns EventHubConnectionConfig\n   */\n  export function createFromConnectionConfig(\n    config: ConnectionConfig\n  ): EventHubConnectionConfig {\n    ConnectionConfig.validate(config, { isEntityPathRequired: true });\n\n    (config as EventHubConnectionConfig).getManagementAudience = () => {\n      return `${config.endpoint}${config.entityPath}/$management`;\n    };\n    (config as EventHubConnectionConfig).getManagementAddress = () => {\n      return `${config.entityPath}/$management`;\n    };\n\n    (config as EventHubConnectionConfig).getSenderAudience = (\n      partitionId?: string | number\n    ) => {\n      if (partitionId != undefined) {\n        return `${config.endpoint}${\n          config.entityPath\n        }/Partitions/${partitionId}`;\n      } else {\n        return `${config.endpoint}${config.entityPath}`;\n      }\n    };\n\n    (config as EventHubConnectionConfig).getSenderAddress = (\n      partitionId?: string | number\n    ) => {\n      if (partitionId != undefined) {\n        return `${config.entityPath}/Partitions/${partitionId}`;\n      } else {\n        return `${config.entityPath}`;\n      }\n    };\n\n    (config as EventHubConnectionConfig).getReceiverAudience = (\n      partitionId: string | number,\n      consumergroup?: string\n    ) => {\n      if (!consumergroup) consumergroup = \"$default\";\n      return (\n        `${config.endpoint}${\n          config.entityPath\n        }/ConsumerGroups/${consumergroup}/` + `Partitions/${partitionId}`\n      );\n    };\n\n    (config as EventHubConnectionConfig).getReceiverAddress = (\n      partitionId: string | number,\n      consumergroup?: string\n    ) => {\n      if (!consumergroup) consumergroup = \"$default\";\n      return `${\n        config.entityPath\n      }/ConsumerGroups/${consumergroup}/Partitions/${partitionId}`;\n    };\n    return config as EventHubConnectionConfig;\n  }\n\n  /**\n   * Validates the properties of connection config.\n   * @param {ConnectionConfig} config The connection config to be validated.\n   * @returns {void} void\n   */\n  export function validate(config: EventHubConnectionConfig): void {\n    return ConnectionConfig.validate(config, { isEntityPathRequired: true });\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License. See License.txt in the project root for license information.\n\nimport { ConnectionConfig } from \"./connectionConfig\";\nimport { EventHubConnectionConfig } from \"./eventhubConnectionConfig\";\nimport {\n  parseConnectionString,\n  IotHubConnectionStringModel\n} from \"../util/utils\";\n\n/**\n * @interface IotHubConnectionConfig\n * @ignore\n */\nexport interface IotHubConnectionConfig {\n  /**\n   * @property {string} endpoint - The iothub endpoint `\"<iothub-namespace>.azure-devices.net\"`.\n   */\n  hostName: string;\n  /**\n   * @property {string} host - The host `\"<yournamespace>\"`.\n   */\n  host: string;\n  /**\n   * @property {string} connectionString - The IotHub connection string.\n   */\n  connectionString: string;\n  /**\n   * @property {string} entityPath - The name/path of the entity to which the connection needs to happen.\n   */\n  entityPath: string;\n  /**\n   * @property {string} sharedAccessKeyName - The name of the access key.\n   */\n  sharedAccessKeyName: string;\n  /**\n   * @property {string} sharedAccessKey - The secret value of the access key.\n   */\n  sharedAccessKey: string;\n  /**\n   * @property {string} [deviceId] - The unique device identifier.\n   */\n  deviceId?: string;\n}\n\n/**\n * @module IotHubConnectionConfig\n * @ignore\n */\nexport namespace IotHubConnectionConfig {\n  /**\n   * Creates the connection config.\n   * @ignore\n   * @param {string} connectionString - The event hub connection string\n   * @param {string} [path]           - The name/path of the entity (hub name) to which the connection needs to happen\n   */\n  export function create(\n    connectionString: string,\n    path?: string\n  ): IotHubConnectionConfig {\n    connectionString = String(connectionString);\n\n    const parsedCS = parseConnectionString<IotHubConnectionStringModel>(\n      connectionString\n    );\n    if (!path) {\n      path = \"messages/events\";\n    }\n    const result: IotHubConnectionConfig = {\n      connectionString: connectionString,\n      hostName: parsedCS.HostName,\n      host:\n        parsedCS && parsedCS.HostName ? parsedCS.HostName.split(\".\")[0] : \"\",\n      entityPath: path,\n      sharedAccessKeyName: parsedCS.SharedAccessKeyName,\n      sharedAccessKey: parsedCS.SharedAccessKey,\n      deviceId: parsedCS.DeviceId\n    };\n    return result;\n  }\n\n  /**\n   * Validates the properties of connection config.\n   * @ignore\n   * @param {ConnectionConfig} config The connection config to be validated.\n   */\n  export function validate(config: IotHubConnectionConfig): void {\n    if (!config) {\n      throw new TypeError(\"Missing configuration\");\n    }\n\n    if (!config.hostName) {\n      throw new TypeError(\"Missing 'hostName' in configuration\");\n    }\n    config.hostName = String(config.hostName);\n\n    if (!config.entityPath) {\n      throw new TypeError(\"Missing 'entityPath' in configuration\");\n    }\n    config.entityPath = String(config.entityPath);\n\n    if (!config.sharedAccessKeyName) {\n      throw new TypeError(\"Missing 'sharedAccessKeyName' in configuration\");\n    }\n    config.sharedAccessKeyName = String(config.sharedAccessKeyName);\n\n    if (!config.sharedAccessKey) {\n      throw new TypeError(\"Missing 'sharedAccessKey' in configuration\");\n    }\n    config.sharedAccessKey = String(config.sharedAccessKey);\n\n    if (config.deviceId) {\n      config.deviceId = String(config.deviceId);\n    }\n  }\n  /**\n   * Convert iothub connection config to eventhub connection config.\n   * @ignore\n   * @param {IotHubConnectionConfig} iotHubConfig\n   */\n  export function convertToEventHubConnectionConfig(\n    iotHubConfig: IotHubConnectionConfig\n  ): EventHubConnectionConfig {\n    validate(iotHubConfig);\n    const config: ConnectionConfig = {\n      sharedAccessKey: iotHubConfig.sharedAccessKey,\n      sharedAccessKeyName: iotHubConfig.sharedAccessKeyName,\n      entityPath: iotHubConfig.entityPath,\n      host: iotHubConfig.hostName,\n      endpoint: `sb://${iotHubConfig.hostName}/`,\n      connectionString: iotHubConfig.connectionString\n    };\n    return EventHubConnectionConfig.createFromConnectionConfig(config);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License. See License.txt in the project root for license information.\n\nimport { TokenInfo } from \"./auth/token\";\nimport {\n  EventContext,\n  ReceiverOptions,\n  Message as AmqpMessage,\n  SenderEvents,\n  ReceiverEvents,\n  Connection,\n  SenderOptions,\n  generate_uuid\n} from \"rhea-promise\";\nimport * as Constants from \"./util/constants\";\nimport * as log from \"./log\";\nimport { translate } from \"./errors\";\nimport { defaultLock } from \"./util/utils\";\nimport { RequestResponseLink } from \"./requestResponseLink\";\n\n/**\n * Describes the CBS Response.\n * @interface CbsResponse\n */\nexport interface CbsResponse {\n  correlationId: string;\n  statusCode: string;\n  satusDescription: string;\n}\n\n/**\n * @class CbsClient\n * Describes the EventHub/ServiceBus Cbs client that talks to the $cbs endopint over AMQP connection.\n */\nexport class CbsClient {\n  /**\n   * @property {string} endpoint CBS endpoint - \"$cbs\"\n   */\n  readonly endpoint: string = Constants.cbsEndpoint;\n  /**\n   * @property {string} replyTo CBS replyTo - The reciever link name that the service should reply to.\n   */\n  readonly replyTo: string = `${Constants.cbsReplyTo}-${generate_uuid()}`;\n  /**\n   * @property {string} cbsLock The unqiue lock name per $cbs session per connection that is used to\n   * acquire the lock for establishing a cbs session if one does not exist for an aqmp connection.\n   */\n  readonly cbsLock: string = `${Constants.negotiateCbsKey}-${generate_uuid()}`;\n  /**\n   * @property {string} connectionLock The unqiue lock name per connection that is used to\n   * acquire the lock for establishing an amqp connection if one does not exist.\n   */\n  readonly connectionLock: string;\n  /**\n   * @property {Connection} connection The AMQP connection.\n   */\n  connection: Connection;\n\n  /**\n   * CBS sender, receiver on the same session.\n   * @private\n   */\n  private _cbsSenderReceiverLink?: RequestResponseLink;\n\n  /**\n   * @constructor\n   * @param {Connection} connection The AMQP conection.\n   * @param {string} connectionLock A unique string (usually a guid) per connection.\n   */\n  constructor(connection: Connection, connectionLock: string) {\n    this.connection = connection;\n    this.connectionLock = connectionLock;\n  }\n\n  /**\n   * Creates a singleton instance of the CBS session if it hasn't been initialized previously on\n   * the given connection.\n   * @returns {Promise<void>} Promise<void>.\n   */\n  async init(): Promise<void> {\n    try {\n      // Acquire the lock and establish an amqp connection if it does not exist.\n      if (!this.connection.isOpen()) {\n        log.cbs(\"The CBS client is trying to establish an AMQP connection.\");\n        await defaultLock.acquire(this.connectionLock, () => {\n          return this.connection.open();\n        });\n      }\n\n      if (!this._isCbsSenderReceiverLinkOpen()) {\n        const rxOpt: ReceiverOptions = {\n          source: {\n            address: this.endpoint\n          },\n          name: this.replyTo,\n          onSessionError: (context: EventContext) => {\n            const id = context.connection.options.id;\n            const ehError = translate(context.session!.error!);\n            log.error(\n              \"[%s] An error occurred on the session for request/response links \" +\n                \"for $cbs: %O\",\n              id,\n              ehError\n            );\n          }\n        };\n        const srOpt: SenderOptions = { target: { address: this.endpoint } };\n        log.cbs(\n          \"[%s] Creating sender/receiver links on a session for $cbs endpoint.\",\n          this.connection.id\n        );\n        this._cbsSenderReceiverLink = await RequestResponseLink.create(\n          this.connection,\n          srOpt,\n          rxOpt\n        );\n        this._cbsSenderReceiverLink.sender.on(\n          SenderEvents.senderError,\n          (context: EventContext) => {\n            const id = context.connection.options.id;\n            const ehError = translate(context.sender!.error!);\n            log.error(\n              \"[%s] An error occurred on the cbs sender link.. %O\",\n              id,\n              ehError\n            );\n          }\n        );\n        this._cbsSenderReceiverLink.receiver.on(\n          ReceiverEvents.receiverError,\n          (context: EventContext) => {\n            const id = context.connection.options.id;\n            const ehError = translate(context.receiver!.error!);\n            log.error(\n              \"[%s] An error occurred on the cbs receiver link.. %O\",\n              id,\n              ehError\n            );\n          }\n        );\n        log.cbs(\n          \"[%s] Successfully created the cbs sender '%s' and receiver '%s' \" +\n            \"links over cbs session.\",\n          this.connection.id,\n          this._cbsSenderReceiverLink.sender.name,\n          this._cbsSenderReceiverLink.receiver.name\n        );\n      } else {\n        log.cbs(\n          \"[%s] CBS session is already present. Reusing the cbs sender '%s' \" +\n            \"and receiver '%s' links over cbs session.\",\n          this.connection.id,\n          this._cbsSenderReceiverLink!.sender.name,\n          this._cbsSenderReceiverLink!.receiver.name\n        );\n      }\n    } catch (err) {\n      err = translate(err);\n      log.error(\n        \"[%s] An error occured while establishing the cbs links: %O\",\n        this.connection.id,\n        err\n      );\n      throw err;\n    }\n  }\n\n  /**\n   * Negotiates the CBS claim with the EventHub/ServiceBus Service.\n   * @param {string} audience The entity token audience for which the token is requested in one\n   * of the following forms:\n   *\n   * - **ServiceBus**\n   *    - **Sender**\n   *        - `\"sb://<yournamespace>.servicebus.windows.net/<queue-name>\"`\n   *        - `\"sb://<yournamespace>.servicebus.windows.net/<topic-name>\"`\n   *\n   *    - **Receiver**\n   *         - `\"sb://<yournamespace>.servicebus.windows.net/<queue-name>\"`\n   *         - `\"sb://<yournamespace>.servicebus.windows.net/<topic-name>\"`\n   *\n   *    - **ManagementClient**\n   *         - `\"sb://<your-namespace>.servicebus.windows.net/<queue-name>/$management\"`.\n   *         - `\"sb://<your-namespace>.servicebus.windows.net/<topic-name>/$management\"`.\n   *\n   * - **EventHubs**\n   *     - **Sender**\n   *          - `\"sb://<yournamespace>.servicebus.windows.net/<hubName>\"`\n   *          - `\"sb://<yournamespace>.servicebus.windows.net/<hubName>/Partitions/<partitionId>\"`.\n   *\n   *     - **Receiver**\n   *         - `\"sb://<your-namespace>.servicebus.windows.net/<event-hub-name>/ConsumerGroups/<consumer-group-name>/Partitions/<partition-id>\"`.\n   *\n   *     - **ManagementClient**\n   *         - `\"sb://<your-namespace>.servicebus.windows.net/<event-hub-name>/$management\"`.\n   * @param {TokenInfo} tokenObject The token object that needs to be sent in the put-token request.\n   * @return {Promise<any>} Returns a Promise that resolves when $cbs authentication is successful\n   * and rejects when an error occurs during $cbs authentication.\n   */\n  async negotiateClaim(\n    audience: string,\n    tokenObject: TokenInfo\n  ): Promise<CbsResponse> {\n    try {\n      const request: AmqpMessage = {\n        body: tokenObject.token,\n        message_id: generate_uuid(),\n        reply_to: this.replyTo,\n        to: this.endpoint,\n        application_properties: {\n          operation: Constants.operationPutToken,\n          name: audience,\n          type: tokenObject.tokenType\n        }\n      };\n      const responseMessage = await this._cbsSenderReceiverLink!.sendRequest(\n        request\n      );\n      log.cbs(\n        \"[%s] The CBS response is: %O\",\n        this.connection.id,\n        responseMessage\n      );\n      return this._fromAmqpMessageResponse(responseMessage);\n    } catch (err) {\n      log.error(\n        \"[%s] An error occurred while negotiating the cbs claim: %O\",\n        this.connection.id,\n        err\n      );\n      throw err;\n    }\n  }\n\n  /**\n   * Closes the AMQP cbs session to the EventHub/ServiceBus for this client,\n   * returning a promise that will be resolved when disconnection is completed.\n   * @return {Promise<void>}\n   */\n  async close(): Promise<void> {\n    try {\n      if (this._isCbsSenderReceiverLinkOpen()) {\n        const cbsLink = this._cbsSenderReceiverLink;\n        this._cbsSenderReceiverLink = undefined;\n        await cbsLink!.close();\n        log.cbs(\n          \"[%s] Successfully closed the cbs session.\",\n          this.connection.id\n        );\n      }\n    } catch (err) {\n      const msg = `An error occurred while closing the cbs link: ${err.stack ||\n        JSON.stringify(err)}.`;\n      log.error(\"[%s] %s\", this.connection.id, msg);\n      throw new Error(msg);\n    }\n  }\n\n  /**\n   * Removes the AMQP cbs session to the EventHub/ServiceBus for this client,\n   * @returns {void} void\n   */\n  remove(): void {\n    try {\n      if (this._cbsSenderReceiverLink) {\n        const cbsLink = this._cbsSenderReceiverLink;\n        this._cbsSenderReceiverLink = undefined;\n        cbsLink!.remove();\n        log.cbs(\n          \"[%s] Successfully removed the cbs session.\",\n          this.connection.id\n        );\n      }\n    } catch (err) {\n      const msg = `An error occurred while removing the cbs link: ${err.stack ||\n        JSON.stringify(err)}.`;\n      log.error(\"[%s] %s\", this.connection.id, msg);\n      throw new Error(msg);\n    }\n  }\n\n  /**\n   * Indicates whether the cbs sender receiver link is open or closed.\n   * @private\n   * @return {boolean} `true` open, `false` closed.\n   */\n  private _isCbsSenderReceiverLinkOpen(): boolean {\n    return (\n      this._cbsSenderReceiverLink! && this._cbsSenderReceiverLink!.isOpen()\n    );\n  }\n\n  private _fromAmqpMessageResponse(msg: AmqpMessage): CbsResponse {\n    const cbsResponse = {\n      correlationId: msg.correlation_id! as string,\n      statusCode: msg.application_properties\n        ? msg.application_properties[\"status-code\"]\n        : \"\",\n      satusDescription: msg.application_properties\n        ? msg.application_properties[\"status-description\"]\n        : \"\"\n    };\n    log.cbs(\n      \"[%s] The deserialized CBS response is: %o\",\n      this.connection.id,\n      cbsResponse\n    );\n    return cbsResponse;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License. See License.txt in the project root for license information.\n\nimport { MessageHeader as AmqpMessageHeader } from \"rhea-promise\";\nimport * as log from \"./log\";\n\n/**\n * Describes the defined set of standard header properties of the message.\n * @interface MessageHeader\n */\nexport interface MessageHeader {\n  /**\n   * @property {boolean} [firstAcquirer] If this value is true, then this message has not been\n   * acquired by any other link. Ifthis value is false, then this message MAY have previously\n   * been acquired by another link or links.\n   */\n  firstAcquirer?: boolean;\n  /**\n   * @property {number} [deliveryCount] The number of prior unsuccessful delivery attempts.\n   */\n  deliveryCount?: number;\n  /**\n   * @property {number} [ttl] time to live in ms.\n   */\n  ttl?: number;\n  /**\n   * @property {boolean} [durable] Specifies durability requirements.\n   */\n  durable?: boolean;\n  /**\n   * @property {number} [priority] The relative message priority. Higher numbers indicate higher\n   * priority messages.\n   */\n  priority?: number;\n}\n\n/**\n * Describes the operations that can be performed on the message header.\n * @module MessageHeader\n */\nexport namespace MessageHeader {\n  /**\n   * Converts MessageHeader to AmqpMessageHeader.\n   *\n   * @param {MessageHeader} props Message header.\n   * @returns {AmqpMessageHeader} AmqpMessageHeader\n   */\n  export function toAmqpMessageHeader(props: MessageHeader): AmqpMessageHeader {\n    const amqpHeader: AmqpMessageHeader = {};\n    if (props.deliveryCount != undefined) {\n      amqpHeader.delivery_count = props.deliveryCount;\n    }\n    if (props.durable != undefined) amqpHeader.durable = props.durable;\n    if (props.firstAcquirer != undefined) {\n      amqpHeader.first_acquirer = props.firstAcquirer;\n    }\n    if (props.priority != undefined) {\n      amqpHeader.priority = props.priority;\n    }\n    if (props.ttl != undefined) {\n      amqpHeader.ttl = props.ttl;\n    }\n    log.msgHeader(\"To AmqpMessageHeader: %O\", amqpHeader);\n    return amqpHeader;\n  }\n\n  /**\n   * Converts AmqpMessageHeader to MessageHeader.\n   *\n   * @param {AmqpMessageHeader} props Amqp Message Header\n   * @returns {MessageHeader} MessageHeader.\n   */\n  export function fromAmqpMessageHeader(\n    props: AmqpMessageHeader\n  ): MessageHeader {\n    const msgHeader: MessageHeader = {};\n    if (props.delivery_count != undefined) {\n      msgHeader.deliveryCount = props.delivery_count;\n    }\n    if (props.durable != undefined) {\n      msgHeader.durable = props.durable;\n    }\n    if (props.first_acquirer != undefined) {\n      msgHeader.firstAcquirer = props.first_acquirer;\n    }\n    if (props.priority != undefined) {\n      msgHeader.priority = props.priority;\n    }\n    if (props.ttl != undefined) {\n      msgHeader.ttl = props.ttl;\n    }\n    log.msgHeader(\"From AmqpMessageHeader: %O\", msgHeader);\n    return msgHeader;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License. See License.txt in the project root for license information.\n\nimport { MessageProperties as AmqpMessageProperties } from \"rhea-promise\";\nimport * as log from \"./log\";\n\n/**\n * Describes the defined set of standard properties of the message.\n * @interface MessageProperties\n */\nexport interface MessageProperties {\n  /**\n   * @property {string | number | Buffer} [messageId] The application message identifier that uniquely idenitifes a message.\n   * The user is responsible for making sure that this is unique in the given context. Guids usually make a good fit.\n   */\n  messageId?: string | number | Buffer;\n  /**\n   * @property {string} [replyTo] The address of the node to send replies to.\n   */\n  replyTo?: string;\n  /**\n   * @property {string} [to] The address of the node the message is destined for.\n   */\n  to?: string;\n  /**\n   * @property {string | number | Buffer} [correlationId] The id that can be used to mark or identify messages between clients.\n   */\n  correlationId?: string | number | Buffer;\n  /**\n   * @property {string} [contentType] MIME type for the message.\n   */\n  contentType?: string;\n  /**\n   * @property {string} [contentEncoding] The content-encoding property is used as a modifier to the content-type.\n   * When present, its valueindicates what additional content encodings have been applied to the application-data.\n   */\n  contentEncoding?: string;\n  /**\n   * @property {number} [absoluteExpiryTime] The time when this message is considered expired.\n   */\n  absoluteExpiryTime?: number;\n  /**\n   * @property {number} [creationTime] The time this message was created.\n   */\n  creationTime?: number;\n  /**\n   * @property {string} [groupId] The group this message belongs to.\n   */\n  groupId?: string;\n  /**\n   * @property {number} [groupSequence] The sequence number of this message with its group.\n   */\n  groupSequence?: number;\n  /**\n   * @property {string} [replyToGroupId] The group the reply message belongs to.\n   */\n  replyToGroupId?: string;\n  /**\n   * @property {string} [subject] A common field for summary information about the message\n   * content and purpose.\n   */\n  subject?: string;\n  /**\n   * @property {string} [userId] The identity of the user responsible for producing the message.\n   */\n  userId?: string;\n}\n\n/**\n * Describes the operations that can be performed on the amqp message properties.\n * @module MessageProperties\n */\nexport namespace MessageProperties {\n  /**\n   * Converts MessageProperties to AmqpMessageProperties.\n   * @param {MessageProperties} props Message properties.\n   * @returns {AmqpMessageProperties} AmqpMessageProperties.\n   */\n  export function toAmqpMessageProperties(\n    props: MessageProperties\n  ): AmqpMessageProperties {\n    const amqpProperties: AmqpMessageProperties = {};\n    if (props.absoluteExpiryTime != undefined) {\n      amqpProperties.absolute_expiry_time = props.absoluteExpiryTime;\n    }\n    if (props.contentEncoding != undefined) {\n      amqpProperties.content_encoding = props.contentEncoding;\n    }\n    if (props.contentType != undefined) {\n      amqpProperties.content_type = props.contentType;\n    }\n    if (props.correlationId != undefined) {\n      amqpProperties.correlation_id = props.correlationId;\n    }\n    if (props.creationTime != undefined) {\n      amqpProperties.creation_time = props.creationTime;\n    }\n    if (props.groupId != undefined) {\n      amqpProperties.group_id = props.groupId;\n    }\n    if (props.groupSequence != undefined) {\n      amqpProperties.group_sequence = props.groupSequence;\n    }\n    if (props.messageId != undefined) {\n      amqpProperties.message_id = props.messageId;\n    }\n    if (props.replyTo != undefined) {\n      amqpProperties.reply_to = props.replyTo;\n    }\n    if (props.replyToGroupId != undefined) {\n      amqpProperties.reply_to_group_id = props.replyToGroupId;\n    }\n    if (props.subject != undefined) {\n      amqpProperties.subject = props.subject;\n    }\n    if (props.to != undefined) {\n      amqpProperties.to = props.to;\n    }\n    if (props.userId != undefined) {\n      amqpProperties.user_id = props.userId;\n    }\n\n    log.msgProperties(\"To AmqpMessageProperties: %O\", amqpProperties);\n    return amqpProperties;\n  }\n\n  /**\n   * Converts AmqpMessageProperties to MessageProperties.\n   * @param {AmqpMessageProperties} props Amqp message properties.\n   * @returns {MessageProperties} MessageProperties.\n   */\n  export function fromAmqpMessageProperties(\n    props: AmqpMessageProperties\n  ): MessageProperties {\n    const msgProperties: MessageProperties = {};\n    if (props.absolute_expiry_time != undefined) {\n      msgProperties.absoluteExpiryTime = props.absolute_expiry_time;\n    }\n    if (props.content_encoding != undefined) {\n      msgProperties.contentEncoding = props.content_encoding;\n    }\n    if (props.content_type != undefined) {\n      msgProperties.contentType = props.content_type;\n    }\n    if (props.correlation_id != undefined) {\n      msgProperties.correlationId = props.correlation_id;\n    }\n    if (props.creation_time != undefined) {\n      msgProperties.creationTime = props.creation_time;\n    }\n    if (props.group_id != undefined) {\n      msgProperties.groupId = props.group_id;\n    }\n    if (props.group_sequence != undefined) {\n      msgProperties.groupSequence = props.group_sequence;\n    }\n    if (props.message_id != undefined) {\n      msgProperties.messageId = props.message_id;\n    }\n    if (props.reply_to != undefined) {\n      msgProperties.replyTo = props.reply_to;\n    }\n    if (props.reply_to_group_id != undefined) {\n      msgProperties.replyToGroupId = props.reply_to_group_id;\n    }\n    if (props.subject != undefined) {\n      msgProperties.subject = props.subject;\n    }\n    if (props.to != undefined) {\n      msgProperties.to = props.to;\n    }\n    if (props.user_id != undefined) {\n      msgProperties.userId = props.user_id;\n    }\n\n    log.msgProperties(\"From AmqpMessageProperties: %O\", msgProperties);\n    return msgProperties;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License. See License.txt in the project root for license information.\n\nimport { Connection, ConnectionOptions, generate_uuid } from \"rhea-promise\";\nimport { CbsClient } from \"./cbs\";\nimport { DataTransformer, DefaultDataTransformer } from \"./dataTransformer\";\nimport { TokenProvider } from \"./auth/token\";\nimport { ConnectionConfig } from \"./connectionConfig/connectionConfig\";\nimport { SasTokenProvider } from \"./auth/sas\";\n\nimport * as Constants from \"./util/constants\";\nimport * as os from \"os\";\nimport { isNode } from \"./util/utils\";\n\n/**\n * @interface ConnectionContextBase\n * Provides contextual information like the underlying amqp connection, cbs session, tokenProvider,\n * Connection config, data transformer, etc.\n */\nexport interface ConnectionContextBase {\n  /**\n   * @property {ConnectionConfig} config The EventHub connection config that is created after\n   * parsing the connection string.\n   */\n  readonly config: ConnectionConfig;\n  /**\n   * @property {string} connectionLock The unqiue lock name per connection that is used to\n   * acquire the lock for establishing an aqmp connection per client if one does not exist.\n   */\n  readonly connectionLock: string;\n  /**\n   * @property {string} negotiateClaimLock The unqiue lock name per connection that is used to\n   * acquire the lock for negotiating cbs claim by an entity on that connection.\n   */\n  readonly negotiateClaimLock: string;\n  /**\n   * @property {TokenProvider} tokenProvider The TokenProvider to be used for getting tokens\n   * for authentication for the EventHub client.\n   */\n  readonly tokenProvider: TokenProvider;\n  /**\n   * @property {Connection} connection The underlying AMQP connection.\n   */\n  connection: Connection;\n  /**\n   * @property {string} connectionId The amqp connection id that uniquely identifies the\n   * connection within a process.\n   */\n  connectionId: string;\n  /**\n   * @property {boolean} wasConnectionCloseCalled Indicates whether the close() method was\n   * called on the connection object.\n   */\n  wasConnectionCloseCalled: boolean;\n  /**\n   * @property {DataTransformer} dataTransformer A DataTransformer object that has methods named\n   * - encode Responsible for encoding the AMQP message before sending it on the wire.\n   * - decode Responsible for decoding the received AMQP message before passing it to the customer.\n   */\n  dataTransformer: DataTransformer;\n  /**\n   * @property {CbsClient} cbsSession A reference to the cbs session ($cbs endpoint) on the\n   * underlying AMQP connection for the EventHub Client.\n   */\n  cbsSession: CbsClient;\n}\n\n/**\n * Defines the properties that need to be set while establishing the AMQP connection.\n * @interface ConnectionProperties\n */\nexport interface ConnectionProperties {\n  /**\n   * @property {string} product The name of the product that will be populated as the AMQP\n   * connection property. Example: \"MSJSClient\".\n   */\n  product: string;\n  /**\n   * @property {string} version The version of the package/sdk that is making the AMQP connection.\n   */\n  version: string;\n  /**\n   * @property {string} userAgent The userAgent that needs to be set as the AMQP connection\n   * property. Example: `\"/js-service-bus\"` or `\"/js-event-hubs,/js-event-processor-host=1.0.0\"`.\n   */\n  userAgent: string;\n}\n\n/**\n * Describes the parameters that can be provided to create the base connection context.\n * @interface CreateConnectionContextBaseParameters\n */\nexport interface CreateConnectionContextBaseParameters {\n  /**\n   * @property {ConnectionConfig} config The connection config that is created by parsing the\n   * connection string.\n   */\n  config: ConnectionConfig;\n  /**\n   * @property {ConnectionProperties} connectionProperties Properties to be provided while creating\n   * the AMQP connection.\n   */\n  connectionProperties: ConnectionProperties;\n  /**\n   * @property {TokenProvider} [tokenProvider] The token provider to be used for Authentication.\n   * Default value: SasTokenProvider.\n   */\n  tokenProvider?: TokenProvider;\n  /**\n   * @property {DataTransformer} [dataTransformer] The datatransformer to be used for encoding and\n   * decoding messages. Default value: DefaultDataTransformer\n   */\n  dataTransformer?: DataTransformer;\n  /**\n   * @property {boolean} [isEntityPathRequired] Determines whether entity path should be a part of\n   * the connection config. If `true` it must be present, `false` otherwise. Default value false.\n   */\n  isEntityPathRequired?: boolean;\n  /**\n   * @property {number} [operationTimeoutInSeconds] - The duration in which the promise should\n   * complete (resolve/reject). If it is not completed, then the Promise will be rejected after\n   * timeout occurs. Default: `60 seconds`.\n   */\n  operationTimeoutInSeconds?: number;\n}\n\nexport module ConnectionContextBase {\n  /**\n   * Creates the base connection context.\n   * @param {CreateConnectionContextBaseParameters} parameters Parameters to be provided to create\n   * the base connection context.\n   */\n  export function create(parameters: CreateConnectionContextBaseParameters): ConnectionContextBase {\n    ConnectionConfig.validate(parameters.config, {\n      isEntityPathRequired: parameters.isEntityPathRequired || false\n    });\n    const userAgent = parameters.connectionProperties.userAgent;\n    if (userAgent.length > Constants.maxUserAgentLength) {\n      throw new Error(\n        `The user-agent string cannot be more than ${Constants.maxUserAgentLength} characters in length.` +\n          `The given user-agent string is: ${userAgent} with length: ${userAgent.length}`\n      );\n    }\n\n    const connectionOptions: ConnectionOptions = {\n      transport: Constants.TLS,\n      host: parameters.config.host,\n      hostname: parameters.config.host,\n      username: parameters.config.sharedAccessKeyName,\n      port: 5671,\n      reconnect: false,\n      properties: {\n        product: parameters.connectionProperties.product,\n        version: parameters.connectionProperties.version,\n        \"user-agent\": userAgent,\n        platform: `(${os.arch()}-${os.type()}-${os.release()})`,\n        framework: `Node/${process.version}`\n      },\n      operationTimeoutInSeconds: parameters.operationTimeoutInSeconds,\n      idle_time_out: Constants.defaultConnectionIdleTimeoutInMs\n    };\n\n    if (\n      parameters.config.webSocket ||\n      (!isNode && typeof window !== \"undefined\" && (window as any).WebSocket)\n    ) {\n      const socket = parameters.config.webSocket || (window as any).WebSocket;\n      const host = parameters.config.host;\n      const endpoint = parameters.config.webSocketEndpointPath || \"\";\n      const socketOptions = parameters.config.webSocketConstructorOptions || {};\n\n      connectionOptions.webSocketOptions = {\n        webSocket: socket,\n        url: `wss://${host}:443/${endpoint}`,\n        protocol: [\"AMQPWSB10\"],\n        options: socketOptions\n      };\n    }\n\n    const connection = new Connection(connectionOptions);\n    const connectionLock = `${Constants.establishConnection}-${generate_uuid()}`;\n    const connectionContextBase: ConnectionContextBase = {\n      wasConnectionCloseCalled: false,\n      connectionLock: connectionLock,\n      negotiateClaimLock: `${Constants.negotiateClaim}-${generate_uuid()}`,\n      connection: connection,\n      connectionId: connection.id,\n      cbsSession: new CbsClient(connection, connectionLock),\n      config: parameters.config,\n      tokenProvider:\n        parameters.tokenProvider ||\n        new SasTokenProvider(\n          parameters.config.endpoint,\n          parameters.config.sharedAccessKeyName,\n          parameters.config.sharedAccessKey\n        ),\n      dataTransformer: parameters.dataTransformer || new DefaultDataTransformer()\n    };\n\n    return connectionContextBase;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport * as log from \"./log\";\nimport * as os from \"os\";\nimport { packageJsonInfo } from \"./util/constants\";\nimport {\n  ConnectionConfig,\n  Constants,\n  ConnectionContextBase,\n  CreateConnectionContextBaseParameters,\n  Dictionary,\n  delay,\n  TokenProvider\n} from \"@azure/amqp-common\";\nimport { ServiceBusClientOptions } from \"./serviceBusClient\";\nimport { ClientEntityContext } from \"./clientEntityContext\";\nimport { OnAmqpEvent, EventContext, ConnectionEvents } from \"rhea-promise\";\n\n/**\n * @internal\n * @interface ConnectionContext\n * Provides contextual information like the underlying amqp connection, cbs session, management session,\n * tokenProvider, senders, receivers, etc. about the ServiceBus client.\n */\nexport interface ConnectionContext extends ConnectionContextBase {\n  /**\n   * @property A dictionary of ClientEntityContext\n   * objects for each of the client in the `clients` dictionary\n   */\n  clientContexts: Dictionary<ClientEntityContext>;\n}\n\n/**\n * @internal\n */\nexport namespace ConnectionContext {\n  /**\n   * @property {string} userAgent The user agent string for the ServiceBus client.\n   * See guideline at https://github.com/Azure/azure-sdk/blob/master/docs/design/Telemetry.mdk\n   */\n  export const userAgent: string = `azsdk-js-azureservicebus/${\n    packageJsonInfo.version\n  } (NODE-VERSION ${process.version}; ${os.type()} ${os.release()})`;\n\n  export function create(\n    config: ConnectionConfig,\n    tokenProvider: TokenProvider,\n    options?: ServiceBusClientOptions\n  ): ConnectionContext {\n    if (!options) options = {};\n    const parameters: CreateConnectionContextBaseParameters = {\n      config: config,\n      tokenProvider: tokenProvider,\n      dataTransformer: options.dataTransformer,\n      isEntityPathRequired: false,\n      connectionProperties: {\n        product: \"MSJSClient\",\n        userAgent: userAgent,\n        version: packageJsonInfo.version\n      }\n    };\n    // Let us create the base context and then add ServiceBus specific ConnectionContext properties.\n    const connectionContext = ConnectionContextBase.create(parameters) as ConnectionContext;\n    connectionContext.clientContexts = {};\n\n    // Define listeners to be added to the connection object for\n    // \"connection_open\" and \"connection_error\" events.\n    const onConnectionOpen: OnAmqpEvent = (context: EventContext) => {\n      connectionContext.wasConnectionCloseCalled = false;\n      log.connectionCtxt(\n        \"[%s] setting 'wasConnectionCloseCalled' property of connection context to %s.\",\n        connectionContext.connection.id,\n        connectionContext.wasConnectionCloseCalled\n      );\n    };\n\n    const disconnected: OnAmqpEvent = async (context: EventContext) => {\n      const connectionError =\n        context.connection && context.connection.error ? context.connection.error : undefined;\n      if (connectionError) {\n        log.error(\n          \"[%s] Error (context.connection.error) occurred on the amqp connection: %O\",\n          connectionContext.connection.id,\n          connectionError\n        );\n      }\n      const contextError = context.error;\n      if (contextError) {\n        log.error(\n          \"[%s] Error (context.error) occurred on the amqp connection: %O\",\n          connectionContext.connection.id,\n          contextError\n        );\n      }\n      const state: Readonly<{\n        wasConnectionCloseCalled: boolean;\n        numClients: number;\n      }> = {\n        wasConnectionCloseCalled: connectionContext.wasConnectionCloseCalled,\n        numClients: Object.keys(connectionContext.clientContexts).length\n      };\n\n      // Clear internal map maintained by rhea to avoid reconnecting of old links once the\n      // connection is back up.\n      connectionContext.connection.removeAllSessions();\n\n      // Close the cbs session to ensure all the event handlers are released.\n      await connectionContext.cbsSession.close();\n\n      // Close the management sessions to ensure all the event handlers are released.\n      for (const id of Object.keys(connectionContext.clientContexts)) {\n        const clientContext = connectionContext.clientContexts[id];\n        if (clientContext.managementClient) {\n          await clientContext.managementClient.close();\n        }\n      }\n\n      // The connection should always be brought back up if the sdk did not call connection.close()\n      // and there was atleast one sender/receiver link on the connection before it went down.\n      log.error(\"[%s] state: %O\", connectionContext.connectionId, state);\n      if (!state.wasConnectionCloseCalled && state.numClients) {\n        log.error(\n          \"[%s] connection.close() was not called from the sdk and there were some \" +\n            \"clients. We should reconnect.\",\n          connectionContext.connection.id\n        );\n        await delay(Constants.connectionReconnectDelay);\n        // reconnect clients if any\n        for (const id of Object.keys(connectionContext.clientContexts)) {\n          const clientContext = connectionContext.clientContexts[id];\n          log.error(\n            \"[%s] calling detached on client '%s'.\",\n            connectionContext.connection.id,\n            clientContext.clientId\n          );\n          clientContext.onDetached(connectionError || contextError).catch((err) => {\n            log.error(\n              \"[%s] An error occurred while reconnecting the sender '%s': %O.\",\n              connectionContext.connection.id,\n              clientContext.clientId,\n              err\n            );\n          });\n        }\n      }\n    };\n\n    const protocolError: OnAmqpEvent = async (context: EventContext) => {\n      if (context.connection && context.connection.error) {\n        log.error(\n          \"[%s] Error (context.connection.error) occurred on the amqp connection: %O\",\n          connectionContext.connection.id,\n          context.connection && context.connection.error\n        );\n      }\n      if (context.error) {\n        log.error(\n          \"[%s] Error (context.error) occurred on the amqp connection: %O\",\n          connectionContext.connection.id,\n          context.error\n        );\n      }\n    };\n\n    const error: OnAmqpEvent = async (context: EventContext) => {\n      if (context.connection && context.connection.error) {\n        log.error(\n          \"[%s] Error (context.connection.error) occurred on the amqp connection: %O\",\n          connectionContext.connection.id,\n          context.connection && context.connection.error\n        );\n      }\n      if (context.error) {\n        log.error(\n          \"[%s] Error (context.error) occurred on the amqp connection: %O\",\n          connectionContext.connection.id,\n          context.error\n        );\n      }\n    };\n\n    // Add listeners on the connection object.\n    connectionContext.connection.on(ConnectionEvents.connectionOpen, onConnectionOpen);\n    connectionContext.connection.on(ConnectionEvents.disconnected, disconnected);\n    connectionContext.connection.on(ConnectionEvents.protocolError, protocolError);\n    connectionContext.connection.on(ConnectionEvents.error, error);\n\n    log.connectionCtxt(\n      \"[%s] Created connection context successfully.\",\n      connectionContext.connectionId\n    );\n\n    return connectionContext;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/**\n * Interface for Queue/Topic/Subscription clients\n */\nexport interface Client {\n  /**\n   * @readonly\n   * @property The path for the Service Bus entity for which this client is created.\n   */\n  readonly entityPath: string;\n  /**\n   * @readonly\n   * @property A unique identifier for this client.\n   */\n  readonly id: string;\n  /**\n   * Closes the client along with all senders and receivers created using the client.\n   */\n  close(): Promise<void>;\n}\n\n/**\n * @internal\n */\nexport enum ClientType {\n  QueueClient = \"QueueClient\",\n  TopicClient = \"TopicClient\",\n  SubscriptionClient = \"SubscriptionClient\"\n}\n","module.exports = Long;\r\n\r\n/**\r\n * wasm optimizations, to do native i64 multiplication and divide\r\n */\r\nvar wasm = null;\r\n\r\ntry {\r\n  wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([\r\n    0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11\r\n  ])), {}).exports;\r\n} catch (e) {\r\n  // no wasm support :(\r\n}\r\n\r\n/**\r\n * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\r\n *  See the from* functions below for more convenient ways of constructing Longs.\r\n * @exports Long\r\n * @class A Long class for representing a 64 bit two's-complement integer value.\r\n * @param {number} low The low (signed) 32 bits of the long\r\n * @param {number} high The high (signed) 32 bits of the long\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @constructor\r\n */\r\nfunction Long(low, high, unsigned) {\r\n\r\n    /**\r\n     * The low 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.low = low | 0;\r\n\r\n    /**\r\n     * The high 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.high = high | 0;\r\n\r\n    /**\r\n     * Whether unsigned or not.\r\n     * @type {boolean}\r\n     */\r\n    this.unsigned = !!unsigned;\r\n}\r\n\r\n// The internal representation of a long is the two given signed, 32-bit values.\r\n// We use 32-bit pieces because these are the size of integers on which\r\n// Javascript performs bit-operations.  For operations like addition and\r\n// multiplication, we split each number into 16 bit pieces, which can easily be\r\n// multiplied within Javascript's floating-point representation without overflow\r\n// or change in sign.\r\n//\r\n// In the algorithms below, we frequently reduce the negative case to the\r\n// positive case by negating the input(s) and then post-processing the result.\r\n// Note that we must ALWAYS check specially whether those values are MIN_VALUE\r\n// (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\r\n// a positive number, it overflows back into a negative).  Not handling this\r\n// case would often result in infinite recursion.\r\n//\r\n// Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\r\n// methods on which they depend.\r\n\r\n/**\r\n * An indicator used to reliably determine if an object is a Long or not.\r\n * @type {boolean}\r\n * @const\r\n * @private\r\n */\r\nLong.prototype.__isLong__;\r\n\r\nObject.defineProperty(Long.prototype, \"__isLong__\", { value: true });\r\n\r\n/**\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n * @inner\r\n */\r\nfunction isLong(obj) {\r\n    return (obj && obj[\"__isLong__\"]) === true;\r\n}\r\n\r\n/**\r\n * Tests if the specified object is a Long.\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n */\r\nLong.isLong = isLong;\r\n\r\n/**\r\n * A cache of the Long representations of small integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar INT_CACHE = {};\r\n\r\n/**\r\n * A cache of the Long representations of small unsigned integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar UINT_CACHE = {};\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromInt(value, unsigned) {\r\n    var obj, cachedObj, cache;\r\n    if (unsigned) {\r\n        value >>>= 0;\r\n        if (cache = (0 <= value && value < 256)) {\r\n            cachedObj = UINT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);\r\n        if (cache)\r\n            UINT_CACHE[value] = obj;\r\n        return obj;\r\n    } else {\r\n        value |= 0;\r\n        if (cache = (-128 <= value && value < 128)) {\r\n            cachedObj = INT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, value < 0 ? -1 : 0, false);\r\n        if (cache)\r\n            INT_CACHE[value] = obj;\r\n        return obj;\r\n    }\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given 32 bit integer value.\r\n * @function\r\n * @param {number} value The 32 bit integer in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromInt = fromInt;\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromNumber(value, unsigned) {\r\n    if (isNaN(value))\r\n        return unsigned ? UZERO : ZERO;\r\n    if (unsigned) {\r\n        if (value < 0)\r\n            return UZERO;\r\n        if (value >= TWO_PWR_64_DBL)\r\n            return MAX_UNSIGNED_VALUE;\r\n    } else {\r\n        if (value <= -TWO_PWR_63_DBL)\r\n            return MIN_VALUE;\r\n        if (value + 1 >= TWO_PWR_63_DBL)\r\n            return MAX_VALUE;\r\n    }\r\n    if (value < 0)\r\n        return fromNumber(-value, unsigned).neg();\r\n    return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\r\n * @function\r\n * @param {number} value The number in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromNumber = fromNumber;\r\n\r\n/**\r\n * @param {number} lowBits\r\n * @param {number} highBits\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromBits(lowBits, highBits, unsigned) {\r\n    return new Long(lowBits, highBits, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\r\n *  assumed to use 32 bits.\r\n * @function\r\n * @param {number} lowBits The low 32 bits\r\n * @param {number} highBits The high 32 bits\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromBits = fromBits;\r\n\r\n/**\r\n * @function\r\n * @param {number} base\r\n * @param {number} exponent\r\n * @returns {number}\r\n * @inner\r\n */\r\nvar pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\r\n\r\n/**\r\n * @param {string} str\r\n * @param {(boolean|number)=} unsigned\r\n * @param {number=} radix\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromString(str, unsigned, radix) {\r\n    if (str.length === 0)\r\n        throw Error('empty string');\r\n    if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\")\r\n        return ZERO;\r\n    if (typeof unsigned === 'number') {\r\n        // For goog.math.long compatibility\r\n        radix = unsigned,\r\n        unsigned = false;\r\n    } else {\r\n        unsigned = !! unsigned;\r\n    }\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n\r\n    var p;\r\n    if ((p = str.indexOf('-')) > 0)\r\n        throw Error('interior hyphen');\r\n    else if (p === 0) {\r\n        return fromString(str.substring(1), unsigned, radix).neg();\r\n    }\r\n\r\n    // Do several (8) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 8));\r\n\r\n    var result = ZERO;\r\n    for (var i = 0; i < str.length; i += 8) {\r\n        var size = Math.min(8, str.length - i),\r\n            value = parseInt(str.substring(i, i + size), radix);\r\n        if (size < 8) {\r\n            var power = fromNumber(pow_dbl(radix, size));\r\n            result = result.mul(power).add(fromNumber(value));\r\n        } else {\r\n            result = result.mul(radixToPower);\r\n            result = result.add(fromNumber(value));\r\n        }\r\n    }\r\n    result.unsigned = unsigned;\r\n    return result;\r\n}\r\n\r\n/**\r\n * Returns a Long representation of the given string, written using the specified radix.\r\n * @function\r\n * @param {string} str The textual representation of the Long\r\n * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromString = fromString;\r\n\r\n/**\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromValue(val, unsigned) {\r\n    if (typeof val === 'number')\r\n        return fromNumber(val, unsigned);\r\n    if (typeof val === 'string')\r\n        return fromString(val, unsigned);\r\n    // Throws for non-objects, converts non-instanceof Long:\r\n    return fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);\r\n}\r\n\r\n/**\r\n * Converts the specified value to a Long using the appropriate from* function for its type.\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long}\r\n */\r\nLong.fromValue = fromValue;\r\n\r\n// NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\r\n// no runtime penalty for these.\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_16_DBL = 1 << 16;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24_DBL = 1 << 24;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\r\n\r\n/**\r\n * @type {!Long}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ZERO = fromInt(0);\r\n\r\n/**\r\n * Signed zero.\r\n * @type {!Long}\r\n */\r\nLong.ZERO = ZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UZERO = fromInt(0, true);\r\n\r\n/**\r\n * Unsigned zero.\r\n * @type {!Long}\r\n */\r\nLong.UZERO = UZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ONE = fromInt(1);\r\n\r\n/**\r\n * Signed one.\r\n * @type {!Long}\r\n */\r\nLong.ONE = ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UONE = fromInt(1, true);\r\n\r\n/**\r\n * Unsigned one.\r\n * @type {!Long}\r\n */\r\nLong.UONE = UONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar NEG_ONE = fromInt(-1);\r\n\r\n/**\r\n * Signed negative one.\r\n * @type {!Long}\r\n */\r\nLong.NEG_ONE = NEG_ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_VALUE = fromBits(0xFFFFFFFF|0, 0x7FFFFFFF|0, false);\r\n\r\n/**\r\n * Maximum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_VALUE = MAX_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF|0, 0xFFFFFFFF|0, true);\r\n\r\n/**\r\n * Maximum unsigned value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MIN_VALUE = fromBits(0, 0x80000000|0, false);\r\n\r\n/**\r\n * Minimum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MIN_VALUE = MIN_VALUE;\r\n\r\n/**\r\n * @alias Long.prototype\r\n * @inner\r\n */\r\nvar LongPrototype = Long.prototype;\r\n\r\n/**\r\n * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\r\n * @returns {number}\r\n */\r\nLongPrototype.toInt = function toInt() {\r\n    return this.unsigned ? this.low >>> 0 : this.low;\r\n};\r\n\r\n/**\r\n * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\r\n * @returns {number}\r\n */\r\nLongPrototype.toNumber = function toNumber() {\r\n    if (this.unsigned)\r\n        return ((this.high >>> 0) * TWO_PWR_32_DBL) + (this.low >>> 0);\r\n    return this.high * TWO_PWR_32_DBL + (this.low >>> 0);\r\n};\r\n\r\n/**\r\n * Converts the Long to a string written in the specified radix.\r\n * @param {number=} radix Radix (2-36), defaults to 10\r\n * @returns {string}\r\n * @override\r\n * @throws {RangeError} If `radix` is out of range\r\n */\r\nLongPrototype.toString = function toString(radix) {\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n    if (this.isZero())\r\n        return '0';\r\n    if (this.isNegative()) { // Unsigned Longs are never negative\r\n        if (this.eq(MIN_VALUE)) {\r\n            // We need to change the Long value before it can be negated, so we remove\r\n            // the bottom-most digit in this base and then recurse to do the rest.\r\n            var radixLong = fromNumber(radix),\r\n                div = this.div(radixLong),\r\n                rem1 = div.mul(radixLong).sub(this);\r\n            return div.toString(radix) + rem1.toInt().toString(radix);\r\n        } else\r\n            return '-' + this.neg().toString(radix);\r\n    }\r\n\r\n    // Do several (6) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 6), this.unsigned),\r\n        rem = this;\r\n    var result = '';\r\n    while (true) {\r\n        var remDiv = rem.div(radixToPower),\r\n            intval = rem.sub(remDiv.mul(radixToPower)).toInt() >>> 0,\r\n            digits = intval.toString(radix);\r\n        rem = remDiv;\r\n        if (rem.isZero())\r\n            return digits + result;\r\n        else {\r\n            while (digits.length < 6)\r\n                digits = '0' + digits;\r\n            result = '' + digits + result;\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as a signed integer.\r\n * @returns {number} Signed high bits\r\n */\r\nLongPrototype.getHighBits = function getHighBits() {\r\n    return this.high;\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned high bits\r\n */\r\nLongPrototype.getHighBitsUnsigned = function getHighBitsUnsigned() {\r\n    return this.high >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as a signed integer.\r\n * @returns {number} Signed low bits\r\n */\r\nLongPrototype.getLowBits = function getLowBits() {\r\n    return this.low;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned low bits\r\n */\r\nLongPrototype.getLowBitsUnsigned = function getLowBitsUnsigned() {\r\n    return this.low >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the number of bits needed to represent the absolute value of this Long.\r\n * @returns {number}\r\n */\r\nLongPrototype.getNumBitsAbs = function getNumBitsAbs() {\r\n    if (this.isNegative()) // Unsigned Longs are never negative\r\n        return this.eq(MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();\r\n    var val = this.high != 0 ? this.high : this.low;\r\n    for (var bit = 31; bit > 0; bit--)\r\n        if ((val & (1 << bit)) != 0)\r\n            break;\r\n    return this.high != 0 ? bit + 33 : bit + 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isZero = function isZero() {\r\n    return this.high === 0 && this.low === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero. This is an alias of {@link Long#isZero}.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eqz = LongPrototype.isZero;\r\n\r\n/**\r\n * Tests if this Long's value is negative.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isNegative = function isNegative() {\r\n    return !this.unsigned && this.high < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is positive.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isPositive = function isPositive() {\r\n    return this.unsigned || this.high >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is odd.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isOdd = function isOdd() {\r\n    return (this.low & 1) === 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is even.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isEven = function isEven() {\r\n    return (this.low & 1) === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.equals = function equals(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.unsigned !== other.unsigned && (this.high >>> 31) === 1 && (other.high >>> 31) === 1)\r\n        return false;\r\n    return this.high === other.high && this.low === other.low;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eq = LongPrototype.equals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.notEquals = function notEquals(other) {\r\n    return !this.eq(/* validates */ other);\r\n};\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.neq = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ne = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThan = function lessThan(other) {\r\n    return this.comp(/* validates */ other) < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lt = LongPrototype.lessThan;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThanOrEqual = function lessThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) <= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lte = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.le = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThan = function greaterThan(other) {\r\n    return this.comp(/* validates */ other) > 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gt = LongPrototype.greaterThan;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThanOrEqual = function greaterThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gte = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ge = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Compares this Long's value with the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.compare = function compare(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.eq(other))\r\n        return 0;\r\n    var thisNeg = this.isNegative(),\r\n        otherNeg = other.isNegative();\r\n    if (thisNeg && !otherNeg)\r\n        return -1;\r\n    if (!thisNeg && otherNeg)\r\n        return 1;\r\n    // At this point the sign bits are the same\r\n    if (!this.unsigned)\r\n        return this.sub(other).isNegative() ? -1 : 1;\r\n    // Both are positive if at least one is unsigned\r\n    return (other.high >>> 0) > (this.high >>> 0) || (other.high === this.high && (other.low >>> 0) > (this.low >>> 0)) ? -1 : 1;\r\n};\r\n\r\n/**\r\n * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.comp = LongPrototype.compare;\r\n\r\n/**\r\n * Negates this Long's value.\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.negate = function negate() {\r\n    if (!this.unsigned && this.eq(MIN_VALUE))\r\n        return MIN_VALUE;\r\n    return this.not().add(ONE);\r\n};\r\n\r\n/**\r\n * Negates this Long's value. This is an alias of {@link Long#negate}.\r\n * @function\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.neg = LongPrototype.negate;\r\n\r\n/**\r\n * Returns the sum of this and the specified Long.\r\n * @param {!Long|number|string} addend Addend\r\n * @returns {!Long} Sum\r\n */\r\nLongPrototype.add = function add(addend) {\r\n    if (!isLong(addend))\r\n        addend = fromValue(addend);\r\n\r\n    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = addend.high >>> 16;\r\n    var b32 = addend.high & 0xFFFF;\r\n    var b16 = addend.low >>> 16;\r\n    var b00 = addend.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 + b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 + b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 + b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 + b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long.\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.subtract = function subtract(subtrahend) {\r\n    if (!isLong(subtrahend))\r\n        subtrahend = fromValue(subtrahend);\r\n    return this.add(subtrahend.neg());\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\r\n * @function\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.sub = LongPrototype.subtract;\r\n\r\n/**\r\n * Returns the product of this and the specified Long.\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.multiply = function multiply(multiplier) {\r\n    if (this.isZero())\r\n        return ZERO;\r\n    if (!isLong(multiplier))\r\n        multiplier = fromValue(multiplier);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = wasm.mul(this.low,\r\n                           this.high,\r\n                           multiplier.low,\r\n                           multiplier.high);\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (multiplier.isZero())\r\n        return ZERO;\r\n    if (this.eq(MIN_VALUE))\r\n        return multiplier.isOdd() ? MIN_VALUE : ZERO;\r\n    if (multiplier.eq(MIN_VALUE))\r\n        return this.isOdd() ? MIN_VALUE : ZERO;\r\n\r\n    if (this.isNegative()) {\r\n        if (multiplier.isNegative())\r\n            return this.neg().mul(multiplier.neg());\r\n        else\r\n            return this.neg().mul(multiplier).neg();\r\n    } else if (multiplier.isNegative())\r\n        return this.mul(multiplier.neg()).neg();\r\n\r\n    // If both longs are small, use float multiplication\r\n    if (this.lt(TWO_PWR_24) && multiplier.lt(TWO_PWR_24))\r\n        return fromNumber(this.toNumber() * multiplier.toNumber(), this.unsigned);\r\n\r\n    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\r\n    // We can skip products that would overflow.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = multiplier.high >>> 16;\r\n    var b32 = multiplier.high & 0xFFFF;\r\n    var b16 = multiplier.low >>> 16;\r\n    var b00 = multiplier.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 * b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 * b00;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c16 += a00 * b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 * b00;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a16 * b16;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a00 * b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\r\n * @function\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.mul = LongPrototype.multiply;\r\n\r\n/**\r\n * Returns this Long divided by the specified. The result is signed if this Long is signed or\r\n *  unsigned if this Long is unsigned.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.divide = function divide(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n    if (divisor.isZero())\r\n        throw Error('division by zero');\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        // guard against signed division overflow: the largest\r\n        // negative number / -1 would be 1 larger than the largest\r\n        // positive number, due to two's complement.\r\n        if (!this.unsigned &&\r\n            this.high === -0x80000000 &&\r\n            divisor.low === -1 && divisor.high === -1) {\r\n            // be consistent with non-wasm code path\r\n            return this;\r\n        }\r\n        var low = (this.unsigned ? wasm.div_u : wasm.div_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (this.isZero())\r\n        return this.unsigned ? UZERO : ZERO;\r\n    var approx, rem, res;\r\n    if (!this.unsigned) {\r\n        // This section is only relevant for signed longs and is derived from the\r\n        // closure library as a whole.\r\n        if (this.eq(MIN_VALUE)) {\r\n            if (divisor.eq(ONE) || divisor.eq(NEG_ONE))\r\n                return MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE\r\n            else if (divisor.eq(MIN_VALUE))\r\n                return ONE;\r\n            else {\r\n                // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\r\n                var halfThis = this.shr(1);\r\n                approx = halfThis.div(divisor).shl(1);\r\n                if (approx.eq(ZERO)) {\r\n                    return divisor.isNegative() ? ONE : NEG_ONE;\r\n                } else {\r\n                    rem = this.sub(divisor.mul(approx));\r\n                    res = approx.add(rem.div(divisor));\r\n                    return res;\r\n                }\r\n            }\r\n        } else if (divisor.eq(MIN_VALUE))\r\n            return this.unsigned ? UZERO : ZERO;\r\n        if (this.isNegative()) {\r\n            if (divisor.isNegative())\r\n                return this.neg().div(divisor.neg());\r\n            return this.neg().div(divisor).neg();\r\n        } else if (divisor.isNegative())\r\n            return this.div(divisor.neg()).neg();\r\n        res = ZERO;\r\n    } else {\r\n        // The algorithm below has not been made for unsigned longs. It's therefore\r\n        // required to take special care of the MSB prior to running it.\r\n        if (!divisor.unsigned)\r\n            divisor = divisor.toUnsigned();\r\n        if (divisor.gt(this))\r\n            return UZERO;\r\n        if (divisor.gt(this.shru(1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true\r\n            return UONE;\r\n        res = UZERO;\r\n    }\r\n\r\n    // Repeat the following until the remainder is less than other:  find a\r\n    // floating-point that approximates remainder / other *from below*, add this\r\n    // into the result, and subtract it from the remainder.  It is critical that\r\n    // the approximate value is less than or equal to the real value so that the\r\n    // remainder never becomes negative.\r\n    rem = this;\r\n    while (rem.gte(divisor)) {\r\n        // Approximate the result of division. This may be a little greater or\r\n        // smaller than the actual value.\r\n        approx = Math.max(1, Math.floor(rem.toNumber() / divisor.toNumber()));\r\n\r\n        // We will tweak the approximate result by changing it in the 48-th digit or\r\n        // the smallest non-fractional digit, whichever is larger.\r\n        var log2 = Math.ceil(Math.log(approx) / Math.LN2),\r\n            delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48),\r\n\r\n        // Decrease the approximation until it is smaller than the remainder.  Note\r\n        // that if it is too large, the product overflows and is negative.\r\n            approxRes = fromNumber(approx),\r\n            approxRem = approxRes.mul(divisor);\r\n        while (approxRem.isNegative() || approxRem.gt(rem)) {\r\n            approx -= delta;\r\n            approxRes = fromNumber(approx, this.unsigned);\r\n            approxRem = approxRes.mul(divisor);\r\n        }\r\n\r\n        // We know the answer can't be zero... and actually, zero would cause\r\n        // infinite recursion since we would make no progress.\r\n        if (approxRes.isZero())\r\n            approxRes = ONE;\r\n\r\n        res = res.add(approxRes);\r\n        rem = rem.sub(approxRem);\r\n    }\r\n    return res;\r\n};\r\n\r\n/**\r\n * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.div = LongPrototype.divide;\r\n\r\n/**\r\n * Returns this Long modulo the specified.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.modulo = function modulo(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = (this.unsigned ? wasm.rem_u : wasm.rem_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    return this.sub(this.div(divisor).mul(divisor));\r\n};\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.mod = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.rem = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns the bitwise NOT of this Long.\r\n * @returns {!Long}\r\n */\r\nLongPrototype.not = function not() {\r\n    return fromBits(~this.low, ~this.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise AND of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.and = function and(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low & other.low, this.high & other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise OR of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.or = function or(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low | other.low, this.high | other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise XOR of this Long and the given one.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.xor = function xor(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low ^ other.low, this.high ^ other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftLeft = function shiftLeft(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits(this.low << numBits, (this.high << numBits) | (this.low >>> (32 - numBits)), this.unsigned);\r\n    else\r\n        return fromBits(0, this.low << (numBits - 32), this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shl = LongPrototype.shiftLeft;\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRight = function shiftRight(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits((this.low >>> numBits) | (this.high << (32 - numBits)), this.high >> numBits, this.unsigned);\r\n    else\r\n        return fromBits(this.high >> (numBits - 32), this.high >= 0 ? 0 : -1, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr = LongPrototype.shiftRight;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRightUnsigned = function shiftRightUnsigned(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    numBits &= 63;\r\n    if (numBits === 0)\r\n        return this;\r\n    else {\r\n        var high = this.high;\r\n        if (numBits < 32) {\r\n            var low = this.low;\r\n            return fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, this.unsigned);\r\n        } else if (numBits === 32)\r\n            return fromBits(high, 0, this.unsigned);\r\n        else\r\n            return fromBits(high >>> (numBits - 32), 0, this.unsigned);\r\n    }\r\n};\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shru = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr_u = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Converts this Long to signed.\r\n * @returns {!Long} Signed long\r\n */\r\nLongPrototype.toSigned = function toSigned() {\r\n    if (!this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, false);\r\n};\r\n\r\n/**\r\n * Converts this Long to unsigned.\r\n * @returns {!Long} Unsigned long\r\n */\r\nLongPrototype.toUnsigned = function toUnsigned() {\r\n    if (this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, true);\r\n};\r\n\r\n/**\r\n * Converts this Long to its byte representation.\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {!Array.<number>} Byte representation\r\n */\r\nLongPrototype.toBytes = function toBytes(le) {\r\n    return le ? this.toBytesLE() : this.toBytesBE();\r\n};\r\n\r\n/**\r\n * Converts this Long to its little endian byte representation.\r\n * @returns {!Array.<number>} Little endian byte representation\r\n */\r\nLongPrototype.toBytesLE = function toBytesLE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        lo        & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo >>> 16 & 0xff,\r\n        lo >>> 24       ,\r\n        hi        & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi >>> 16 & 0xff,\r\n        hi >>> 24\r\n    ];\r\n};\r\n\r\n/**\r\n * Converts this Long to its big endian byte representation.\r\n * @returns {!Array.<number>} Big endian byte representation\r\n */\r\nLongPrototype.toBytesBE = function toBytesBE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        hi >>> 24       ,\r\n        hi >>> 16 & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi        & 0xff,\r\n        lo >>> 24       ,\r\n        lo >>> 16 & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo        & 0xff\r\n    ];\r\n};\r\n\r\n/**\r\n * Creates a Long from its byte representation.\r\n * @param {!Array.<number>} bytes Byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytes = function fromBytes(bytes, unsigned, le) {\r\n    return le ? Long.fromBytesLE(bytes, unsigned) : Long.fromBytesBE(bytes, unsigned);\r\n};\r\n\r\n/**\r\n * Creates a Long from its little endian byte representation.\r\n * @param {!Array.<number>} bytes Little endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesLE = function fromBytesLE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[0]       |\r\n        bytes[1] <<  8 |\r\n        bytes[2] << 16 |\r\n        bytes[3] << 24,\r\n        bytes[4]       |\r\n        bytes[5] <<  8 |\r\n        bytes[6] << 16 |\r\n        bytes[7] << 24,\r\n        unsigned\r\n    );\r\n};\r\n\r\n/**\r\n * Creates a Long from its big endian byte representation.\r\n * @param {!Array.<number>} bytes Big endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesBE = function fromBytesBE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[4] << 24 |\r\n        bytes[5] << 16 |\r\n        bytes[6] <<  8 |\r\n        bytes[7],\r\n        bytes[0] << 24 |\r\n        bytes[1] << 16 |\r\n        bytes[2] <<  8 |\r\n        bytes[3],\r\n        unsigned\r\n    );\r\n};\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport Long from \"long\";\nimport * as log from \"../log\";\nimport { generate_uuid } from \"rhea-promise\";\nimport isBuffer from \"is-buffer\";\nimport { Buffer } from \"buffer\";\nimport * as Constants from \"../util/constants\";\n\n// This is the only dependency we have on DOM types, so rather than require\n// the DOM lib we can just shim this in.\ninterface Navigator {\n  hardwareConcurrency: number;\n}\ndeclare const navigator: Navigator;\n\n/**\n * A constant that indicates whether the environment is node.js or browser based.\n */\nexport const isNode = typeof navigator === \"undefined\" && typeof process !== \"undefined\";\n\n/**\n * @internal\n * Provides a uniue name by appending a string guid to the given string in the following format:\n * `{name}-{uuid}`.\n * @param name The nme of the entity\n */\nexport function getUniqueName(name: string): string {\n  return `${name}-${generate_uuid()}`;\n}\n\n/**\n * @internal\n * If you try to turn a Guid into a Buffer in .NET, the bytes of the first three groups get\n * flipped within the group, but the last two groups don't get flipped, so we end up with a\n * different byte order. This is the order of bytes needed to make Service Bus recognize the token.\n *\n * @param lockToken The lock token whose bytes need to be reorded.\n * @returns Buffer - Buffer representing reordered bytes.\n */\nexport function reorderLockToken(lockTokenBytes: Buffer): Buffer {\n  if (!lockTokenBytes || !Buffer.isBuffer(lockTokenBytes)) {\n    return lockTokenBytes;\n  }\n\n  return Buffer.from([\n    lockTokenBytes[3],\n    lockTokenBytes[2],\n    lockTokenBytes[1],\n    lockTokenBytes[0],\n\n    lockTokenBytes[5],\n    lockTokenBytes[4],\n\n    lockTokenBytes[7],\n    lockTokenBytes[6],\n\n    lockTokenBytes[8],\n    lockTokenBytes[9],\n\n    lockTokenBytes[10],\n    lockTokenBytes[11],\n    lockTokenBytes[12],\n    lockTokenBytes[13],\n    lockTokenBytes[14],\n    lockTokenBytes[15]\n  ]);\n}\n\n/**\n * @internal\n * Provides the time in milliseconds after which the lock renewal should occur.\n * @param lockedUntilUtc - The time until which the message is locked.\n */\nexport function calculateRenewAfterDuration(lockedUntilUtc: Date): number {\n  const now = Date.now();\n  const lockedUntil = lockedUntilUtc.getTime();\n  const remainingTime = lockedUntil - now;\n  log.utils(\"Locked until utc  : %d\", lockedUntil);\n  log.utils(\"Current time is   : %d\", now);\n  log.utils(\"Remaining time is : %d\", remainingTime);\n  if (remainingTime < 1000) {\n    return 0;\n  }\n  const buffer = Math.min(remainingTime / 2, 10000); // 10 seconds\n  const renewAfter = remainingTime - buffer;\n  log.utils(\"Renew after       : %d\", renewAfter);\n  return renewAfter;\n}\n\n/**\n * @internal\n * Converts the .net ticks to a JS Date object.\n *\n * - The epoch for the DateTimeOffset type is `0000-01-01`, while the epoch for JS Dates is\n * `1970-01-01`.\n * - The DateTimeOffset ticks value for the date `1970-01-01` is `621355968000000000`.\n *   - Hence, to convert it to the JS epoch; we `subtract` the delta from the given value.\n * - Ticks in DateTimeOffset is `1/10000000` second, while ticks in JS Date is `1/1000` second.\n *   - Thus, we `divide` the value by `10000` to convert it to JS Date ticks.\n *\n * @param buf Input as a Buffer\n * @returns Date The JS Date object.\n */\nexport function convertTicksToDate(buf: number[]): Date {\n  const epochMicroDiff: number = 621355968000000000;\n  const longValue: Long = Long.fromBytesBE(buf);\n  const timeInMS = longValue\n    .sub(epochMicroDiff)\n    .div(10000)\n    .toNumber();\n  const result = new Date(timeInMS);\n  log.utils(\"The converted date is: %s\", result.toString());\n  return result;\n}\n\n/**\n * @internal\n * Returns the number of logical processors in the system.\n */\nexport function getProcessorCount(): number {\n  if (isNode) {\n    const os = require(\"os\");\n    return os.cpus().length;\n  } else {\n    return navigator.hardwareConcurrency || 1;\n  }\n}\n\n/**\n * @internal\n * Converts any given input to a Buffer.\n * @param input The input that needs to be converted to a Buffer.\n */\nexport function toBuffer(input: any): Buffer {\n  let result: any;\n  log.utils(\n    \"[utils.toBuffer] The given message body that needs to be converted to buffer is: \",\n    input\n  );\n  if (isBuffer(input)) {\n    result = input;\n  } else {\n    // string, undefined, null, boolean, array, object, number should end up here\n    // coercing undefined to null as that will ensure that null value will be given to the\n    // customer on receive.\n    if (input === undefined) input = null;\n    try {\n      const inputStr = JSON.stringify(input);\n      result = Buffer.from(inputStr, \"utf8\");\n    } catch (err) {\n      const msg =\n        `An error occurred while executing JSON.stringify() on the given input ` +\n        input +\n        `${err instanceof Error ? err.stack : JSON.stringify(err)}`;\n      log.error(\"[utils.toBuffer] \" + msg);\n      throw err instanceof Error ? err : new Error(msg);\n    }\n  }\n  log.utils(\"[utils.toBuffer] The converted buffer is: %O.\", result);\n  return result;\n}\n\n/**\n * @ignore\n * Helper utility to retrieve `string` value from given string,\n * or throws error if undefined.\n * @param value\n */\nexport function getString(value: any, nameOfProperty: string): string {\n  const result = getStringOrUndefined(value);\n  if (result == undefined) {\n    throw new Error(\n      `\"${nameOfProperty}\" received from service expected to be a string value and not undefined.`\n    );\n  }\n  return result;\n}\n\n/**\n * @ignore\n * Helper utility to retrieve `string` value from given input,\n * or undefined if not passed in.\n * @param value\n */\nexport function getStringOrUndefined(value: any): string | undefined {\n  if (value == undefined) {\n    return undefined;\n  }\n  return value.toString();\n}\n\n/**\n * @ignore\n * Helper utility to retrieve `integer` value from given string,\n * or throws error if undefined.\n * @param value\n */\nexport function getInteger(value: any, nameOfProperty: string): number {\n  const result = getIntegerOrUndefined(value);\n  if (result == undefined) {\n    throw new Error(\n      `\"${nameOfProperty}\" received from service expected to be a number value and not undefined.`\n    );\n  }\n  return result;\n}\n\n/**\n * @ignore\n * Helper utility to retrieve `integer` value from given string,\n * or undefined if not passed in.\n * @param value\n */\nexport function getIntegerOrUndefined(value: any): number | undefined {\n  if (value == undefined) {\n    return undefined;\n  }\n  const result = parseInt(value.toString());\n  return result == NaN ? undefined : result;\n}\n\n/**\n * @ignore\n * Helper utility to retrieve `boolean` value from given string,\n * or throws error if undefined.\n * @param value\n */\nexport function getBoolean(value: any, nameOfProperty: string): boolean {\n  const result = getBooleanOrUndefined(value);\n  if (result == undefined) {\n    throw new Error(\n      `\"${nameOfProperty}\" received from service expected to be a boolean value and not undefined.`\n    );\n  }\n  return result;\n}\n\n/**\n * @ignore\n * Helper utility to retrieve `boolean` value from given string,\n * or undefined if not passed in.\n * @param value\n */\nexport function getBooleanOrUndefined(value: any): boolean | undefined {\n  if (value == undefined) {\n    return undefined;\n  }\n  return (\n    value\n      .toString()\n      .trim()\n      .toLowerCase() === \"true\"\n  );\n}\n\n/**\n * @ignore\n * Returns `true` if given input is a JSON like object.\n * @param value\n */\nexport function isJSONLikeObject(value: any): boolean {\n  return typeof value === \"object\" && !(value instanceof Number) && !(value instanceof String);\n}\n\n/**\n * @ignore\n * Helper utility to retrieve message count details from given input,\n * or undefined if not passed in.\n * @param value\n */\nexport function getCountDetailsOrUndefined(value: any): MessageCountDetails | undefined {\n  if (value == undefined) {\n    return undefined;\n  }\n  return {\n    activeMessageCount: parseInt(value[\"d2p1:ActiveMessageCount\"]) || 0,\n    deadLetterMessageCount: parseInt(value[\"d2p1:DeadLetterMessageCount\"]) || 0,\n    scheduledMessageCount: parseInt(value[\"d2p1:ScheduledMessageCount\"]) || 0,\n    transferMessageCount: parseInt(value[\"d2p1:TransferMessageCount\"]) || 0,\n    transferDeadLetterMessageCount: parseInt(value[\"d2p1:TransferDeadLetterMessageCount\"]) || 0\n  };\n}\n\n/**\n * Represents type of message count details in ATOM based management operations.\n */\nexport type MessageCountDetails = {\n  activeMessageCount: number;\n  deadLetterMessageCount: number;\n  scheduledMessageCount: number;\n  transferMessageCount: number;\n  transferDeadLetterMessageCount: number;\n};\n\n/**\n * Represents type of `AuthorizationRule` in ATOM based management operations.\n */\nexport type AuthorizationRule = {\n  claimType: string;\n  claimValue: string;\n  rights: { accessRights?: string[] };\n  keyName: string;\n  primaryKey?: string;\n  secondaryKey?: string;\n};\n\n/**\n * @ignore\n * Helper utility to retrieve array of `AuthorizationRule` from given input,\n * or undefined if not passed in.\n * @param value\n */\nexport function getAuthorizationRulesOrUndefined(value: any): AuthorizationRule[] | undefined {\n  const authorizationRules: AuthorizationRule[] = [];\n\n  // Ignore special case as Service Bus treats \"\" as a valid value for authorization rules\n  if (typeof value === \"string\" && value.trim() === \"\") {\n    return undefined;\n  }\n\n  if (value == undefined) {\n    return undefined;\n  }\n\n  const rawAuthorizationRules = value.AuthorizationRule;\n  if (Array.isArray(rawAuthorizationRules)) {\n    for (let i = 0; i < rawAuthorizationRules.length; i++) {\n      authorizationRules.push(buildAuthorizationRule(rawAuthorizationRules[i]));\n    }\n  } else {\n    authorizationRules.push(buildAuthorizationRule(rawAuthorizationRules));\n  }\n  return authorizationRules;\n}\n\n/**\n * Helper utility to build an instance of parsed authorization rule as `AuthorizationRule` from given input.\n * @param value\n */\nfunction buildAuthorizationRule(value: any): AuthorizationRule {\n  let accessRights;\n  if (value[\"Rights\"] != undefined) {\n    accessRights = value[\"Rights\"][\"AccessRights\"];\n  }\n\n  const authorizationRule: AuthorizationRule = {\n    claimType: value[\"ClaimType\"],\n    claimValue: value[\"ClaimValue\"],\n    rights: {\n      accessRights: accessRights\n    },\n    keyName: value[\"KeyName\"],\n    primaryKey: value[\"PrimaryKey\"],\n    secondaryKey: value[\"SecondaryKey\"]\n  };\n\n  if (\n    authorizationRule.rights.accessRights &&\n    !Array.isArray(authorizationRule.rights.accessRights)\n  ) {\n    authorizationRule.rights.accessRights = [authorizationRule.rights.accessRights];\n  }\n  return authorizationRule;\n}\n\n/**\n * @ignore\n * Helper utility to extract output containing array of `RawAuthorizationRule` instances from given input,\n * or undefined if not passed in.\n * @param value\n */\nexport function getRawAuthorizationRules(authorizationRules: AuthorizationRule[] | undefined): any {\n  if (authorizationRules == undefined) {\n    return undefined;\n  }\n\n  if (!Array.isArray(authorizationRules)) {\n    throw new TypeError(\n      `authorizationRules must be an array of AuthorizationRule objects or undefined, but received ${JSON.stringify(\n        authorizationRules,\n        undefined,\n        2\n      )}`\n    );\n  }\n\n  const rawAuthorizationRules: any[] = [];\n  for (let i = 0; i < authorizationRules.length; i++) {\n    rawAuthorizationRules.push(buildRawAuthorizationRule(authorizationRules[i]));\n  }\n  return { AuthorizationRule: rawAuthorizationRules };\n}\n\n/**\n * Helper utility to build an instance of raw authorization rule as RawAuthorizationRule from given `AuthorizationRule` input.\n * @param authorizationRule parsed Authorization Rule instance\n */\nfunction buildRawAuthorizationRule(authorizationRule: AuthorizationRule): any {\n  if (!isJSONLikeObject(authorizationRule) || authorizationRule === null) {\n    throw new TypeError(\n      `Expected authorizationRule input to be a JS object value, but received ${JSON.stringify(\n        authorizationRule,\n        undefined,\n        2\n      )}`\n    );\n  }\n\n  const rawAuthorizationRule: any = {\n    ClaimType: authorizationRule.claimType,\n    ClaimValue: authorizationRule.claimValue,\n    Rights: {\n      AccessRights: authorizationRule.rights.accessRights\n    },\n    KeyName: authorizationRule.keyName,\n    PrimaryKey: authorizationRule.primaryKey,\n    SecondaryKey: authorizationRule.secondaryKey\n  };\n  rawAuthorizationRule[Constants.XML_METADATA_MARKER] = {\n    \"p5:type\": \"SharedAccessAuthorizationRule\",\n    \"xmlns:p5\": \"http://www.w3.org/2001/XMLSchema-instance\"\n  };\n  return rawAuthorizationRule;\n}\n\n/**\n * @ignore\n * Helper utility to check if given string is an absolute URL\n * @param url\n */\nexport function isAbsoluteUrl(url: string) {\n  const _url = url.toLowerCase();\n  return _url.startsWith(\"sb://\") || _url.startsWith(\"http://\") || _url.startsWith(\"https://\");\n}\n\n/**\n * Possible values for `status` of the Service Bus messaging entities.\n */\nexport type EntityStatus =\n  | \"Active\"\n  | \"Creating\"\n  | \"Deleting\"\n  | \"ReceiveDisabled\"\n  | \"SendDisabled\"\n  | \"Disabled\"\n  | \"Renaming\"\n  | \"Restoring\"\n  | \"Unknown\";\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport * as log from \"../log\";\nimport Long from \"long\";\nimport { ClientType } from \"../client\";\nimport { ConnectionContext } from \"../connectionContext\";\n\n/**\n * @internal\n * Logs and throws Error if the current AMQP connection is closed.\n * @param context The ConnectionContext associated with the current AMQP connection.\n */\nexport function throwErrorIfConnectionClosed(context: ConnectionContext): void {\n  if (context && context.wasConnectionCloseCalled) {\n    const errorMessage = \"The underlying AMQP connection is closed.\";\n    const error = new Error(errorMessage);\n    log.error(`[${context.connectionId}] %O`, error);\n    throw error;\n  }\n}\n\n/**\n * @internal\n * Logs and throws error if the underlying AMQP connection or if the client is closed\n * @param context The ConnectionContext associated with the current AMQP connection.\n * @param entityPath Entity Path of the client which denotes the name of the Queue/Topic/Subscription\n * @param isClientClosed Boolean denoting if the client is closed or not\n */\nexport function throwErrorIfClientOrConnectionClosed(\n  context: ConnectionContext,\n  entityPath: string,\n  isClientClosed: boolean\n): void {\n  throwErrorIfConnectionClosed(context);\n  if (context && isClientClosed) {\n    const errorMessage = getClientClosedErrorMsg(entityPath);\n    const error = new Error(errorMessage);\n    log.error(`[${context.connectionId}] %O`, error);\n    throw error;\n  }\n}\n\n/**\n * @internal\n * Gets the error message when an open sender exists, but a new one is asked for on the same client\n * @param clientType 'QueueClient' or 'TopicClient'\n * @param entityPath  Value of the `entityPath` property on the client which denotes its name\n */\nexport function getOpenSenderErrorMsg(clientType: string, entityPath: string): string {\n  return (\n    `An open sender already exists on the ${clientType} for \"${entityPath}\". ` +\n    `Please close it and try again or use a new ${clientType} instance.`\n  );\n}\n\n/**\n * @internal\n * Gets the error message when an open receiver exists, but a new one is asked for on the same client\n * @param clientType 'QueueClient' or 'SubscriptionClient'\n * @param entityPath  Value of the `entityPath` property on the client which denotes its name\n * @param sessionId If using session receiver, then the id of the session\n */\nexport function getOpenReceiverErrorMsg(\n  clientType: ClientType,\n  entityPath: string,\n  sessionId?: string\n): string {\n  if (!sessionId) {\n    return (\n      `An open receiver already exists on the ${clientType} for \"${entityPath}\". ` +\n      `Please close it and try again or use a new ${clientType} instance.`\n    );\n  }\n  return (\n    `An open receiver already exists for the session \"${sessionId}\" on the ${clientType} for ` +\n    `\"${entityPath}\". Please close it and try again or use a new ${clientType} instance.`\n  );\n}\n\n/**\n * @internal\n * Gets the error message when a client is used when its already closed\n * @param entityPath Value of the `entityPath` property on the client which denotes its name\n */\nexport function getClientClosedErrorMsg(entityPath: string): string {\n  return (\n    `The client for \"${entityPath}\" has been closed and can no longer be used. ` +\n    `Please create a new client using an instance of ServiceBusClient.`\n  );\n}\n\n/**\n * @internal\n * Gets the error message when a sender is used when its already closed\n * @param entityPath Value of the `entityPath` property on the client which denotes its name\n * @param clientType One of \"QueueClient\", \"TopicClient\" or \"SubscriptionClient\", used for logging\n * @param isClientClosed Denotes if the close() was called on the client that created the sender\n */\nexport function getSenderClosedErrorMsg(\n  entityPath: string,\n  clientType: ClientType,\n  isClientClosed: boolean\n): string {\n  if (isClientClosed) {\n    return (\n      `The client for \"${entityPath}\" has been closed. The sender created by it can no longer be used. ` +\n      `Please create a new client using an instance of ServiceBusClient.`\n    );\n  }\n  return (\n    `The sender for \"${entityPath}\" has been closed and can no longer be used. ` +\n    `Please create a new sender using the \"createSender\" function on the ${clientType}.`\n  );\n}\n\n/**\n * @internal\n * Gets the error message when a receiver is used when its already closed\n * @param entityPath Value of the `entityPath` property on the client which denotes its name\n * @param clientType One of \"QueueClient\", \"TopicClient\" or \"SubscriptionClient\", used for logging\n * @param isClientClosed Denotes if the close() was called on the client that created the sender\n * @param sessionId If using session receiver, then the id of the session\n */\nexport function getReceiverClosedErrorMsg(\n  entityPath: string,\n  clientType: ClientType,\n  isClientClosed: boolean,\n  sessionId?: string\n): string {\n  if (isClientClosed) {\n    return (\n      `The client for \"${entityPath}\" has been closed. The receiver created by it can no longer be used. ` +\n      `Please create a new client using an instance of ServiceBusClient.`\n    );\n  }\n  if (sessionId == undefined) {\n    return (\n      `The receiver for \"${entityPath}\" has been closed and can no longer be used. ` +\n      `Please create a new receiver using the \"createReceiver\" function on the ${clientType}.`\n    );\n  }\n  return (\n    `The receiver for session \"${sessionId}\" in \"${entityPath}\" has been closed and can no ` +\n    `longer be used. Please create a new receiver using the \"createReceiver\" function.`\n  );\n}\n\n/**\n * @internal\n * @param entityPath Value of the `entityPath` property on the client which denotes its name\n * @param sessionId If using session receiver, then the id of the session\n */\nexport function getAlreadyReceivingErrorMsg(entityPath: string, sessionId?: string): string {\n  if (sessionId == undefined) {\n    return `The receiver for \"${entityPath}\" is already receiving messages.`;\n  }\n  return `The receiver for session \"${sessionId}\" for \"${entityPath}\" is already receiving messages.`;\n}\n\n/**\n * @internal\n * Logs and Throws TypeError if given parameter is undefined or null\n * @param connectionId Id of the underlying AMQP connection used for logging\n * @param parameterName Name of the parameter to check\n * @param parameterValue Value of the parameter to check\n */\nexport function throwTypeErrorIfParameterMissing(\n  connectionId: string,\n  parameterName: string,\n  parameterValue: any\n): void {\n  if (parameterValue === undefined || parameterValue === null) {\n    const error = new TypeError(`Missing parameter \"${parameterName}\"`);\n    log.error(`[${connectionId}] %O`, error);\n    throw error;\n  }\n}\n\n/**\n * @internal\n * Logs and Throws TypeError if given parameter is not of expected type\n * @param connectionId Id of the underlying AMQP connection used for logging\n * @param parameterName Name of the parameter to type check\n * @param parameterValue Value of the parameter to type check\n * @param expectedType Expected type of the parameter\n */\nexport function throwTypeErrorIfParameterTypeMismatch(\n  connectionId: string,\n  parameterName: string,\n  parameterValue: any,\n  expectedType: string\n): void {\n  if (typeof parameterValue !== expectedType) {\n    const error = new TypeError(\n      `The parameter \"${parameterName}\" should be of type \"${expectedType}\"`\n    );\n    log.error(`[${connectionId}] %O`, error);\n    throw error;\n  }\n}\n\n/**\n * @internal\n * Logs and Throws TypeError if given parameter is not of type `Long`\n * @param connectionId Id of the underlying AMQP connection used for logging\n * @param parameterName Name of the parameter to type check\n * @param parameterValue Value of the parameter to type check\n */\nexport function throwTypeErrorIfParameterNotLong(\n  connectionId: string,\n  parameterName: string,\n  parameterValue: any\n): TypeError | undefined {\n  if (Long.isLong(parameterValue)) {\n    return;\n  }\n  const error = new TypeError(`The parameter \"${parameterName}\" should be of type \"Long\"`);\n  log.error(`[${connectionId}] %O`, error);\n  throw error;\n}\n\n/**\n * @internal\n * Logs and Throws TypeError if given parameter is not an array of type `Long`\n * @param connectionId Id of the underlying AMQP connection used for logging\n * @param parameterName Name of the parameter to type check\n * @param parameterValue Value of the parameter to type check\n */\nexport function throwTypeErrorIfParameterNotLongArray(\n  connectionId: string,\n  parameterName: string,\n  parameterValue: any[]\n): TypeError | undefined {\n  if (parameterValue.every((item) => Long.isLong(item))) {\n    return;\n  }\n  const error = new TypeError(`The parameter \"${parameterName}\" should be an array of type \"Long\"`);\n  log.error(`[${connectionId}] %O`, error);\n  throw error;\n}\n\n/**\n * @internal\n * Logs and Throws TypeError if given parameter is an empty string\n * @param connectionId Id of the underlying AMQP connection used for logging\n * @param parameterName Name of the parameter to type check\n * @param parameterValue Value of the parameter to type check\n */\nexport function throwTypeErrorIfParameterIsEmptyString(\n  connectionId: string,\n  parameterName: string,\n  parameterValue: string\n): TypeError | undefined {\n  if (parameterValue !== \"\") {\n    return;\n  }\n  const error = new TypeError(`Empty string not allowed in parameter \"${parameterName}\"`);\n  log.error(`[${connectionId}] %O`, error);\n  throw error;\n}\n\n/**\n * @internal\n * Gets error message for when an operation is not supported in ReceiveAndDelete mode\n * @param failedToDo A string to add to the placeholder in the error message. Denotes the action\n * that is not supported in ReceiveAndDelete mode\n */\nexport function getErrorMessageNotSupportedInReceiveAndDeleteMode(failedToDo: string): string {\n  return `Failed to ${failedToDo} as the operation is only supported in 'PeekLock' recieve mode.`;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport Long from \"long\";\nimport {\n  Delivery,\n  uuid_to_string,\n  AmqpError,\n  MessageAnnotations,\n  DeliveryAnnotations\n} from \"rhea-promise\";\nimport { Constants, AmqpMessage, translate, ErrorNameConditionMapper } from \"@azure/amqp-common\";\nimport * as log from \"./log\";\nimport { ClientEntityContext } from \"./clientEntityContext\";\nimport { reorderLockToken } from \"../src/util/utils\";\nimport { MessageReceiver } from \"../src/core/messageReceiver\";\nimport { MessageSession } from \"../src/session/messageSession\";\nimport { getErrorMessageNotSupportedInReceiveAndDeleteMode } from \"./util/errors\";\nimport { Buffer } from \"buffer\";\n\n/**\n * The mode in which messages should be received. The 2 modes are `peekLock` and `receiveAndDelete`.\n */\nexport enum ReceiveMode {\n  /**\n   * Once a message is received in this mode, the receiver has a lock on the message for a\n   * particular duration. If the message is not settled by this time, it lands back on Service Bus\n   * to be fetched by the next receive operation.\n   * @type {Number}\n   */\n  peekLock = 1,\n\n  /**\n   * Messages received in this mode get automatically removed from Service Bus.\n   * @type {Number}\n   */\n  receiveAndDelete = 2\n}\n\n/**\n * @internal\n */\nexport enum DispositionType {\n  complete = \"complete\",\n  deadletter = \"deadletter\",\n  abandon = \"abandon\",\n  defer = \"defer\"\n}\n\n/**\n * @internal\n */\nexport enum DispositionStatus {\n  completed = \"completed\",\n  defered = \"defered\",\n  suspended = \"suspended\",\n  abandoned = \"abandoned\",\n  renewed = \"renewed\"\n}\n\n/**\n * @internal\n * Describes the delivery annotations for Service Bus.\n * @interface\n */\nexport interface ServiceBusDeliveryAnnotations extends DeliveryAnnotations {\n  /**\n   * @property {string} [last_enqueued_offset] The offset of the last event.\n   */\n  last_enqueued_offset?: string;\n  /**\n   * @property {number} [last_enqueued_sequence_number] The sequence number of the last event.\n   */\n  last_enqueued_sequence_number?: number;\n  /**\n   * @property {number} [last_enqueued_time_utc] The enqueued time of the last event.\n   */\n  last_enqueued_time_utc?: number;\n  /**\n   * @property {number} [runtime_info_retrieval_time_utc] The retrieval time of the last event.\n   */\n  runtime_info_retrieval_time_utc?: number;\n  /**\n   * @property {string} Any unknown delivery annotations.\n   */\n  [x: string]: any;\n}\n\n/**\n * @internal\n * Describes the message annotations for Service Bus.\n * @interface ServiceBusMessageAnnotations\n */\nexport interface ServiceBusMessageAnnotations extends MessageAnnotations {\n  /**\n   * @property {string | null} [x-opt-partition-key] Annotation for the partition key set for the event.\n   */\n  \"x-opt-partition-key\"?: string | null;\n  /**\n   * @property {number} [x-opt-sequence-number] Annontation for the sequence number of the event.\n   */\n  \"x-opt-sequence-number\"?: number;\n  /**\n   * @property {number} [x-opt-enqueued-time] Annotation for the enqueued time of the event.\n   */\n  \"x-opt-enqueued-time\"?: number;\n  /**\n   * @property {string} [x-opt-offset] Annotation for the offset of the event.\n   */\n  \"x-opt-offset\"?: string;\n  /**\n   * @property {string} [x-opt-locked-until] Annotation for the message being locked until.\n   */\n  \"x-opt-locked-until\"?: Date | number;\n}\n\n/**\n * Describes the reason and error description for dead lettering a message using the `deadLetter()`\n * method on the message received from Service Bus.\n * @interface DeadLetterOptions\n */\nexport interface DeadLetterOptions {\n  /**\n   * @property The reason for deadlettering the message.\n   */\n  deadletterReason: string;\n  /**\n   * @property The error description for deadlettering the message.\n   */\n  deadLetterErrorDescription: string;\n}\n\n/**\n * Describes the message to be sent to Service Bus.\n * @interface SendableMessageInfo.\n */\nexport interface SendableMessageInfo {\n  /**\n   * @property The message body that needs to be sent or is received.\n   */\n  body: any;\n  /**\n   * @property The message identifier is an\n   * application-defined value that uniquely identifies the message and its payload.\n   *\n   * Note: Numbers that are not whole integers are not allowed.\n   */\n  messageId?: string | number | Buffer;\n  /**\n   * @property The content type of the message. Optionally describes\n   * the payload of the message, with a descriptor following the format of RFC2045, Section 5, for\n   * example \"application/json\".\n   */\n  contentType?: string;\n  /**\n   * @property The correlation identifier that allows an\n   * application to specify a context for the message for the purposes of correlation, for example\n   * reflecting the MessageId of a message that is being replied to.\n   * See {@link https://docs.microsoft.com/azure/service-bus-messaging/service-bus-messages-payloads?#message-routing-and-correlation Message Routing and Correlation}.\n   */\n  correlationId?: string | number | Buffer;\n  /**\n   * @property The partition key for sending a message to a partitioned entity.\n   * Maximum length is 128 characters. For {@link https://docs.microsoft.com/azure/service-bus-messaging/service-bus-partitioning partitioned entities},\n   * setting this value enables assigning related messages to the same internal partition,\n   * so that submission sequence order is correctly recorded. The partition is chosen by a hash\n   * function over this value and cannot be chosen directly.\n   * - For session-aware entities, the `sessionId` property overrides this value.\n   * - For non partitioned entities, partition key will be ignored\n   *\n   */\n  partitionKey?: string;\n  /**\n   * @property The partition key for sending a message into an entity\n   * via a partitioned transfer queue. Maximum length is 128 characters. If a message is sent via a\n   * transfer queue in the scope of a transaction, this value selects the transfer queue partition:\n   * This is functionally equivalent to `partitionKey` property and ensures that messages are kept\n   * together and in order as they are transferred.\n   * See {@link https://docs.microsoft.com/azure/service-bus-messaging/service-bus-transactions#transfers-and-send-via Transfers and Send Via}.\n   */\n  viaPartitionKey?: string;\n  /**\n   * @property The session identifier for a session-aware entity. Maximum\n   * length is 128 characters. For session-aware entities, this application-defined value specifies\n   * the session affiliation of the message. Messages with the same session identifier are subject\n   * to summary locking and enable exact in-order processing and demultiplexing. For\n   * session-unaware entities, this value is ignored.\n   * {@link https://docs.microsoft.com/azure/service-bus-messaging/message-sessions Message Sessions}.\n   */\n  sessionId?: string;\n  /**\n   * @property The session identifier augmenting the `replyTo` address.\n   * Maximum length is 128 characters. This value augments the ReplyTo information and specifies\n   * which SessionId should be set for the reply when sent to the reply entity.\n   * See {@link https://docs.microsoft.com/azure/service-bus-messaging/service-bus-messages-payloads?#message-routing-and-correlation Message Routing and Correlation}.\n   */\n  replyToSessionId?: string;\n  /**\n   * @property The message’s time to live value. This value is the relative\n   * duration after which the message expires, starting from the instant the message has been\n   * accepted and stored by the broker, as captured in `enqueuedTimeUtc`. When not set explicitly,\n   * the assumed value is the DefaultTimeToLive for the respective queue or topic. A message-level\n   * `timeToLive` value cannot be longer than the entity's DefaultTimeToLive setting and it is\n   * silently adjusted if it does. See\n   * {@link https://docs.microsoft.com/azure/service-bus-messaging/message-expiration Expiration}.\n   */\n  timeToLive?: number;\n  /**\n   * @property The application specific label. This property enables the\n   * application to indicate the purpose of the message to the receiver in a standardized. fashion,\n   * similar to an email subject line. The mapped AMQP property is \"subject\".\n   */\n  label?: string;\n  /**\n   * @property The \"to\" address. This property is reserved for future use in routing\n   * scenarios and presently ignored by the broker itself. Applications can use this value in\n   * rule-driven {@link https://docs.microsoft.com/azure/service-bus-messaging/service-bus-auto-forwarding auto-forward chaining}\n   * scenarios to indicate the intended logical destination of the message.\n   */\n  to?: string;\n  /**\n   * @property The address of an entity to send replies to. This optional and\n   * application-defined value is a standard way to express a reply path to the receiver of the\n   * message. When a sender expects a reply, it sets the value to the absolute or relative path of\n   * the queue or topic it expects the reply to be sent to. See\n   * {@link https://docs.microsoft.com/azure/service-bus-messaging/service-bus-messages-payloads?#message-routing-and-correlation Message Routing and Correlation}.\n   */\n  replyTo?: string;\n  /**\n   * @property The date and time in UTC at which the message will\n   * be enqueued. This property returns the time in UTC; when setting the property, the\n   * supplied DateTime value must also be in UTC. This value is for delayed message sending.\n   * It is utilized to delay messages sending to a specific time in the future. Message enqueuing\n   * time does not mean that the message will be sent at the same time. It will get enqueued,\n   * but the actual sending time depends on the queue's workload and its state.\n   */\n  scheduledEnqueueTimeUtc?: Date;\n  /**\n   * @property The application specific properties which can be\n   * used for custom message metadata.\n   */\n  userProperties?: { [key: string]: any };\n}\n\n/**\n * @internal\n * Gets the error message for when a property on given message is not of expected type\n */\nexport function getMessagePropertyTypeMismatchError(msg: SendableMessageInfo): Error | undefined {\n  if (msg.contentType != null && typeof msg.contentType !== \"string\") {\n    return new TypeError(\"The property 'contentType' on the message must be of type 'string'\");\n  }\n\n  if (msg.label != null && typeof msg.label !== \"string\") {\n    return new TypeError(\"The property 'label' on the message must be of type 'string'\");\n  }\n\n  if (msg.to != null && typeof msg.to !== \"string\") {\n    return new TypeError(\"The property 'to' on the message must be of type 'string'\");\n  }\n\n  if (msg.replyTo != null && typeof msg.replyTo !== \"string\") {\n    return new TypeError(\"The property 'replyTo' on the message must be of type 'string'\");\n  }\n\n  if (msg.replyToSessionId != null && typeof msg.replyToSessionId !== \"string\") {\n    return new TypeError(\"The property 'replyToSessionId' on the message must be of type 'string'\");\n  }\n\n  if (msg.timeToLive != null && typeof msg.timeToLive !== \"number\") {\n    return new TypeError(\"The property 'timeToLive' on the message must be of type 'number'\");\n  }\n\n  if (msg.sessionId != null && typeof msg.sessionId !== \"string\") {\n    return new TypeError(\"The property 'sessionId' on the message must be of type 'string'\");\n  }\n\n  if (\n    msg.messageId != null &&\n    typeof msg.messageId !== \"string\" &&\n    typeof msg.messageId !== \"number\" &&\n    !Buffer.isBuffer(msg.messageId)\n  ) {\n    return new TypeError(\n      \"The property 'messageId' on the message must be of type string, number or Buffer\"\n    );\n  }\n\n  if (\n    msg.correlationId != null &&\n    typeof msg.correlationId !== \"string\" &&\n    typeof msg.correlationId !== \"number\" &&\n    !Buffer.isBuffer(msg.correlationId)\n  ) {\n    return new TypeError(\n      \"The property 'correlationId' on the message must be of type string, number or Buffer\"\n    );\n  }\n  return;\n}\n\n/**\n * @internal\n * Converts given SendableMessageInfo to AmqpMessage\n */\nexport function toAmqpMessage(msg: SendableMessageInfo): AmqpMessage {\n  const amqpMsg: AmqpMessage = {\n    body: msg.body,\n    message_annotations: {}\n  };\n  if (msg.userProperties != null) {\n    amqpMsg.application_properties = msg.userProperties;\n  }\n  if (msg.contentType != null) {\n    amqpMsg.content_type = msg.contentType;\n  }\n  if (msg.sessionId != null) {\n    if (msg.sessionId.length > Constants.maxSessionIdLength) {\n      throw new Error(\n        \"Length of 'sessionId' property on the message cannot be greater than 128 characters.\"\n      );\n    }\n    amqpMsg.group_id = msg.sessionId;\n  }\n  if (msg.replyTo != null) {\n    amqpMsg.reply_to = msg.replyTo;\n  }\n  if (msg.to != null) {\n    amqpMsg.to = msg.to;\n  }\n  if (msg.label != null) {\n    amqpMsg.subject = msg.label;\n  }\n  if (msg.messageId != null) {\n    if (typeof msg.messageId === \"string\" && msg.messageId.length > Constants.maxMessageIdLength) {\n      throw new Error(\n        \"Length of 'messageId' property on the message cannot be greater than 128 characters.\"\n      );\n    }\n    amqpMsg.message_id = msg.messageId;\n  }\n  if (msg.correlationId != null) {\n    amqpMsg.correlation_id = msg.correlationId;\n  }\n  if (msg.replyToSessionId != null) {\n    amqpMsg.reply_to_group_id = msg.replyToSessionId;\n  }\n  if (msg.timeToLive != null && msg.timeToLive !== Constants.maxDurationValue) {\n    amqpMsg.ttl = msg.timeToLive;\n    amqpMsg.creation_time = Date.now();\n    if (Constants.maxAbsoluteExpiryTime - amqpMsg.creation_time > amqpMsg.ttl) {\n      amqpMsg.absolute_expiry_time = amqpMsg.creation_time + amqpMsg.ttl;\n    } else {\n      amqpMsg.absolute_expiry_time = Constants.maxAbsoluteExpiryTime;\n    }\n  }\n  if (msg.partitionKey != null) {\n    if (msg.partitionKey.length > Constants.maxPartitionKeyLength) {\n      throw new Error(\n        \"Length of 'partitionKey' property on the message cannot be greater than 128 characters.\"\n      );\n    }\n    amqpMsg.message_annotations![Constants.partitionKey] = msg.partitionKey;\n  }\n  if (msg.viaPartitionKey != null) {\n    if (msg.viaPartitionKey.length > Constants.maxPartitionKeyLength) {\n      throw new Error(\n        \"Length of 'viaPartitionKey' property on the message cannot be greater than 128 characters.\"\n      );\n    }\n    amqpMsg.message_annotations![Constants.viaPartitionKey] = msg.viaPartitionKey;\n  }\n  if (msg.scheduledEnqueueTimeUtc != null) {\n    amqpMsg.message_annotations![Constants.scheduledEnqueueTime] = msg.scheduledEnqueueTimeUtc;\n  }\n  log.message(\"SBMessage to AmqpMessage: %O\", amqpMsg);\n  return amqpMsg;\n}\n\n/**\n * Describes the message received from Service Bus during peek operations and so cannot be settled.\n * @class ReceivedSBMessage\n */\nexport interface ReceivedMessageInfo extends SendableMessageInfo {\n  /**\n   * @property The lock token is a reference to the lock that is being held by the broker in\n   * `ReceiveMode.PeekLock` mode. Locks are used internally settle messages as explained in the\n   * {@link https://docs.microsoft.com/azure/service-bus-messaging/message-transfers-locks-settlement product documentation in more detail}\n   * - Not applicable when the message is received in `ReceiveMode.receiveAndDelete`\n   * mode.\n   * @readonly\n   */\n  readonly lockToken?: string;\n  /**\n   * @property Number of deliveries that have been attempted for this message. The count is\n   * incremented when a message lock expires, or the message is explicitly abandoned using the\n   * `abandon()` method on the message.\n   * @readonly\n   */\n  readonly deliveryCount?: number;\n  /**\n   * @property The UTC instant at which the message has been accepted and stored in Service Bus.\n   * @readonly\n   */\n  readonly enqueuedTimeUtc?: Date;\n  /**\n   * @property The UTC instant at which the message is marked for removal and no longer available for\n   * retrieval from the entity due to expiration. This property is computed from 2 other properties\n   * on the message: `enqueuedTimeUtc` + `timeToLive`.\n   */\n  readonly expiresAtUtc?: Date;\n  /**\n   * @property The UTC instant until which the message is held locked in the queue/subscription.\n   * When the lock expires, the `deliveryCount` is incremented and the message is again available\n   * for retrieval.\n   * - Not applicable when the message is received in `ReceiveMode.receiveAndDelete`\n   * mode.\n   */\n  lockedUntilUtc?: Date;\n  /**\n   * @property The original sequence number of the message. For\n   * messages that have been auto-forwarded, this property reflects the sequence number that had\n   * first been assigned to the message at its original point of submission.\n   * @readonly\n   */\n  readonly enqueuedSequenceNumber?: number;\n  /**\n   * @property The unique number assigned to a message by Service Bus.\n   * The sequence number is a unique 64-bit integer assigned to a message as it is accepted\n   * and stored by the broker and functions as its true identifier. For partitioned entities,\n   * the topmost 16 bits reflect the partition identifier. Sequence numbers monotonically increase.\n   * They roll over to 0 when the 48-64 bit range is exhausted.\n   *\n   * **Max safe integer** that Javascript currently supports is `2^53 - 1`. The sequence number\n   * is an AMQP `Long` type which can be upto 64 bits long. To represent that we are using a\n   * library named {@link https://github.com/dcodeIO/long.js long.js}. We expect customers\n   * to use the **`Long`** type exported by this library.\n   * @readonly\n   */\n  readonly sequenceNumber?: Long;\n  /**\n   * @property {string} [deadLetterSource] The name of the queue or subscription that this message\n   * was enqueued on, before it was deadlettered. Only set in messages that have been dead-lettered\n   * and subsequently auto-forwarded from the dead-letter sub-queue to another entity. Indicates the\n   * entity in which the message was dead-lettered.\n   * @readonly\n   */\n  readonly deadLetterSource?: string;\n  /**\n   * @property {AmqpMessage} _amqpMessage The underlying raw amqp message.\n   * @readonly\n   */\n  readonly _amqpMessage: AmqpMessage;\n}\n\n/**\n * @ignore\n * Converts given AmqpMessage to ReceivedMessageInfo\n */\nexport function fromAmqpMessage(\n  msg: AmqpMessage,\n  delivery?: Delivery,\n  shouldReorderLockToken?: boolean\n): ReceivedMessageInfo {\n  if (!msg) {\n    msg = {\n      body: undefined\n    };\n  }\n  const sbmsg: SendableMessageInfo = {\n    body: msg.body\n  };\n\n  if (msg.application_properties != null) {\n    sbmsg.userProperties = msg.application_properties;\n  }\n  if (msg.content_type != null) {\n    sbmsg.contentType = msg.content_type;\n  }\n  if (msg.group_id != null) {\n    sbmsg.sessionId = msg.group_id;\n  }\n  if (msg.reply_to != null) {\n    sbmsg.replyTo = msg.reply_to;\n  }\n  if (msg.to != null) {\n    sbmsg.to = msg.to;\n  }\n  if (msg.ttl != null) {\n    sbmsg.timeToLive = msg.ttl;\n  }\n  if (msg.subject != null) {\n    sbmsg.label = msg.subject;\n  }\n  if (msg.message_id != null) {\n    sbmsg.messageId = msg.message_id;\n  }\n  if (msg.correlation_id != null) {\n    sbmsg.correlationId = msg.correlation_id;\n  }\n  if (msg.reply_to_group_id != null) {\n    sbmsg.replyToSessionId = msg.reply_to_group_id;\n  }\n\n  if (msg.message_annotations != null) {\n    if (msg.message_annotations[Constants.partitionKey] != null) {\n      sbmsg.partitionKey = msg.message_annotations[Constants.partitionKey];\n    }\n    if (msg.message_annotations[Constants.viaPartitionKey] != null) {\n      sbmsg.viaPartitionKey = msg.message_annotations[Constants.viaPartitionKey];\n    }\n    if (msg.message_annotations[Constants.scheduledEnqueueTime] != null) {\n      sbmsg.scheduledEnqueueTimeUtc = msg.message_annotations[Constants.scheduledEnqueueTime];\n    }\n  }\n\n  const props: any = {};\n  if (msg.message_annotations != null) {\n    if (msg.message_annotations[Constants.deadLetterSource] != null) {\n      props.deadLetterSource = msg.message_annotations[Constants.deadLetterSource];\n    }\n    if (msg.message_annotations[Constants.enqueueSequenceNumber] != null) {\n      props.enqueuedSequenceNumber = msg.message_annotations[Constants.enqueueSequenceNumber];\n    }\n    if (msg.message_annotations[Constants.sequenceNumber] != null) {\n      if (Buffer.isBuffer(msg.message_annotations[Constants.sequenceNumber])) {\n        props.sequenceNumber = Long.fromBytesBE(msg.message_annotations[Constants.sequenceNumber]);\n      } else {\n        props.sequenceNumber = Long.fromNumber(msg.message_annotations[Constants.sequenceNumber]);\n      }\n    }\n    if (msg.message_annotations[Constants.enqueuedTime] != null) {\n      props.enqueuedTimeUtc = new Date(msg.message_annotations[Constants.enqueuedTime] as number);\n    }\n    if (msg.message_annotations[Constants.lockedUntil] != null) {\n      props.lockedUntilUtc = new Date(msg.message_annotations[Constants.lockedUntil] as number);\n    }\n  }\n  if (msg.ttl != null && msg.ttl >= Constants.maxDurationValue - props.enqueuedTimeUtc.getTime()) {\n    props.expiresAtUtc = new Date(Constants.maxDurationValue);\n  } else {\n    props.expiresAtUtc = new Date(props.enqueuedTimeUtc.getTime() + msg.ttl!);\n  }\n\n  const rcvdsbmsg: ReceivedMessageInfo = {\n    _amqpMessage: msg,\n    _delivery: delivery,\n    deliveryCount: msg.delivery_count,\n    lockToken:\n      delivery && delivery.tag && delivery.tag.length !== 0\n        ? uuid_to_string(\n            shouldReorderLockToken === true\n              ? reorderLockToken(\n                  typeof delivery.tag === \"string\" ? Buffer.from(delivery.tag) : delivery.tag\n                )\n              : typeof delivery.tag === \"string\"\n              ? Buffer.from(delivery.tag)\n              : delivery.tag\n          )\n        : undefined,\n    ...sbmsg,\n    ...props\n  };\n\n  log.message(\"AmqpMessage to ReceivedSBMessage: %O\", rcvdsbmsg);\n  return rcvdsbmsg;\n}\n\n/**\n * Describes the message received from Service Bus.\n * @interface ReceivedMessage\n */\ninterface ReceivedMessage extends ReceivedMessageInfo {\n  /**\n   * Removes the message from Service Bus.\n   * @returns Promise<void>.\n   */\n  complete(): Promise<void>;\n\n  /**\n   * The lock held on the message by the receiver is let go, making the message available again in\n   * Service Bus for another receive operation.\n   * @param propertiesToModify The properties of the message to modify while abandoning the message.\n   *\n   * @return Promise<void>.\n   */\n  abandon(propertiesToModify?: { [key: string]: any }): Promise<void>;\n\n  /**\n   * Defers the processing of the message. Save the `sequenceNumber` of the message, in order to\n   * receive it message again in the future using the `receiveDeferredMessage` method.\n   * @param propertiesToModify The properties of the message to modify while deferring the message\n   *\n   * @returns Promise<void>\n   */\n  defer(propertiesToModify?: { [key: string]: any }): Promise<void>;\n\n  /**\n   * Moves the message to the deadletter sub-queue. To receive a deadletted message, create a new\n   * QueueClient/SubscriptionClient using the path for the deadletter sub-queue.\n   * @param options The DeadLetter options that can be provided while\n   * rejecting the message.\n   *\n   * @returns Promise<void>\n   */\n  deadLetter(options?: DeadLetterOptions): Promise<void>;\n}\n\n/**\n * Describes the message received from Service Bus.\n * @class ServiceBusMessage\n */\nexport class ServiceBusMessage implements ReceivedMessage {\n  /**\n   * @property The message body that needs to be sent or is received.\n   */\n  body: any;\n  /**\n   * @property The application specific properties.\n   */\n  userProperties?: { [key: string]: any };\n  /**\n   * @property The message identifier is an\n   * application-defined value that uniquely identifies the message and its payload. The identifier\n   * is a free-form string and can reflect a GUID or an identifier derived from the application\n   * context. If enabled, the\n   * {@link https://docs.microsoft.com/azure/service-bus-messaging/duplicate-detection duplicate detection}\n   * identifies and removes second and further submissions of messages with the same MessageId.\n   */\n  messageId?: string | number | Buffer;\n  /**\n   * @property The content type of the message. Optionally describes\n   * the payload of the message, with a descriptor following the format of RFC2045, Section 5, for\n   * example \"application/json\".\n   */\n  contentType?: string;\n  /**\n   * @property The correlation identifier that allows an\n   * application to specify a context for the message for the purposes of correlation, for example\n   * reflecting the MessageId of a message that is being replied to.\n   * See {@link https://docs.microsoft.com/azure/service-bus-messaging/service-bus-messages-payloads?#message-routing-and-correlation Message Routing and Correlation}.\n   */\n  correlationId?: string | number | Buffer;\n  /**\n   * @property The partition key for sending a message to a\n   * partitioned entity. Maximum length is 128 characters. For {@link https://docs.microsoft.com/azure/service-bus-messaging/service-bus-partitioning partitioned entities},\n   * setting this value enables assigning related messages to the same internal partition,\n   * so that submission sequence order is correctly recorded. The partition is chosen by a hash\n   * function over this value and cannot be chosen directly. For session-aware entities,\n   * the `sessionId` property overrides this value.\n   */\n  partitionKey?: string;\n  /**\n   * @property The partition key for sending a message into an entity\n   * via a partitioned transfer queue. Maximum length is 128 characters. If a message is sent via a\n   * transfer queue in the scope of a transaction, this value selects the transfer queue partition:\n   * This is functionally equivalent to `partitionKey` property and ensures that messages are kept\n   * together and in order as they are transferred.\n   * See {@link https://docs.microsoft.com/azure/service-bus-messaging/service-bus-transactions#transfers-and-send-via Transfers and Send Via}.\n   */\n  viaPartitionKey?: string;\n  /**\n   * @property The session identifier for a session-aware entity. Maximum\n   * length is 128 characters. For session-aware entities, this application-defined value specifies\n   * the session affiliation of the message. Messages with the same session identifier are subject\n   * to summary locking and enable exact in-order processing and demultiplexing. For\n   * session-unaware entities, this value is ignored.\n   * {@link https://docs.microsoft.com/azure/service-bus-messaging/message-sessions Message Sessions}.\n   */\n  sessionId?: string;\n  /**\n   * @property The session identifier augmenting the `replyTo` address.\n   * Maximum length is 128 characters. This value augments the ReplyTo information and specifies\n   * which SessionId should be set for the reply when sent to the reply entity.\n   * See {@link https://docs.microsoft.com/azure/service-bus-messaging/service-bus-messages-payloads?#message-routing-and-correlation Message Routing and Correlation}.\n   */\n  replyToSessionId?: string;\n  /**\n   * @property The message’s time to live value. This value is the relative\n   * duration after which the message expires, starting from the instant the message has been\n   * accepted and stored by the broker, as captured in `enqueuedTimeUtc`. When not set explicitly,\n   * the assumed value is the DefaultTimeToLive for the respective queue or topic. A message-level\n   * `timeToLive` value cannot be longer than the entity's DefaultTimeToLive setting and it is\n   * silently adjusted if it does. See\n   * {@link https://docs.microsoft.com/azure/service-bus-messaging/message-expiration Expiration}.\n   */\n  timeToLive?: number;\n  /**\n   * @property The application specific label. This property enables the\n   * application to indicate the purpose of the message to the receiver in a standardized. fashion,\n   * similar to an email subject line. The mapped AMQP property is \"subject\".\n   */\n  label?: string;\n  /**\n   * @property The \"to\" address. This property is reserved for future use in routing\n   * scenarios and presently ignored by the broker itself. Applications can use this value in\n   * rule-driven {@link https://docs.microsoft.com/azure/service-bus-messaging/service-bus-auto-forwarding auto-forward chaining}\n   * scenarios to indicate the intended logical destination of the message.\n   */\n  to?: string;\n  /**\n   * @property The address of an entity to send replies to. This optional and\n   * application-defined value is a standard way to express a reply path to the receiver of the\n   * message. When a sender expects a reply, it sets the value to the absolute or relative path of\n   * the queue or topic it expects the reply to be sent to. See\n   * {@link https://docs.microsoft.com/azure/service-bus-messaging/service-bus-messages-payloads?#message-routing-and-correlation Message Routing and Correlation}.\n   */\n  replyTo?: string;\n  /**\n   * @property The date and time in UTC at which the message will\n   * be enqueued. This property returns the time in UTC; when setting the property, the\n   * supplied DateTime value must also be in UTC. This value is for delayed message sending.\n   * It is utilized to delay messages sending to a specific time in the future. Message enqueuing\n   * time does not mean that the message will be sent at the same time. It will get enqueued,\n   * but the actual sending time depends on the queue's workload and its state.\n   */\n  scheduledEnqueueTimeUtc?: Date;\n  /**\n   * @property The lock token is a reference to the lock that is being held by the broker in\n   * `ReceiveMode.PeekLock` mode. Locks are used internally settle messages as explained in the\n   * {@link https://docs.microsoft.com/azure/service-bus-messaging/message-transfers-locks-settlement product documentation in more detail}\n   * - Not applicable when the message is received in `ReceiveMode.receiveAndDelete`\n   * mode.\n   * @readonly\n   */\n  readonly lockToken?: string;\n  /**\n   * @property Number of deliveries that have been attempted for this message. The count is\n   * incremented when a message lock expires, or the message is explicitly abandoned using the\n   * `abandon()` method on the message.\n   * @readonly\n   */\n  readonly deliveryCount?: number;\n  /**\n   * @property The UTC instant at which the message has been accepted and stored in Service Bus.\n   * @readonly\n   */\n  readonly enqueuedTimeUtc?: Date;\n  /**\n   * @property The UTC instant at which the message is marked for removal and no longer available for\n   * retrieval from the entity due to expiration. This property is computed from 2 other properties\n   * on the message: `enqueuedTimeUtc` + `timeToLive`.\n   */\n  readonly expiresAtUtc?: Date;\n  /**\n   * @property The UTC instant until which the message is held locked in the queue/subscription.\n   * When the lock expires, the `deliveryCount` is incremented and the message is again available\n   * for retrieval.\n   * - Not applicable when the message is received in `ReceiveMode.receiveAndDelete`\n   * mode.\n   */\n  lockedUntilUtc?: Date;\n  /**\n   * @property The original sequence number of the message. For\n   * messages that have been auto-forwarded, this property reflects the sequence number that had\n   * first been assigned to the message at its original point of submission.\n   * @readonly\n   */\n  readonly enqueuedSequenceNumber?: number;\n  /**\n   * @property The unique number assigned to a message by Service Bus.\n   * The sequence number is a unique 64-bit integer assigned to a message as it is accepted\n   * and stored by the broker and functions as its true identifier. For partitioned entities,\n   * the topmost 16 bits reflect the partition identifier. Sequence numbers monotonically increase.\n   * They roll over to 0 when the 48-64 bit range is exhausted.\n   * @readonly\n   */\n  readonly sequenceNumber?: Long;\n  /**\n   * @property The name of the queue or subscription that this message\n   * was enqueued on, before it was deadlettered. Only set in messages that have been dead-lettered\n   * and subsequently auto-forwarded from the dead-letter sub-queue to another entity. Indicates the\n   * entity in which the message was dead-lettered.\n   * @readonly\n   */\n  readonly deadLetterSource?: string;\n  /**\n   * The associated delivery of the received message.\n   */\n  readonly delivery: Delivery;\n  /**\n   * @property {AmqpMessage} _amqpMessage The underlying raw amqp message.\n   * @readonly\n   */\n  readonly _amqpMessage: AmqpMessage;\n  /**\n   * @property Boolean denoting if the message has already been settled.\n   * @readonly\n   */\n  public get isSettled(): boolean {\n    return this.delivery.remote_settled;\n  }\n  /**\n   * @property {ClientEntityContext} _context The client entity context.\n   * @readonly\n   */\n  private readonly _context: ClientEntityContext;\n\n  /**\n   * @internal\n   */\n  constructor(\n    context: ClientEntityContext,\n    msg: AmqpMessage,\n    delivery: Delivery,\n    shouldReorderLockToken: boolean\n  ) {\n    Object.assign(this, fromAmqpMessage(msg, delivery, shouldReorderLockToken));\n    this._context = context;\n    if (msg.body) {\n      this.body = this._context.namespace.dataTransformer.decode(msg.body);\n    }\n    this._amqpMessage = msg;\n    this.delivery = delivery;\n  }\n\n  /**\n   * Removes the message from Service Bus.\n   *\n   * @throws Error with name `SessionLockLostError` (for messages from a Queue/Subscription with sessions enabled)\n   * if the AMQP link with which the message was received is no longer alive. This can\n   * happen either because the lock on the session expired or the receiver was explicitly closed by\n   * the user or the AMQP link got closed by the library due to network loss or service error.\n   * @throws Error with name `MessageLockLostError` (for messages from a Queue/Subscription with sessions not enabled)\n   * if the lock on the message has expired or the AMQP link with which the message was received is\n   * no longer alive. The latter can happen if the receiver was explicitly closed by the user or the\n   * AMQP link got closed by the library due to network loss or service error.\n   * @throws Error if the message is already settled. To avoid this error check the `isSettled`\n   * property on the message if you are not sure whether the message is settled.\n   * @throws Error if used in `ReceiveAndDelete` mode because all messages received in this mode\n   * are pre-settled. To avoid this error, update your code to not settle a message which is received\n   * in this mode.\n   * @throws Error with name `ServiceUnavailableError` if Service Bus does not acknowledge the request to settle\n   * the message in time. The message may or may not have been settled successfully.\n   *\n   * @returns Promise<void>.\n   */\n  async complete(): Promise<void> {\n    log.message(\n      \"[%s] Completing the message with id '%s'.\",\n      this._context.namespace.connectionId,\n      this.messageId\n    );\n    if (this._context.requestResponseLockedMessages.has(this.lockToken!)) {\n      await this._context.managementClient!.updateDispositionStatus(\n        this.lockToken!,\n        DispositionStatus.completed,\n        {\n          sessionId: this.sessionId\n        }\n      );\n\n      // Remove the message from the internal map of deferred messages\n      this._context.requestResponseLockedMessages.delete(this.lockToken!);\n      return;\n    }\n    const receiver = this._context.getReceiver(this.delivery.link.name, this.sessionId);\n    this.throwIfMessageCannotBeSettled(receiver, DispositionType.complete);\n\n    return receiver!.settleMessage(this, DispositionType.complete);\n  }\n  /**\n   * The lock held on the message by the receiver is let go, making the message available again in\n   * Service Bus for another receive operation.\n   *\n   * @throws Error with name `SessionLockLostError` (for messages from a Queue/Subscription with sessions enabled)\n   * if the AMQP link with which the message was received is no longer alive. This can\n   * happen either because the lock on the session expired or the receiver was explicitly closed by\n   * the user or the AMQP link got closed by the library due to network loss or service error.\n   * @throws Error with name `MessageLockLostError` (for messages from a Queue/Subscription with sessions not enabled)\n   * if the lock on the message has expired or the AMQP link with which the message was received is\n   * no longer alive. The latter can happen if the receiver was explicitly closed by the user or the\n   * AMQP link got closed by the library due to network loss or service error.\n   * @throws Error if the message is already settled. To avoid this error check the `isSettled`\n   * property on the message if you are not sure whether the message is settled.\n   * @throws Error if used in `ReceiveAndDelete` mode because all messages received in this mode\n   * are pre-settled. To avoid this error, update your code to not settle a message which is received\n   * in this mode.\n   * @throws Error with name `ServiceUnavailableError` if Service Bus does not acknowledge the request to settle\n   * the message in time. The message may or may not have been settled successfully.\n   *\n   * @param propertiesToModify The properties of the message to modify while abandoning the message.\n   *\n   * @return Promise<void>.\n   */\n  async abandon(propertiesToModify?: { [key: string]: any }): Promise<void> {\n    // TODO: Figure out a mechanism to convert specified properties to message_annotations.\n    log.message(\n      \"[%s] Abandoning the message with id '%s'.\",\n      this._context.namespace.connectionId,\n      this.messageId\n    );\n    if (this._context.requestResponseLockedMessages.has(this.lockToken!)) {\n      await this._context.managementClient!.updateDispositionStatus(\n        this.lockToken!,\n        DispositionStatus.abandoned,\n        { propertiesToModify: propertiesToModify, sessionId: this.sessionId }\n      );\n\n      // Remove the message from the internal map of deferred messages\n      this._context.requestResponseLockedMessages.delete(this.lockToken!);\n      return;\n    }\n    const receiver = this._context.getReceiver(this.delivery.link.name, this.sessionId);\n    this.throwIfMessageCannotBeSettled(receiver, DispositionType.abandon);\n\n    return receiver!.settleMessage(this, DispositionType.abandon, {\n      propertiesToModify: propertiesToModify\n    });\n  }\n\n  /**\n   * Defers the processing of the message. Save the `sequenceNumber` of the message, in order to\n   * receive it message again in the future using the `receiveDeferredMessage` method.\n   *\n   * @throws Error with name `SessionLockLostError` (for messages from a Queue/Subscription with sessions enabled)\n   * if the AMQP link with which the message was received is no longer alive. This can\n   * happen either because the lock on the session expired or the receiver was explicitly closed by\n   * the user or the AMQP link got closed by the library due to network loss or service error.\n   * @throws Error with name `MessageLockLostError` (for messages from a Queue/Subscription with sessions not enabled)\n   * if the lock on the message has expired or the AMQP link with which the message was received is\n   * no longer alive. The latter can happen if the receiver was explicitly closed by the user or the\n   * AMQP link got closed by the library due to network loss or service error.\n   * @throws Error if the message is already settled. To avoid this error check the `isSettled`\n   * property on the message if you are not sure whether the message is settled.\n   * @throws Error if used in `ReceiveAndDelete` mode because all messages received in this mode\n   * are pre-settled. To avoid this error, update your code to not settle a message which is received\n   * in this mode.\n   * @throws Error with name `ServiceUnavailableError` if Service Bus does not acknowledge the request to settle\n   * the message in time. The message may or may not have been settled successfully.\n   *\n   * @param propertiesToModify The properties of the message to modify while deferring the message\n   *\n   * @returns Promise<void>\n   */\n  async defer(propertiesToModify?: { [key: string]: any }): Promise<void> {\n    log.message(\n      \"[%s] Deferring the message with id '%s'.\",\n      this._context.namespace.connectionId,\n      this.messageId\n    );\n    if (this._context.requestResponseLockedMessages.has(this.lockToken!)) {\n      await this._context.managementClient!.updateDispositionStatus(\n        this.lockToken!,\n        DispositionStatus.defered,\n        { propertiesToModify: propertiesToModify, sessionId: this.sessionId }\n      );\n\n      // Remove the message from the internal map of deferred messages\n      this._context.requestResponseLockedMessages.delete(this.lockToken!);\n      return;\n    }\n    const receiver = this._context.getReceiver(this.delivery.link.name, this.sessionId);\n    this.throwIfMessageCannotBeSettled(receiver, DispositionType.defer);\n\n    return receiver!.settleMessage(this, DispositionType.defer, {\n      propertiesToModify: propertiesToModify\n    });\n  }\n\n  /**\n   * Moves the message to the deadletter sub-queue. To receive a deadletted message, create a new\n   * QueueClient/SubscriptionClient using the path for the deadletter sub-queue.\n   *\n   * @throws Error with name `SessionLockLostError` (for messages from a Queue/Subscription with sessions enabled)\n   * if the AMQP link with which the message was received is no longer alive. This can\n   * happen either because the lock on the session expired or the receiver was explicitly closed by\n   * the user or the AMQP link got closed by the library due to network loss or service error.\n   * @throws Error with name `MessageLockLostError` (for messages from a Queue/Subscription with sessions not enabled)\n   * if the lock on the message has expired or the AMQP link with which the message was received is\n   * no longer alive. The latter can happen if the receiver was explicitly closed by the user or the\n   * AMQP link got closed by the library due to network loss or service error.\n   * @throws Error if the message is already settled. To avoid this error check the `isSettled`\n   * property on the message if you are not sure whether the message is settled.\n   * @throws Error if used in `ReceiveAndDelete` mode because all messages received in this mode\n   * are pre-settled. To avoid this error, update your code to not settle a message which is received\n   * in this mode.\n   * @throws Error with name `ServiceUnavailableError` if Service Bus does not acknowledge the request to settle\n   * the message in time. The message may or may not have been settled successfully.\n   *\n   * @param options The DeadLetter options that can be provided while\n   * rejecting the message.\n   *\n   * @returns Promise<void>\n   */\n  async deadLetter(options?: DeadLetterOptions): Promise<void> {\n    const error: AmqpError = {\n      condition: Constants.deadLetterName\n    };\n    if (options) {\n      error.info = {\n        DeadLetterReason: options.deadletterReason,\n        DeadLetterErrorDescription: options.deadLetterErrorDescription\n      };\n    }\n    log.message(\n      \"[%s] Deadlettering the message with id '%s'.\",\n      this._context.namespace.connectionId,\n      this.messageId\n    );\n    if (this._context.requestResponseLockedMessages.has(this.lockToken!)) {\n      await this._context.managementClient!.updateDispositionStatus(\n        this.lockToken!,\n        DispositionStatus.suspended,\n        {\n          deadLetterReason: error.condition,\n          deadLetterDescription: error.description,\n          sessionId: this.sessionId\n        }\n      );\n\n      // Remove the message from the internal map of deferred messages\n      this._context.requestResponseLockedMessages.delete(this.lockToken!);\n      return;\n    }\n    const receiver = this._context.getReceiver(this.delivery.link.name, this.sessionId);\n    this.throwIfMessageCannotBeSettled(receiver, DispositionType.deadletter);\n\n    return receiver!.settleMessage(this, DispositionType.deadletter, {\n      error: error\n    });\n  }\n\n  /**\n   * Creates a clone of the current message to allow it to be re-sent to the queue\n   * @returns ServiceBusMessage\n   */\n  clone(): SendableMessageInfo {\n    // We are returning a SendableMessageInfo object because that object can then be sent to Service Bus\n    const clone: SendableMessageInfo = {\n      body: this.body,\n      contentType: this.contentType,\n      correlationId: this.correlationId,\n      label: this.label,\n      messageId: this.messageId,\n      partitionKey: this.partitionKey,\n      replyTo: this.replyTo,\n      replyToSessionId: this.replyToSessionId,\n      scheduledEnqueueTimeUtc: this.scheduledEnqueueTimeUtc,\n      sessionId: this.sessionId,\n      timeToLive: this.timeToLive,\n      to: this.to,\n      userProperties: this.userProperties,\n      viaPartitionKey: this.viaPartitionKey\n    };\n\n    return clone;\n  }\n\n  /**\n   * @private\n   * Logs and Throws an error if the given message cannot be settled.\n   * @param receiver Receiver to be used to settle this message\n   * @param operation Settle operation: complete, abandon, defer or deadLetter\n   */\n  private throwIfMessageCannotBeSettled(\n    receiver: MessageReceiver | MessageSession | undefined,\n    operation: DispositionType\n  ): void {\n    let error: Error | undefined;\n\n    if (receiver && receiver.receiveMode !== ReceiveMode.peekLock) {\n      error = new Error(\n        getErrorMessageNotSupportedInReceiveAndDeleteMode(`${operation} the message`)\n      );\n    } else if (this.delivery.remote_settled) {\n      error = new Error(`Failed to ${operation} the message as this message is already settled.`);\n    } else if (!receiver || !receiver.isOpen()) {\n      const errorMessage =\n        `Failed to ${operation} the message as the AMQP link with which the message was ` +\n        `received is no longer alive.`;\n      if (this.sessionId != undefined) {\n        error = translate({\n          description: errorMessage,\n          condition: ErrorNameConditionMapper.SessionLockLostError\n        });\n      } else {\n        error = translate({\n          description: errorMessage,\n          condition: ErrorNameConditionMapper.MessageLockLostError\n        });\n      }\n    }\n    if (!error) {\n      return;\n    }\n    log.error(\n      \"[%s] An error occured when settling a message with id '%s'. \" +\n        \"This message was received using the receiver %s which %s currently open: %O\",\n      this._context.namespace.connectionId,\n      this.messageId,\n      this.delivery.link.name,\n      this.delivery.link.is_open() ? \"is\" : \"is not\",\n      error\n    );\n\n    throw error;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { defaultLock } from \"@azure/amqp-common\";\nimport { ClientEntityContext } from \"../clientEntityContext\";\nimport * as log from \"../log\";\nimport { Sender, Receiver } from \"rhea-promise\";\nimport { getUniqueName } from \"../util/utils\";\n\n/**\n * @internal\n * Options passed to the constructor of LinkEntity\n */\nexport interface LinkEntityOptions {\n  /**\n   * @property {string} address The client entity address in one of the following forms:\n   */\n  address?: string;\n  /**\n   * @property {string} audience The client entity token audience in one of the following forms:\n   */\n  audience?: string;\n}\n\n/**\n * @internal\n * Describes the base class for entities like MessageSender, MessageReceiver and Management client.\n * @class ClientEntity\n */\nexport class LinkEntity {\n  /**\n   * @property {string} id The unique name for the entity in the format:\n   * `${name of the entity}-${guid}`.\n   */\n  name: string;\n  /**\n   * @property {string} address The client entity address in one of the following forms:\n   *\n   * **Sender**\n   * - `\"<queue-name>\"`.\n   * - `\"<topic-name>\"`.\n   *\n   * **Receiver**\n   * - `\"<queue-name>\"`.\n   * - `\"<topic-name>\"`.\n   *\n   * **ManagementClient**\n   * -`\"$management\"`.\n   */\n  address: string;\n  /**\n   * @property {string} audience The client entity token audience in one of the following forms:\n   *\n   * **Sender**\n   * - `\"sb://<yournamespace>.servicebus.windows.net/<queue-name>\"`\n   * - `\"sb://<yournamespace>.servicebus.windows.net/<topic-name>\"`\n   *\n   * **Receiver**\n   * - `\"sb://<yournamespace>.servicebus.windows.net/<queue-name>\"`\n   * - `\"sb://<yournamespace>.servicebus.windows.net/<topic-name>\"`\n   *\n   * **ManagementClient**\n   * - `\"sb://<your-namespace>.servicebus.windows.net/<queue-name>/$management\"`.\n   * - `\"sb://<your-namespace>.servicebus.windows.net/<topic-name>/$management\"`.\n   */\n  audience: string;\n  /**\n   * @property {boolean} isConnecting Indicates whether the link is in the process of connecting\n   * (establishing) itself. Default value: `false`.\n   */\n  isConnecting: boolean = false;\n  /**\n   * @property {ClientEntityContext} _context Provides relevant information about the amqp connection,\n   * cbs and $management sessions, token provider, sender and receivers.\n   * @protected\n   */\n  protected _context: ClientEntityContext;\n  /**\n   * @property {NodeJS.Timer} _tokenRenewalTimer The token renewal timer that keeps track of when\n   * the Client Entity is due for token renewal.\n   * @protected\n   */\n  protected _tokenRenewalTimer?: NodeJS.Timer;\n  /**\n   * Creates a new ClientEntity instance.\n   * @constructor\n   * @param {ClientEntityContext} context The connection context.\n   * @param {LinkEntityOptions} [options] Options that can be provided while creating the LinkEntity.\n   */\n  constructor(name: string, context: ClientEntityContext, options?: LinkEntityOptions) {\n    if (!options) options = {};\n    this._context = context;\n    this.address = options.address || \"\";\n    this.audience = options.audience || \"\";\n    this.name = getUniqueName(name);\n  }\n\n  /**\n   * Negotiates the cbs claim for the ClientEntity.\n   * @protected\n   * @param {boolean} [setTokenRenewal] Set the token renewal timer. Default false.\n   * @return {Promise<void>} Promise<void>\n   */\n  protected async _negotiateClaim(setTokenRenewal?: boolean): Promise<void> {\n    // Acquire the lock and establish a cbs session if it does not exist on the connection.\n    // Although node.js is single threaded, we need a locking mechanism to ensure that a\n    // race condition does not happen while creating a shared resource (in this case the\n    // cbs session, since we want to have exactly 1 cbs session per connection).\n    log.link(\n      \"[%s] Acquiring cbs lock: '%s' for creating the cbs session while creating the %s: \" +\n        \"'%s' with address: '%s'.\",\n      this._context.namespace.connectionId,\n      this._context.namespace.cbsSession.cbsLock,\n      this._type,\n      this.name,\n      this.address\n    );\n    await defaultLock.acquire(this._context.namespace.cbsSession.cbsLock, () => {\n      return this._context.namespace.cbsSession.init();\n    });\n    const tokenObject = await this._context.namespace.tokenProvider.getToken(this.audience);\n    log.link(\n      \"[%s] %s: calling negotiateClaim for audience '%s'.\",\n      this._context.namespace.connectionId,\n      this._type,\n      this.audience\n    );\n    // Acquire the lock to negotiate the CBS claim.\n    log.link(\n      \"[%s] Acquiring cbs lock: '%s' for cbs auth for %s: '%s' with address '%s'.\",\n      this._context.namespace.connectionId,\n      this._context.namespace.negotiateClaimLock,\n      this._type,\n      this.name,\n      this.address\n    );\n    await defaultLock.acquire(this._context.namespace.negotiateClaimLock, () => {\n      return this._context.namespace.cbsSession.negotiateClaim(this.audience, tokenObject);\n    });\n    log.link(\n      \"[%s] Negotiated claim for %s '%s' with with address: %s\",\n      this._context.namespace.connectionId,\n      this._type,\n      this.name,\n      this.address\n    );\n    if (setTokenRenewal) {\n      await this._ensureTokenRenewal();\n    }\n  }\n\n  /**\n   * Ensures that the token is renewed within the predefined renewal margin.\n   * @protected\n   * @returns {void}\n   */\n  protected async _ensureTokenRenewal(): Promise<void> {\n    const tokenValidTimeInSeconds = this._context.namespace.tokenProvider.tokenValidTimeInSeconds;\n    const tokenRenewalMarginInSeconds = this._context.namespace.tokenProvider\n      .tokenRenewalMarginInSeconds;\n    const nextRenewalTimeout = (tokenValidTimeInSeconds - tokenRenewalMarginInSeconds) * 1000;\n    this._tokenRenewalTimer = setTimeout(async () => {\n      try {\n        await this._negotiateClaim(true);\n      } catch (err) {\n        // TODO: May be add some retries over here before emitting the error.\n        log.error(\n          \"[%s] %s '%s' with address %s, an error occurred while renewing the token: %O\",\n          this._context.namespace.connectionId,\n          this._type,\n          this.name,\n          this.address,\n          err\n        );\n      }\n    }, nextRenewalTimeout);\n    log.link(\n      \"[%s] %s '%s' with address %s, has next token renewal in %d seconds @(%s).\",\n      this._context.namespace.connectionId,\n      this._type,\n      this.name,\n      this.address,\n      nextRenewalTimeout / 1000,\n      new Date(Date.now() + nextRenewalTimeout).toString()\n    );\n  }\n\n  /**\n   * Closes the Sender|Receiver link and it's underlying session and also removes it from the\n   * internal map.\n   *\n   * @param {Sender | Receiver} [link] The Sender or Receiver link that needs to be closed and\n   * removed.\n   */\n  protected async _closeLink(link?: Sender | Receiver): Promise<void> {\n    clearTimeout(this._tokenRenewalTimer as NodeJS.Timer);\n    if (link) {\n      try {\n        // This should take care of closing the link and it's underlying session. This should also\n        // remove them from the internal map.\n        await link.close();\n        log.link(\n          \"[%s] %s '%s' with address '%s' closed.\",\n          this._context.namespace.connectionId,\n          this._type,\n          this.name,\n          this.address\n        );\n      } catch (err) {\n        log.error(\n          \"[%s] An error occurred while closing the %s '%s': %O\",\n          this._context.namespace.connectionId,\n          this._type,\n          this.name,\n          this.address,\n          err\n        );\n      }\n    }\n  }\n\n  /**\n   * Provides the current type of the ClientEntity.\n   * @return {string} The entity type.\n   */\n  private get _type(): string {\n    let result = \"LinkEntity\";\n    if ((this as any).constructor && (this as any).constructor.name) {\n      result = (this as any).constructor.name;\n    }\n    return result;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport * as log from \"../log\";\nimport {\n  messageProperties,\n  Sender,\n  EventContext,\n  OnAmqpEvent,\n  SenderOptions,\n  SenderEvents,\n  message as RheaMessageUtil,\n  AmqpError,\n  generate_uuid\n} from \"rhea-promise\";\nimport {\n  defaultLock,\n  Func,\n  retry,\n  translate,\n  AmqpMessage,\n  ErrorNameConditionMapper,\n  RetryConfig,\n  RetryOperationType,\n  Constants,\n  randomNumberFromInterval,\n  delay\n} from \"@azure/amqp-common\";\nimport {\n  SendableMessageInfo,\n  toAmqpMessage,\n  getMessagePropertyTypeMismatchError\n} from \"../serviceBusMessage\";\nimport { ClientEntityContext } from \"../clientEntityContext\";\nimport { LinkEntity } from \"./linkEntity\";\nimport { getUniqueName } from \"../util/utils\";\nimport { throwErrorIfConnectionClosed } from \"../util/errors\";\n\n/**\n * @internal\n */\ninterface CreateSenderOptions {\n  newName?: boolean;\n}\n\n/**\n * @internal\n * Describes the MessageSender that will send messages to ServiceBus.\n * @class MessageSender\n */\nexport class MessageSender extends LinkEntity {\n  /**\n   * @property {string} senderLock The unqiue lock name per connection that is used to acquire the\n   * lock for establishing a sender link by an entity on that connection.\n   * @readonly\n   */\n  readonly senderLock: string = `sender-${generate_uuid()}`;\n  /**\n   * @property {OnAmqpEvent} _onAmqpError The handler function to handle errors that happen on the\n   * underlying sender.\n   * @readonly\n   */\n  private readonly _onAmqpError: OnAmqpEvent;\n  /**\n   * @property {OnAmqpEvent} _onAmqpClose The handler function to handle \"sender_close\" event\n   * that happens on the underlying sender.\n   * @readonly\n   */\n  private readonly _onAmqpClose: OnAmqpEvent;\n  /**\n   * @property {OnAmqpEvent} _onSessionError The message handler that will be set as the handler on\n   * the underlying rhea sender's session for the \"session_error\" event.\n   * @private\n   */\n  private _onSessionError: OnAmqpEvent;\n  /**\n   * @property {OnAmqpEvent} _onSessionClose The message handler that will be set as the handler on\n   * the underlying rhea sender's session for the \"session_close\" event.\n   * @private\n   */\n  private _onSessionClose: OnAmqpEvent;\n  /**\n   * @property {Sender} [_sender] The AMQP sender link.\n   * @private\n   */\n  private _sender?: Sender;\n\n  /**\n   * Creates a new MessageSender instance.\n   * @constructor\n   * @param {ClientEntityContext} context The client entity context.\n   */\n  constructor(context: ClientEntityContext) {\n    super(context.entityPath, context, {\n      address: context.entityPath,\n      audience: `${context.namespace.config.endpoint}${context.entityPath}`\n    });\n    this._onAmqpError = (context: EventContext) => {\n      const senderError = context.sender && context.sender.error;\n      if (senderError) {\n        const err = translate(senderError);\n        log.error(\n          \"[%s] An error occurred for sender '%s': %O.\",\n          this._context.namespace.connectionId,\n          this.name,\n          err\n        );\n      }\n    };\n\n    this._onSessionError = (context: EventContext) => {\n      const sessionError = context.session && context.session.error;\n      if (sessionError) {\n        const err = translate(sessionError);\n        log.error(\n          \"[%s] An error occurred on the session of sender '%s': %O.\",\n          this._context.namespace.connectionId,\n          this.name,\n          err\n        );\n      }\n    };\n\n    this._onAmqpClose = async (context: EventContext) => {\n      const sender = this._sender || context.sender!;\n      const senderError = context.sender && context.sender.error;\n      if (senderError) {\n        log.error(\n          \"[%s] 'sender_close' event occurred for sender '%s' with address '%s'. \" +\n            \"The associated error is: %O\",\n          this._context.namespace.connectionId,\n          this.name,\n          this.address,\n          senderError\n        );\n      }\n      if (sender && !sender.isItselfClosed()) {\n        if (!this.isConnecting) {\n          log.error(\n            \"[%s] 'sender_close' event occurred on the sender '%s' with address '%s' \" +\n              \"and the sdk did not initiate this. The sender is not reconnecting. Hence, calling \" +\n              \"detached from the _onAmqpClose() handler.\",\n            this._context.namespace.connectionId,\n            this.name,\n            this.address\n          );\n          await this.onDetached(senderError);\n        } else {\n          log.error(\n            \"[%s] 'sender_close' event occurred on the sender '%s' with address '%s' \" +\n              \"and the sdk did not initate this. Moreover the sender is already re-connecting. \" +\n              \"Hence not calling detached from the _onAmqpClose() handler.\",\n            this._context.namespace.connectionId,\n            this.name,\n            this.address\n          );\n        }\n      } else {\n        log.error(\n          \"[%s] 'sender_close' event occurred on the sender '%s' with address '%s' \" +\n            \"because the sdk initiated it. Hence not calling detached from the _onAmqpClose\" +\n            \"() handler.\",\n          this._context.namespace.connectionId,\n          this.name,\n          this.address\n        );\n      }\n    };\n\n    this._onSessionClose = async (context: EventContext) => {\n      const sender = this._sender || context.sender!;\n      const sessionError = context.session && context.session.error;\n      if (sessionError) {\n        log.error(\n          \"[%s] 'session_close' event occurred for sender '%s' with address '%s'. \" +\n            \"The associated error is: %O\",\n          this._context.namespace.connectionId,\n          this.name,\n          this.address,\n          sessionError\n        );\n      }\n      if (sender && !sender.isSessionItselfClosed()) {\n        if (!this.isConnecting) {\n          log.error(\n            \"[%s] 'session_close' event occurred on the session of sender '%s' with \" +\n              \"address '%s' and the sdk did not initiate this. Hence calling detached from the \" +\n              \"_onSessionClose() handler.\",\n            this._context.namespace.connectionId,\n            this.name,\n            this.address\n          );\n          await this.onDetached(sessionError);\n        } else {\n          log.error(\n            \"[%s] 'session_close' event occurred on the session of sender '%s' with \" +\n              \"address '%s' and the sdk did not initiate this. Moreover the sender is already \" +\n              \"re-connecting. Hence not calling detached from the _onSessionClose() handler.\",\n            this._context.namespace.connectionId,\n            this.name,\n            this.address\n          );\n        }\n      } else {\n        log.error(\n          \"[%s] 'session_close' event occurred on the session of sender '%s' with address \" +\n            \"'%s' because the sdk initiated it. Hence not calling detached from the _onSessionClose\" +\n            \"() handler.\",\n          this._context.namespace.connectionId,\n          this.name,\n          this.address\n        );\n      }\n    };\n  }\n\n  private _deleteFromCache(): void {\n    this._sender = undefined;\n    delete this._context.sender;\n    log.error(\n      \"[%s] Deleted the sender '%s' with address '%s' from the client cache.\",\n      this._context.namespace.connectionId,\n      this.name,\n      this.address\n    );\n  }\n\n  private _createSenderOptions(options: CreateSenderOptions): SenderOptions {\n    if (options.newName) this.name = getUniqueName(this._context.entityPath);\n    const srOptions: SenderOptions = {\n      name: this.name,\n      target: {\n        address: this.address\n      },\n      onError: this._onAmqpError,\n      onClose: this._onAmqpClose,\n      onSessionError: this._onSessionError,\n      onSessionClose: this._onSessionClose\n    };\n    log.sender(\"Creating sender with options: %O\", srOptions);\n    return srOptions;\n  }\n\n  /**\n   * Tries to send the message to ServiceBus if there is enough credit to send them\n   * and the circular buffer has available space to settle the message after sending them.\n   *\n   * We have implemented a synchronous send over here in the sense that we shall be waiting\n   * for the message to be accepted or rejected and accordingly resolve or reject the promise.\n   *\n   * @param encodedMessage The encoded message to be sent to ServiceBus.\n   * @param sendBatch Boolean indicating whether the encoded message represents a batch of messages or not\n   * @return {Promise<Delivery>} Promise<Delivery>\n   */\n  private _trySend(encodedMessage: Buffer, sendBatch?: boolean): Promise<void> {\n    const sendEventPromise = () =>\n      new Promise<void>(async (resolve, reject) => {\n        let waitTimer: any;\n        log.sender(\n          \"[%s] Sender '%s', credit: %d available: %d\",\n          this._context.namespace.connectionId,\n          this.name,\n          this._sender!.credit,\n          this._sender!.session.outgoing.available()\n        );\n        if (!this._sender!.sendable()) {\n          log.sender(\n            \"[%s] Sender '%s', waiting for 1 second for sender to become sendable\",\n            this._context.namespace.connectionId,\n            this.name\n          );\n\n          await delay(1000);\n\n          log.sender(\n            \"[%s] Sender '%s' after waiting for a second, credit: %d available: %d\",\n            this._context.namespace.connectionId,\n            this.name,\n            this._sender!.credit,\n            this._sender!.session.outgoing.available()\n          );\n        }\n        if (this._sender!.sendable()) {\n          let onRejected: Func<EventContext, void>;\n          let onReleased: Func<EventContext, void>;\n          let onModified: Func<EventContext, void>;\n          let onAccepted: Func<EventContext, void>;\n          const removeListeners = (): void => {\n            clearTimeout(waitTimer);\n            // When `removeListeners` is called on timeout, the sender might be closed and cleared\n            // So, check if it exists, before removing listeners from it.\n            if (this._sender) {\n              this._sender.removeListener(SenderEvents.rejected, onRejected);\n              this._sender.removeListener(SenderEvents.accepted, onAccepted);\n              this._sender.removeListener(SenderEvents.released, onReleased);\n              this._sender.removeListener(SenderEvents.modified, onModified);\n            }\n          };\n\n          onAccepted = (context: EventContext) => {\n            // Since we will be adding listener for accepted and rejected event every time\n            // we send a message, we need to remove listener for both the events.\n            // This will ensure duplicate listeners are not added for the same event.\n            removeListeners();\n            log.sender(\n              \"[%s] Sender '%s', got event accepted.\",\n              this._context.namespace.connectionId,\n              this.name\n            );\n            resolve();\n          };\n          onRejected = (context: EventContext) => {\n            removeListeners();\n            log.error(\n              \"[%s] Sender '%s', got event rejected.\",\n              this._context.namespace.connectionId,\n              this.name\n            );\n            const err = translate(context!.delivery!.remote_state!.error);\n            reject(err);\n          };\n          onReleased = (context: EventContext) => {\n            removeListeners();\n            log.error(\n              \"[%s] Sender '%s', got event released.\",\n              this._context.namespace.connectionId,\n              this.name\n            );\n            let err: Error;\n            if (context!.delivery!.remote_state!.error) {\n              err = translate(context!.delivery!.remote_state!.error);\n            } else {\n              err = new Error(\n                `[${this._context.namespace.connectionId}]Sender '${this.name}', ` +\n                  `received a release disposition.Hence we are rejecting the promise.`\n              );\n            }\n            reject(err);\n          };\n          onModified = (context: EventContext) => {\n            removeListeners();\n            log.error(\n              \"[%s] Sender '%s', got event modified.\",\n              this._context.namespace.connectionId,\n              this.name\n            );\n            let err: Error;\n            if (context!.delivery!.remote_state!.error) {\n              err = translate(context!.delivery!.remote_state!.error);\n            } else {\n              err = new Error(\n                `[${this._context.namespace.connectionId}]Sender \"${this.name}\", ` +\n                  `received a modified disposition.Hence we are rejecting the promise.`\n              );\n            }\n            reject(err);\n          };\n\n          const actionAfterTimeout = () => {\n            removeListeners();\n            const desc: string =\n              `[${this._context.namespace.connectionId}] Sender \"${this.name}\" ` +\n              `with address \"${this.address}\", was not able to send the message right now, due ` +\n              `to operation timeout.`;\n            log.error(desc);\n            const e: AmqpError = {\n              condition: ErrorNameConditionMapper.ServiceUnavailableError,\n              description: desc\n            };\n            return reject(translate(e));\n          };\n\n          this._sender!.on(SenderEvents.accepted, onAccepted);\n          this._sender!.on(SenderEvents.rejected, onRejected);\n          this._sender!.on(SenderEvents.modified, onModified);\n          this._sender!.on(SenderEvents.released, onReleased);\n          waitTimer = setTimeout(\n            actionAfterTimeout,\n            Constants.defaultOperationTimeoutInSeconds * 1000\n          );\n          try {\n            const delivery = this._sender!.send(\n              encodedMessage,\n              undefined,\n              sendBatch ? 0x80013700 : 0\n            );\n            log.sender(\n              \"[%s] Sender '%s', sent message with delivery id: %d\",\n              this._context.namespace.connectionId,\n              this.name,\n              delivery.id\n            );\n          } catch (error) {\n            removeListeners();\n            return reject(error);\n          }\n        } else {\n          // let us retry to send the message after some time.\n          const msg =\n            `[${this._context.namespace.connectionId}] Sender \"${this.name}\", ` +\n            `cannot send the message right now. Please try later.`;\n          log.error(msg);\n          const amqpError: AmqpError = {\n            condition: ErrorNameConditionMapper.SenderBusyError,\n            description: msg\n          };\n          reject(translate(amqpError));\n        }\n      });\n\n    const jitterInSeconds = randomNumberFromInterval(1, 4);\n    const config: RetryConfig<void> = {\n      operation: sendEventPromise,\n      connectionId: this._context.namespace.connectionId!,\n      operationType: RetryOperationType.sendMessage,\n      times: Constants.defaultRetryAttempts,\n      delayInSeconds: Constants.defaultDelayBetweenOperationRetriesInSeconds + jitterInSeconds\n    };\n\n    return retry<void>(config);\n  }\n\n  /**\n   * Initializes the sender session on the connection.\n   */\n  private async _init(options?: SenderOptions): Promise<void> {\n    try {\n      // isOpen isConnecting  Should establish\n      // true     false          No\n      // true     true           No\n      // false    true           No\n      // false    false          Yes\n      if (!this.isOpen()) {\n        log.error(\n          \"[%s] The sender '%s' with address '%s' is not open and is not currently \" +\n            \"establishing itself. Hence let's try to connect.\",\n          this._context.namespace.connectionId,\n          this.name,\n          this.address\n        );\n        this.isConnecting = true;\n        await this._negotiateClaim();\n        log.error(\n          \"[%s] Trying to create sender '%s'...\",\n          this._context.namespace.connectionId,\n          this.name\n        );\n        if (!options) {\n          options = this._createSenderOptions({});\n        }\n        this._sender = await this._context.namespace.connection.createSender(options);\n        this.isConnecting = false;\n        log.error(\n          \"[%s] Sender '%s' with address '%s' has established itself.\",\n          this._context.namespace.connectionId,\n          this.name,\n          this.address\n        );\n        this._sender.setMaxListeners(1000);\n        log.error(\n          \"[%s] Promise to create the sender resolved. Created sender with name: %s\",\n          this._context.namespace.connectionId,\n          this.name\n        );\n        log.error(\n          \"[%s] Sender '%s' created with sender options: %O\",\n          this._context.namespace.connectionId,\n          this.name,\n          options\n        );\n        // It is possible for someone to close the sender and then start it again.\n        // Thus make sure that the sender is present in the client cache.\n        if (!this._sender) this._context.sender = this;\n        await this._ensureTokenRenewal();\n      }\n    } catch (err) {\n      err = translate(err);\n      log.error(\n        \"[%s] An error occurred while creating the sender %s\",\n        this._context.namespace.connectionId,\n        this.name,\n        err\n      );\n      throw err;\n    }\n  }\n\n  /**\n   * Will reconnect the sender link if necessary.\n   * @param {AmqpError | Error} [senderError] The sender error if any.\n   * @returns {Promise<void>} Promise<void>.\n   */\n  async onDetached(senderError?: AmqpError | Error): Promise<void> {\n    try {\n      const wasCloseInitiated = this._sender && this._sender.isItselfClosed();\n      // Clears the token renewal timer. Closes the link and its session if they are open.\n      // Removes the link and its session if they are present in rhea's cache.\n      await this._closeLink(this._sender);\n      // We should attempt to reopen only when the sender(sdk) did not initiate the close\n      let shouldReopen = false;\n      if (senderError && !wasCloseInitiated) {\n        const translatedError = translate(senderError);\n        if (translatedError.retryable) {\n          shouldReopen = true;\n          log.error(\n            \"[%s] close() method of Sender '%s' with address '%s' was not called. There \" +\n              \"was an accompanying error an it is retryable. This is a candidate for re-establishing \" +\n              \"the sender link.\",\n            this._context.namespace.connectionId,\n            this.name,\n            this.address\n          );\n        } else {\n          log.error(\n            \"[%s] close() method of Sender '%s' with address '%s' was not called. There \" +\n              \"was an accompanying error and it is NOT retryable. Hence NOT re-establishing \" +\n              \"the sender link.\",\n            this._context.namespace.connectionId,\n            this.name,\n            this.address\n          );\n        }\n      } else if (!wasCloseInitiated) {\n        shouldReopen = true;\n        log.error(\n          \"[%s] close() method of Sender '%s' with address '%s' was not called. There \" +\n            \"was no accompanying error as well. This is a candidate for re-establishing \" +\n            \"the sender link.\",\n          this._context.namespace.connectionId,\n          this.name,\n          this.address\n        );\n      } else {\n        const state: any = {\n          wasCloseInitiated: wasCloseInitiated,\n          senderError: senderError,\n          _sender: this._sender\n        };\n        log.error(\n          \"[%s] Something went wrong. State of sender '%s' with address '%s' is: %O\",\n          this._context.namespace.connectionId,\n          this.name,\n          this.address,\n          state\n        );\n      }\n      if (shouldReopen) {\n        await defaultLock.acquire(this.senderLock, () => {\n          const options: SenderOptions = this._createSenderOptions({\n            newName: true\n          });\n          // shall retry forever at an interval of 15 seconds if the error is a retryable error\n          // else bail out when the error is not retryable or the oepration succeeds.\n          const config: RetryConfig<void> = {\n            operation: () => this._init(options),\n            connectionId: this._context.namespace.connectionId!,\n            operationType: RetryOperationType.senderLink,\n            times: Constants.defaultConnectionRetryAttempts,\n            connectionHost: this._context.namespace.config.host,\n            delayInSeconds: 15\n          };\n          return retry<void>(config);\n        });\n      }\n    } catch (err) {\n      log.error(\n        \"[%s] An error occurred while processing detached() of Sender '%s' with address \" +\n          \"'%s': %O\",\n        this._context.namespace.connectionId,\n        this.name,\n        this.address,\n        err\n      );\n    }\n  }\n\n  /**\n   * Deletes the sender fromt the context. Clears the token renewal timer. Closes the sender link.\n   * @return {Promise<void>} Promise<void>\n   */\n  async close(): Promise<void> {\n    if (this._sender) {\n      log.sender(\n        \"[%s] Closing the Sender for the entity '%s'.\",\n        this._context.namespace.connectionId,\n        this._context.entityPath\n      );\n      const senderLink = this._sender;\n      this._deleteFromCache();\n      await this._closeLink(senderLink);\n    }\n  }\n\n  /**\n   * Determines whether the AMQP sender link is open. If open then returns true else returns false.\n   * @return {boolean} boolean\n   */\n  isOpen(): boolean {\n    const result: boolean = this._sender! && this._sender!.isOpen();\n    log.error(\n      \"[%s] Sender '%s' with address '%s' is open? -> %s\",\n      this._context.namespace.connectionId,\n      this.name,\n      this.address,\n      result\n    );\n    return result;\n  }\n\n  /**\n   * Sends the given message, with the given options on this link\n   *\n   * @param {SendableMessageInfo} data Message to send.  Will be sent as UTF8-encoded JSON string.\n   * @returns {Promise<void>}\n   */\n  async send(data: SendableMessageInfo): Promise<void> {\n    throwErrorIfConnectionClosed(this._context.namespace);\n    try {\n      if (!this.isOpen()) {\n        log.sender(\n          \"Acquiring lock %s for initializing the session, sender and \" +\n            \"possibly the connection.\",\n          this.senderLock\n        );\n        await defaultLock.acquire(this.senderLock, () => {\n          return this._init();\n        });\n      }\n      const amqpMessage = toAmqpMessage(data);\n      amqpMessage.body = this._context.namespace.dataTransformer.encode(data.body);\n\n      let encodedMessage;\n      try {\n        encodedMessage = RheaMessageUtil.encode(amqpMessage);\n      } catch (error) {\n        if (error instanceof TypeError || error.name === \"TypeError\") {\n          // `RheaMessageUtil.encode` can fail if message properties are of invalid type\n          // rhea throws errors with name `TypeError` but not an instance of `TypeError`, so catch them too\n          // Errors in such cases do not have user friendy message or call stack\n          // So use `getMessagePropertyTypeMismatchError` to get a better error message\n          throw getMessagePropertyTypeMismatchError(data) || error;\n        }\n        throw error;\n      }\n      log.sender(\n        \"[%s] Sender '%s', trying to send message: %O\",\n        this._context.namespace.connectionId,\n        this.name,\n        data\n      );\n      return await this._trySend(encodedMessage);\n    } catch (err) {\n      log.error(\n        \"[%s] Sender '%s': An error occurred while sending the message: %O\\nError: %O\",\n        this._context.namespace.connectionId,\n        this.name,\n        data,\n        err\n      );\n      throw err;\n    }\n  }\n\n  /**\n   * Send a batch of Message to the ServiceBus in a single AMQP message. The \"message_annotations\",\n   * \"application_properties\" and \"properties\" of the first message will be set as that\n   * of the envelope (batch message).\n   * @param {Array<Message>} inputMessages  An array of Message objects to be sent in a\n   * Batch message.\n   * @return {Promise<void>}\n   */\n  async sendBatch(inputMessages: SendableMessageInfo[]): Promise<void> {\n    throwErrorIfConnectionClosed(this._context.namespace);\n    try {\n      if (!Array.isArray(inputMessages)) {\n        inputMessages = [inputMessages];\n      }\n\n      if (!this.isOpen()) {\n        log.sender(\n          \"Acquiring lock %s for initializing the session, sender and \" +\n            \"possibly the connection.\",\n          this.senderLock\n        );\n        await defaultLock.acquire(this.senderLock, () => {\n          return this._init();\n        });\n      }\n      log.sender(\n        \"[%s] Sender '%s', trying to send Message[]: %O\",\n        this._context.namespace.connectionId,\n        this.name,\n        inputMessages\n      );\n      const amqpMessages: AmqpMessage[] = [];\n      const encodedMessages = [];\n      // Convert Message to AmqpMessage.\n      for (let i = 0; i < inputMessages.length; i++) {\n        const amqpMessage = toAmqpMessage(inputMessages[i]);\n        amqpMessage.body = this._context.namespace.dataTransformer.encode(inputMessages[i].body);\n        amqpMessages[i] = amqpMessage;\n        try {\n          encodedMessages[i] = RheaMessageUtil.encode(amqpMessage);\n        } catch (error) {\n          if (error instanceof TypeError || error.name === \"TypeError\") {\n            throw getMessagePropertyTypeMismatchError(inputMessages[i]) || error;\n          }\n          throw error;\n        }\n      }\n\n      // Convert every encoded message to amqp data section\n      const batchMessage: AmqpMessage = {\n        body: RheaMessageUtil.data_sections(encodedMessages)\n      };\n      // Set message_annotations, application_properties and properties of the first message as\n      // that of the envelope (batch message).\n      if (amqpMessages[0].message_annotations) {\n        batchMessage.message_annotations = amqpMessages[0].message_annotations;\n      }\n      if (amqpMessages[0].application_properties) {\n        batchMessage.application_properties = amqpMessages[0].application_properties;\n      }\n      for (const prop of messageProperties) {\n        if ((amqpMessages[0] as any)[prop]) {\n          (batchMessage as any)[prop] = (amqpMessages[0] as any)[prop];\n        }\n      }\n\n      // Finally encode the envelope (batch message).\n      const encodedBatchMessage = RheaMessageUtil.encode(batchMessage);\n      log.sender(\n        \"[%s]Sender '%s', sending encoded batch message.\",\n        this._context.namespace.connectionId,\n        this.name,\n        encodedBatchMessage\n      );\n      return await this._trySend(encodedBatchMessage, true);\n    } catch (err) {\n      log.error(\n        \"[%s] Sender '%s': An error occurred while sending the messages: %O\\nError: %O\",\n        this._context.namespace.connectionId,\n        this.name,\n        inputMessages,\n        err\n      );\n      throw err;\n    }\n  }\n\n  /**\n   * Creates a new sender to the specifiec ServiceBus entity, and optionally to a given\n   * partition if it is not present in the context or returns the one present in the context.\n   * @static\n   * @returns {Promise<MessageSender>}\n   */\n  static create(context: ClientEntityContext): MessageSender {\n    throwErrorIfConnectionClosed(context.namespace);\n    if (!context.sender) {\n      context.sender = new MessageSender(context);\n    }\n    return context.sender;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport Long from \"long\";\nimport * as log from \"./log\";\nimport { MessageSender } from \"./core/messageSender\";\nimport { SendableMessageInfo } from \"./serviceBusMessage\";\nimport { ClientEntityContext } from \"./clientEntityContext\";\nimport {\n  getSenderClosedErrorMsg,\n  throwErrorIfConnectionClosed,\n  throwTypeErrorIfParameterMissing,\n  throwTypeErrorIfParameterNotLong,\n  throwTypeErrorIfParameterNotLongArray\n} from \"./util/errors\";\n\n/**\n * The Sender class can be used to send messages, schedule messages to be sent at a later time\n * and cancel such scheduled messages.\n * Use the `createSender` function on the QueueClient or TopicClient to instantiate a Sender.\n * The Sender class is an abstraction over the underlying AMQP sender link.\n * @class Sender\n */\nexport class Sender {\n  /**\n   * @property Describes the amqp connection context for the Client.\n   */\n  private _context: ClientEntityContext;\n  /**\n   * @property Denotes if close() was called on this sender\n   */\n  private _isClosed: boolean = false;\n\n  /**\n   * @internal\n   * @throws Error if the underlying connection is closed.\n   */\n  constructor(context: ClientEntityContext) {\n    throwErrorIfConnectionClosed(context.namespace);\n    this._context = context;\n  }\n\n  private _throwIfSenderOrConnectionClosed(): void {\n    throwErrorIfConnectionClosed(this._context.namespace);\n    if (this.isClosed) {\n      const errorMessage = getSenderClosedErrorMsg(\n        this._context.entityPath,\n        this._context.clientType,\n        this._context.isClosed\n      );\n      const error = new Error(errorMessage);\n      log.error(`[${this._context.namespace.connectionId}] %O`, error);\n      throw error;\n    }\n  }\n\n  /**\n   * @property Returns `true` if either the sender or the client that created it has been closed\n   * @readonly\n   */\n  public get isClosed(): boolean {\n    return this._isClosed || this._context.isClosed;\n  }\n\n  /**\n   * Sends the given message after creating an AMQP Sender link if it doesnt already exists.\n   *\n   * To send a message to a `session` and/or `partition` enabled Queue/Topic, set the `sessionId`\n   * and/or `partitionKey` properties respectively on the message.\n   *\n   * @param message - Message to send.\n   * @returns Promise<void>\n   * @throws Error if the underlying connection, client or sender is closed.\n   * @throws MessagingError if the service returns an error while sending messages to the service.\n   */\n  async send(message: SendableMessageInfo): Promise<void> {\n    this._throwIfSenderOrConnectionClosed();\n    throwTypeErrorIfParameterMissing(this._context.namespace.connectionId, \"message\", message);\n    const sender = MessageSender.create(this._context);\n    return sender.send(message);\n  }\n\n  /**\n   * Sends the given messages in a single batch i.e. in a single AMQP message after creating an AMQP\n   * Sender link if it doesnt already exists.\n   *\n   * - To send messages to a `session` and/or `partition` enabled Queue/Topic, set the `sessionId`\n   * and/or `partitionKey` properties respectively on the messages.\n   * - When doing so, all\n   * messages in the batch should have the same `sessionId` (if using sessions) and the same\n   * `parititionKey` (if using paritions).\n   *\n   * @param messages - An array of SendableMessageInfo objects to be sent in a Batch message.\n   * @return Promise<void>\n   * @throws Error if the underlying connection, client or sender is closed.\n   * @throws MessagingError if the service returns an error while sending messages to the service.\n   */\n  async sendBatch(messages: SendableMessageInfo[]): Promise<void> {\n    this._throwIfSenderOrConnectionClosed();\n    throwTypeErrorIfParameterMissing(this._context.namespace.connectionId, \"messages\", messages);\n    if (!Array.isArray(messages)) {\n      messages = [messages];\n    }\n    const sender = MessageSender.create(this._context);\n    return sender.sendBatch(messages);\n  }\n\n  /**\n   * Schedules given message to appear on Service Bus Queue/Subscription at a later time.\n   *\n   * Please note that you need to explicitly encode the message body if you intend to receive the message using a tool or library other than this library.\n   * For example:\n   *  1. Import DefaultDataTransformer and instantiate.\n   *      ```js\n   *        const dt = new DefaultDataTransformer();\n   *      ```\n   *  2. Use the `encode` method on the transformer to encode the message body before calling the scheduleMessage() method\n   *      ```js\n   *        message.body = dt.encode(message.body);\n   *      ```\n   *\n   * @param scheduledEnqueueTimeUtc - The UTC time at which the message should be enqueued.\n   * @param message - The message that needs to be scheduled.\n   * @returns Promise<Long> - The sequence number of the message that was scheduled.\n   * You will need the sequence number if you intend to cancel the scheduling of the message.\n   * Save the `Long` type as-is in your application without converting to number. Since JavaScript\n   * only supports 53 bit numbers, converting the `Long` to number will cause loss in precision.\n   * @throws Error if the underlying connection, client or sender is closed.\n   * @throws MessagingError if the service returns an error while scheduling a message.\n   */\n  async scheduleMessage(\n    scheduledEnqueueTimeUtc: Date,\n    message: SendableMessageInfo\n  ): Promise<Long> {\n    this._throwIfSenderOrConnectionClosed();\n    throwTypeErrorIfParameterMissing(\n      this._context.namespace.connectionId,\n      \"scheduledEnqueueTimeUtc\",\n      scheduledEnqueueTimeUtc\n    );\n    throwTypeErrorIfParameterMissing(this._context.namespace.connectionId, \"message\", message);\n\n    const messages = [message];\n    const result = await this._context.managementClient!.scheduleMessages(\n      scheduledEnqueueTimeUtc,\n      messages\n    );\n    return result[0];\n  }\n\n  /**\n   * Schedules given messages to appear on Service Bus Queue/Subscription at a later time.\n   *\n   * Please note that you need to explicitly encode the message body if you intend to receive the message using a tool or library other than this library.\n   * For example:\n   *  1. Import DefaultDataTransformer and instantiate.\n   *      ```js\n   *        const dt = new DefaultDataTransformer();\n   *      ```\n   *  2. Use the `encode` method on the transformer to encode the message body before calling the scheduleMessage() method\n   *      ```js\n   *        message.body = dt.encode(message.body);\n   *      ```\n   *\n   * @param scheduledEnqueueTimeUtc - The UTC time at which the messages should be enqueued.\n   * @param messages - Array of Messages that need to be scheduled.\n   * @returns Promise<Long[]> - The sequence numbers of messages that were scheduled.\n   * You will need the sequence number if you intend to cancel the scheduling of the messages.\n   * Save the `Long` type as-is in your application without converting to number. Since JavaScript\n   * only supports 53 bit numbers, converting the `Long` to number will cause loss in precision.\n   * @throws Error if the underlying connection, client or sender is closed.\n   * @throws MessagingError if the service returns an error while scheduling messages.\n   */\n  async scheduleMessages(\n    scheduledEnqueueTimeUtc: Date,\n    messages: SendableMessageInfo[]\n  ): Promise<Long[]> {\n    this._throwIfSenderOrConnectionClosed();\n    throwTypeErrorIfParameterMissing(\n      this._context.namespace.connectionId,\n      \"scheduledEnqueueTimeUtc\",\n      scheduledEnqueueTimeUtc\n    );\n    throwTypeErrorIfParameterMissing(this._context.namespace.connectionId, \"messages\", messages);\n    if (!Array.isArray(messages)) {\n      messages = [messages];\n    }\n\n    return this._context.managementClient!.scheduleMessages(scheduledEnqueueTimeUtc, messages);\n  }\n\n  /**\n   * Cancels a message that was scheduled to appear on a ServiceBus Queue/Subscription.\n   * @param sequenceNumber - The sequence number of the message to be cancelled.\n   * @returns Promise<void>\n   * @throws Error if the underlying connection, client or sender is closed.\n   * @throws MessagingError if the service returns an error while canceling a scheduled message.\n   */\n  async cancelScheduledMessage(sequenceNumber: Long): Promise<void> {\n    this._throwIfSenderOrConnectionClosed();\n    throwTypeErrorIfParameterMissing(\n      this._context.namespace.connectionId,\n      \"sequenceNumber\",\n      sequenceNumber\n    );\n    throwTypeErrorIfParameterNotLong(\n      this._context.namespace.connectionId,\n      \"sequenceNumber\",\n      sequenceNumber\n    );\n\n    return this._context.managementClient!.cancelScheduledMessages([sequenceNumber]);\n  }\n\n  /**\n   * Cancels multiple messages that were scheduled to appear on a ServiceBus Queue/Subscription.\n   * @param sequenceNumbers - An Array of sequence numbers of the messages to be cancelled.\n   * @returns Promise<void>\n   * @throws Error if the underlying connection, client or sender is closed.\n   * @throws MessagingError if the service returns an error while canceling scheduled messages.\n   */\n  async cancelScheduledMessages(sequenceNumbers: Long[]): Promise<void> {\n    this._throwIfSenderOrConnectionClosed();\n    throwTypeErrorIfParameterMissing(\n      this._context.namespace.connectionId,\n      \"sequenceNumbers\",\n      sequenceNumbers\n    );\n    if (!Array.isArray(sequenceNumbers)) {\n      sequenceNumbers = [sequenceNumbers];\n    }\n    throwTypeErrorIfParameterNotLongArray(\n      this._context.namespace.connectionId,\n      \"sequenceNumbers\",\n      sequenceNumbers\n    );\n\n    return this._context.managementClient!.cancelScheduledMessages(sequenceNumbers);\n  }\n\n  /**\n   * Closes the underlying AMQP sender link.\n   * Once closed, the sender cannot be used for any further operations.\n   * Use the `createSender` function on the QueueClient or TopicClient to instantiate a new Sender\n   *\n   * @returns {Promise<void>}\n   */\n  async close(): Promise<void> {\n    try {\n      this._isClosed = true;\n      if (\n        this._context.namespace.connection &&\n        this._context.namespace.connection.isOpen() &&\n        this._context.sender\n      ) {\n        await this._context.sender.close();\n      }\n    } catch (err) {\n      log.error(\n        \"[%s] An error occurred while closing the Sender for %s: %O\",\n        this._context.namespace.connectionId,\n        this._context.entityPath,\n        err\n      );\n      throw err;\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {\n  translate,\n  Constants,\n  MessagingError,\n  retry,\n  RetryOperationType,\n  RetryConfig,\n  ConditionErrorNameMapper,\n  ErrorNameConditionMapper\n} from \"@azure/amqp-common\";\nimport {\n  Receiver,\n  OnAmqpEvent,\n  EventContext,\n  ReceiverOptions,\n  AmqpError,\n  isAmqpError\n} from \"rhea-promise\";\nimport * as log from \"../log\";\nimport { LinkEntity } from \"./linkEntity\";\nimport { ClientEntityContext } from \"../clientEntityContext\";\nimport { ServiceBusMessage, DispositionType, ReceiveMode } from \"../serviceBusMessage\";\nimport { getUniqueName, calculateRenewAfterDuration } from \"../util/utils\";\nimport { MessageHandlerOptions } from \"./streamingReceiver\";\n\n/**\n * @internal\n */\ninterface CreateReceiverOptions {\n  onMessage: OnAmqpEventAsPromise;\n  onClose: OnAmqpEventAsPromise;\n  onSessionClose: OnAmqpEventAsPromise;\n  onError: OnAmqpEvent;\n  onSettled: OnAmqpEvent;\n  onSessionError: OnAmqpEvent;\n}\n\n/**\n * @internal\n */\nexport interface OnAmqpEventAsPromise extends OnAmqpEvent {\n  (context: EventContext): Promise<void>;\n}\n\n/**\n * @internal\n */\nexport interface PromiseLike {\n  resolve: (value?: any) => void;\n  reject: (reason?: any) => void;\n  timer: NodeJS.Timer;\n}\n\n/**\n * @internal\n */\nexport interface DispositionOptions {\n  propertiesToModify?: { [key: string]: any };\n  error?: AmqpError;\n}\n\n/**\n * @internal\n */\nexport enum ReceiverType {\n  batching = \"batching\",\n  streaming = \"streaming\"\n}\n\n/**\n * @internal\n */\nexport interface ReceiveOptions extends MessageHandlerOptions {\n  /**\n   * @property {number} [receiveMode] The mode in which messages should be received.\n   * Default: ReceiveMode.peekLock\n   */\n  receiveMode?: ReceiveMode;\n}\n\n/**\n * Describes the signature of the message handler passed to `registerMessageHandler` method.\n */\nexport interface OnMessage {\n  /**\n   * Handler for processing each incoming message.\n   */\n  (message: ServiceBusMessage): Promise<void>;\n}\n\n/**\n * Describes the signature of the error handler passed to `registerMessageHandler` method.\n */\nexport interface OnError {\n  /**\n   * Handler for any error that occurs while receiving or processing messages.\n   */\n  (error: MessagingError | Error): void;\n}\n\n/**\n * @internal\n * Describes the MessageReceiver that will receive messages from ServiceBus.\n * @class MessageReceiver\n */\nexport class MessageReceiver extends LinkEntity {\n  /**\n   * @property {string} receiverType The type of receiver: \"batching\" or \"streaming\".\n   */\n  receiverType: ReceiverType;\n  /**\n   * @property {number} [maxConcurrentCalls] The maximum number of messages that should be\n   * processed concurrently while in streaming mode. Once this limit has been reached, more\n   * messages will not be received until the user's message handler has completed processing current message.\n   * Default: 1\n   */\n  maxConcurrentCalls: number = 1;\n  /**\n   * @property {number} [receiveMode] The mode in which messages should be received.\n   * Default: ReceiveMode.peekLock\n   */\n  receiveMode: ReceiveMode;\n  /**\n   * @property {boolean} autoComplete Indicates whether `Message.complete()` should be called\n   * automatically after the message processing is complete while receiving messages with handlers.\n   * Default: false.\n   */\n  autoComplete: boolean;\n  /**\n   * @property {number} maxAutoRenewDurationInSeconds The maximum duration within which the\n   * lock will be renewed automatically. This value should be greater than the longest message\n   * lock duration; for example, the `lockDuration` property on the received message.\n   *\n   * Default: `300` (5 minutes);\n   */\n  maxAutoRenewDurationInSeconds: number;\n  /**\n   * @property {number} [newMessageWaitTimeoutInSeconds] The maximum amount of idle time the\n   * receiver will wait after a message has been received. If no messages are received by this\n   * time then the receive operation will end.\n   */\n  newMessageWaitTimeoutInSeconds?: number;\n  /**\n   * @property {boolean} autoRenewLock Should lock renewal happen automatically.\n   */\n  autoRenewLock: boolean;\n  /**\n   * @property {Receiver} [_receiver] The AMQP receiver link.\n   * @protected\n   */\n  protected _receiver?: Receiver;\n  /**\n   * @property {Map<number, Promise<any>>} _deliveryDispositionMap Maintains a map of deliveries that\n   * are being actively disposed. It acts as a store for correlating the responses received for\n   * active dispositions.\n   */\n  protected _deliveryDispositionMap: Map<number, PromiseLike> = new Map<number, PromiseLike>();\n  /**\n   * @property {OnMessage} _onMessage The message handler provided by the user that will be wrapped\n   * inside _onAmqpMessage.\n   * @protected\n   */\n  protected _onMessage!: OnMessage;\n  /**\n   * @property {OnMessage} _onError The error handler provided by the user that will be wrapped\n   * inside _onAmqpError.\n   * @protected\n   */\n  protected _onError?: OnError;\n  /**\n   * @property {OnAmqpEventAsPromise} _onAmqpMessage The message handler that will be set as the handler on the\n   * underlying rhea receiver for the \"message\" event.\n   * @protected\n   */\n  protected _onAmqpMessage: OnAmqpEventAsPromise;\n  /**\n   * @property {OnAmqpEventAsPromise} _onAmqpClose The message handler that will be set as the handler on the\n   * underlying rhea receiver for the \"receiver_close\" event.\n   * @protected\n   */\n  protected _onAmqpClose: OnAmqpEventAsPromise;\n  /**\n   * @property {OnAmqpEvent} _onSessionError The message handler that will be set as the handler on\n   * the underlying rhea receiver's session for the \"session_error\" event.\n   * @protected\n   */\n  protected _onSessionError: OnAmqpEvent;\n  /**\n   * @property {OnAmqpEventAsPromise} _onSessionClose The message handler that will be set as the handler on\n   * the underlying rhea receiver's session for the \"session_close\" event.\n   * @protected\n   */\n  protected _onSessionClose: OnAmqpEventAsPromise;\n  /**\n   * @property {OnAmqpEvent} _onAmqpError The message handler that will be set as the handler on the\n   * underlying rhea receiver for the \"receiver_error\" event.\n   * @protected\n   */\n  protected _onAmqpError: OnAmqpEvent;\n  /**\n   * @property {OnAmqpEvent} _onSettled The message handler that will be set as the handler on the\n   * underlying rhea receiver for the \"settled\" event.\n   * @protected\n   */\n  protected _onSettled: OnAmqpEvent;\n  /**\n   * @property {boolean} wasCloseInitiated Denotes if receiver was explicitly closed by user.\n   * @protected\n   */\n  protected wasCloseInitiated?: boolean;\n  /**\n   * @property {Map<string, Function>} _messageRenewLockTimers Maintains a map of messages for which\n   * the lock is automatically renewed.\n   * @protected\n   */\n  protected _messageRenewLockTimers: Map<string, NodeJS.Timer | undefined> = new Map<\n    string,\n    NodeJS.Timer | undefined\n  >();\n  /**\n   * @property {NodeJS.Timer} _newMessageReceivedTimer The timer that keeps track of time since the\n   * last message was received.\n   */\n  protected _newMessageReceivedTimer?: NodeJS.Timer;\n  /**\n   * Resets the `_newMessageReceivedTimer` timer when a new message is received.\n   */\n  protected resetTimerOnNewMessageReceived: () => void;\n  /**\n   * @property {Function} _clearMessageLockRenewTimer Clears the message lock renew timer for a\n   * specific messageId.\n   * @protected\n   */\n  protected _clearMessageLockRenewTimer: (messageId: string) => void;\n  /**\n   * @property {Function} _clearMessageLockRenewTimer Clears the message lock renew timer for all\n   * the active messages.\n   * @protected\n   */\n  protected _clearAllMessageLockRenewTimers: () => void;\n  constructor(context: ClientEntityContext, receiverType: ReceiverType, options?: ReceiveOptions) {\n    super(context.entityPath, context, {\n      address: context.entityPath,\n      audience: `${context.namespace.config.endpoint}${context.entityPath}`\n    });\n    if (!options) options = {};\n    this.wasCloseInitiated = false;\n    this.receiverType = receiverType;\n    this.receiveMode = options.receiveMode || ReceiveMode.peekLock;\n    if (typeof options.maxConcurrentCalls === \"number\" && options.maxConcurrentCalls > 0) {\n      this.maxConcurrentCalls = options.maxConcurrentCalls;\n    }\n    this.resetTimerOnNewMessageReceived = () => {\n      /** */\n    };\n    // If explicitly set to false then autoComplete is false else true (default).\n    this.autoComplete = options.autoComplete === false ? options.autoComplete : true;\n    this.maxAutoRenewDurationInSeconds =\n      options.maxMessageAutoRenewLockDurationInSeconds != null\n        ? options.maxMessageAutoRenewLockDurationInSeconds\n        : 300;\n    this.autoRenewLock =\n      this.maxAutoRenewDurationInSeconds > 0 && this.receiveMode === ReceiveMode.peekLock;\n    this._clearMessageLockRenewTimer = (messageId: string) => {\n      if (this._messageRenewLockTimers.has(messageId)) {\n        clearTimeout(this._messageRenewLockTimers.get(messageId) as NodeJS.Timer);\n        log.receiver(\n          \"[%s] Cleared the message renew lock timer for message with id '%s'.\",\n          this._context.namespace.connectionId,\n          messageId\n        );\n        this._messageRenewLockTimers.delete(messageId);\n      }\n    };\n    this._clearAllMessageLockRenewTimers = () => {\n      log.receiver(\n        \"[%s] Clearing message renew lock timers for all the active messages.\",\n        this._context.namespace.connectionId\n      );\n      for (const messageId of this._messageRenewLockTimers.keys()) {\n        this._clearMessageLockRenewTimer(messageId);\n      }\n    };\n    // setting all the handlers\n    this._onSettled = (context: EventContext) => {\n      const connectionId = this._context.namespace.connectionId;\n      const delivery = context.delivery;\n      if (delivery) {\n        const id = delivery.id;\n        const state = delivery.remote_state;\n        const settled = delivery.remote_settled;\n        log.receiver(\n          \"[%s] Delivery with id %d, remote_settled: %s, remote_state: %o has been \" + \"received.\",\n          connectionId,\n          id,\n          settled,\n          state && state.error ? state.error : state\n        );\n        if (settled && this._deliveryDispositionMap.has(id)) {\n          const promise = this._deliveryDispositionMap.get(id) as PromiseLike;\n          clearTimeout(promise.timer);\n          log.receiver(\n            \"[%s] Found the delivery with id %d in the map and cleared the timer.\",\n            connectionId,\n            id\n          );\n          const deleteResult = this._deliveryDispositionMap.delete(id);\n          log.receiver(\n            \"[%s] Successfully deleted the delivery with id %d from the map.\",\n            connectionId,\n            id,\n            deleteResult\n          );\n          if (state && state.error && (state.error.condition || state.error.description)) {\n            const error = translate(state.error);\n            return promise.reject(error);\n          }\n\n          return promise.resolve();\n        }\n      }\n    };\n\n    this._onAmqpMessage = async (context: EventContext) => {\n      // If the receiver got closed in PeekLock mode, avoid processing the message as we\n      // cannot settle the message.\n      if (\n        this.receiveMode === ReceiveMode.peekLock &&\n        (!this._receiver || !this._receiver.isOpen())\n      ) {\n        log.error(\n          \"[%s] Not calling the user's message handler for the current message \" +\n            \"as the receiver '%s' is closed\",\n          this._context.namespace.connectionId,\n          this.name\n        );\n        return;\n      }\n\n      this.resetTimerOnNewMessageReceived();\n      const connectionId = this._context.namespace.connectionId;\n      const bMessage: ServiceBusMessage = new ServiceBusMessage(\n        this._context,\n        context.message!,\n        context.delivery!,\n        true\n      );\n\n      if (this.autoRenewLock && bMessage.lockToken) {\n        const lockToken = bMessage.lockToken;\n        // - We need to renew locks before they expire by looking at bMessage.lockedUntilUtc.\n        // - This autorenewal needs to happen **NO MORE** than maxAutoRenewDurationInSeconds\n        // - We should be able to clear the renewal timer when the user's message handler\n        // is done (whether it succeeds or fails).\n        // Setting the messageId with undefined value in the _messageRenewockTimers Map because we\n        // track state by checking the presence of messageId in the map. It is removed from the map\n        // when an attempt is made to settle the message (either by the user or by the sdk) OR\n        // when the execution of user's message handler completes.\n        this._messageRenewLockTimers.set(bMessage.messageId as string, undefined);\n        log.receiver(\n          \"[%s] message with id '%s' is locked until %s.\",\n          connectionId,\n          bMessage.messageId,\n          bMessage.lockedUntilUtc!.toString()\n        );\n        const totalAutoLockRenewDuration = Date.now() + this.maxAutoRenewDurationInSeconds * 1000;\n        log.receiver(\n          \"[%s] Total autolockrenew duration for message with id '%s' is: \",\n          connectionId,\n          bMessage.messageId,\n          new Date(totalAutoLockRenewDuration).toString()\n        );\n        const autoRenewLockTask = (): void => {\n          if (\n            new Date(totalAutoLockRenewDuration) > bMessage.lockedUntilUtc! &&\n            Date.now() < totalAutoLockRenewDuration\n          ) {\n            if (this._messageRenewLockTimers.has(bMessage.messageId as string)) {\n              // TODO: We can run into problems with clock skew between the client and the server.\n              // It would be better to calculate the duration based on the \"lockDuration\" property\n              // of the queue. However, we do not have the management plane of the client ready for\n              // now. Hence we rely on the lockedUntilUtc property on the message set by ServiceBus.\n              const amount = calculateRenewAfterDuration(bMessage.lockedUntilUtc!);\n              log.receiver(\n                \"[%s] Sleeping for %d milliseconds while renewing the lock for \" +\n                  \"message with id '%s' is: \",\n                connectionId,\n                amount,\n                bMessage.messageId\n              );\n              // Setting the value of the messageId to the actual timer. This will be cleared when\n              // an attempt is made to settle the message (either by the user or by the sdk) OR\n              // when the execution of user's message handler completes.\n              this._messageRenewLockTimers.set(\n                bMessage.messageId as string,\n                setTimeout(async () => {\n                  try {\n                    log.receiver(\n                      \"[%s] Attempting to renew the lock for message with id '%s'.\",\n                      connectionId,\n                      bMessage.messageId\n                    );\n                    bMessage.lockedUntilUtc = await this._context.managementClient!.renewLock(\n                      lockToken\n                    );\n                    log.receiver(\n                      \"[%s] Successfully renewed the lock for message with id '%s'.\",\n                      connectionId,\n                      bMessage.messageId\n                    );\n                    log.receiver(\n                      \"[%s] Calling the autorenewlock task again for message with \" + \"id '%s'.\",\n                      connectionId,\n                      bMessage.messageId\n                    );\n                    autoRenewLockTask();\n                  } catch (err) {\n                    log.error(\n                      \"[%s] An error occured while auto renewing the message lock '%s' \" +\n                        \"for message with id '%s': %O.\",\n                      connectionId,\n                      bMessage.lockToken,\n                      bMessage.messageId,\n                      err\n                    );\n                    // Let the user know that there was an error renewing the message lock.\n                    this._onError!(err);\n                  }\n                }, amount)\n              );\n            } else {\n              log.receiver(\n                \"[%s] Looks like the message lock renew timer has already been \" +\n                  \"cleared for message with id '%s'.\",\n                connectionId,\n                bMessage.messageId\n              );\n            }\n          } else {\n            log.receiver(\n              \"[%s] Current time %s exceeds the total autolockrenew duration %s for \" +\n                \"message with messageId '%s'. Hence we will stop the autoLockRenewTask.\",\n              connectionId,\n              new Date(Date.now()).toString(),\n              new Date(totalAutoLockRenewDuration).toString(),\n              bMessage.messageId\n            );\n            this._clearMessageLockRenewTimer(bMessage.messageId as string);\n          }\n        };\n        // start\n        autoRenewLockTask();\n      }\n      try {\n        await this._onMessage(bMessage);\n        this._clearMessageLockRenewTimer(bMessage.messageId as string);\n      } catch (err) {\n        // This ensures we call users' error handler when users' message handler throws.\n        if (!isAmqpError(err)) {\n          log.error(\n            \"[%s] An error occurred while running user's message handler for the message \" +\n              \"with id '%s' on the receiver '%s': %O\",\n            connectionId,\n            bMessage.messageId,\n            this.name,\n            err\n          );\n          this._onError!(err);\n        }\n\n        // Do not want renewLock to happen unnecessarily, while abandoning the message. Hence,\n        // doing this here. Otherwise, this should be done in finally.\n        this._clearMessageLockRenewTimer(bMessage.messageId as string);\n        const error = translate(err);\n        // Nothing much to do if user's message handler throws. Let us try abandoning the message.\n        if (\n          !bMessage.delivery.remote_settled &&\n          error.name !== ConditionErrorNameMapper[\"com.microsoft:message-lock-lost\"] &&\n          this.receiveMode === ReceiveMode.peekLock &&\n          this.isOpen() // only try to abandon the messages if the connection is still open\n        ) {\n          try {\n            log.error(\n              \"[%s] Abandoning the message with id '%s' on the receiver '%s' since \" +\n                \"an error occured: %O.\",\n              connectionId,\n              bMessage.messageId,\n              this.name,\n              error\n            );\n            await bMessage.abandon();\n          } catch (abandonError) {\n            const translatedError = translate(abandonError);\n            log.error(\n              \"[%s] An error occurred while abandoning the message with id '%s' on the \" +\n                \"receiver '%s': %O.\",\n              connectionId,\n              bMessage.messageId,\n              this.name,\n              translatedError\n            );\n            this._onError!(translatedError);\n          }\n        }\n        return;\n      } finally {\n        if (this._receiver) {\n          this._receiver.addCredit(1);\n        }\n      }\n\n      // If we've made it this far, then user's message handler completed fine. Let us try\n      // completing the message.\n      if (\n        this.autoComplete &&\n        this.receiveMode === ReceiveMode.peekLock &&\n        !bMessage.delivery.remote_settled\n      ) {\n        try {\n          log[this.receiverType](\n            \"[%s] Auto completing the message with id '%s' on \" + \"the receiver '%s'.\",\n            connectionId,\n            bMessage.messageId,\n            this.name\n          );\n          await bMessage.complete();\n        } catch (completeError) {\n          const translatedError = translate(completeError);\n          log.error(\n            \"[%s] An error occurred while completing the message with id '%s' on the \" +\n              \"receiver '%s': %O.\",\n            connectionId,\n            bMessage.messageId,\n            this.name,\n            translatedError\n          );\n          this._onError!(translatedError);\n        }\n      }\n    };\n\n    this._onAmqpError = (context: EventContext) => {\n      const connectionId = this._context.namespace.connectionId;\n      const receiver = this._receiver || context.receiver!;\n      const receiverError = context.receiver && context.receiver.error;\n      if (receiverError) {\n        const sbError = translate(receiverError);\n        log.error(\n          \"[%s] An error occurred for Receiver '%s': %O.\",\n          connectionId,\n          this.name,\n          sbError\n        );\n        if (!sbError.retryable) {\n          if (receiver && !receiver.isItselfClosed()) {\n            log.error(\n              \"[%s] Since the user did not close the receiver and the error is not \" +\n                \"retryable, we let the user know about it by calling the user's error handler.\",\n              connectionId\n            );\n            this._onError!(sbError);\n          } else {\n            log.error(\n              \"[%s] The received error is not retryable. However, the receiver was \" +\n                \"closed by the user. Hence not notifying the user's error handler.\",\n              connectionId\n            );\n          }\n        } else {\n          log.error(\n            \"[%s] Since received error is retryable, we will NOT notify the user's \" +\n              \"error handler.\",\n            connectionId\n          );\n        }\n      }\n      if (this._newMessageReceivedTimer) {\n        clearTimeout(this._newMessageReceivedTimer);\n      }\n    };\n\n    this._onSessionError = (context: EventContext) => {\n      const connectionId = this._context.namespace.connectionId;\n      const receiver = this._receiver || context.receiver!;\n      const sessionError = context.session && context.session.error;\n      if (sessionError) {\n        const sbError = translate(sessionError);\n        log.error(\n          \"[%s] An error occurred on the session for Receiver '%s': %O.\",\n          connectionId,\n          this.name,\n          sbError\n        );\n        if (receiver && !receiver.isSessionItselfClosed() && !sbError.retryable) {\n          log.error(\n            \"[%s] Since the user did not close the receiver and the session error is not \" +\n              \"retryable, we let the user know about it by calling the user's error handler.\",\n            connectionId\n          );\n          this._onError!(sbError);\n        }\n      }\n      if (this._newMessageReceivedTimer) {\n        clearTimeout(this._newMessageReceivedTimer);\n      }\n    };\n\n    this._onAmqpClose = async (context: EventContext) => {\n      const connectionId = this._context.namespace.connectionId;\n      const receiverError = context.receiver && context.receiver.error;\n      const receiver = this._receiver || context.receiver!;\n      if (receiverError) {\n        log.error(\n          \"[%s] 'receiver_close' event occurred for receiver '%s' with address '%s'. \" +\n            \"The associated error is: %O\",\n          connectionId,\n          this.name,\n          this.address,\n          receiverError\n        );\n      }\n      this._clearAllMessageLockRenewTimers();\n      if (receiver && !receiver.isItselfClosed()) {\n        if (!this.isConnecting) {\n          log.error(\n            \"[%s] 'receiver_close' event occurred on the receiver '%s' with address '%s' \" +\n              \"and the sdk did not initiate this. The receiver is not reconnecting. Hence, calling \" +\n              \"detached from the _onAmqpClose() handler.\",\n            connectionId,\n            this.name,\n            this.address\n          );\n          await this.onDetached(receiverError);\n        } else {\n          log.error(\n            \"[%s] 'receiver_close' event occurred on the receiver '%s' with address '%s' \" +\n              \"and the sdk did not initate this. Moreover the receiver is already re-connecting. \" +\n              \"Hence not calling detached from the _onAmqpClose() handler.\",\n            connectionId,\n            this.name,\n            this.address\n          );\n        }\n      } else {\n        log.error(\n          \"[%s] 'receiver_close' event occurred on the receiver '%s' with address '%s' \" +\n            \"because the sdk initiated it. Hence not calling detached from the _onAmqpClose\" +\n            \"() handler.\",\n          connectionId,\n          this.name,\n          this.address\n        );\n      }\n    };\n\n    this._onSessionClose = async (context: EventContext) => {\n      const connectionId = this._context.namespace.connectionId;\n      const receiver = this._receiver || context.receiver!;\n      const sessionError = context.session && context.session.error;\n      if (sessionError) {\n        log.error(\n          \"[%s] 'session_close' event occurred for receiver '%s' with address '%s'. \" +\n            \"The associated error is: %O\",\n          connectionId,\n          this.name,\n          this.address,\n          sessionError\n        );\n      }\n      this._clearAllMessageLockRenewTimers();\n      if (receiver && !receiver.isSessionItselfClosed()) {\n        if (!this.isConnecting) {\n          log.error(\n            \"[%s] 'session_close' event occurred on the session of receiver '%s' with \" +\n              \"address '%s' and the sdk did not initiate this. Hence calling detached from the \" +\n              \"_onSessionClose() handler.\",\n            connectionId,\n            this.name,\n            this.address\n          );\n          await this.onDetached(sessionError);\n        } else {\n          log.error(\n            \"[%s] 'session_close' event occurred on the session of receiver '%s' with \" +\n              \"address '%s' and the sdk did not initiate this. Moreover the receiver is already \" +\n              \"re-connecting. Hence not calling detached from the _onSessionClose() handler.\",\n            connectionId,\n            this.name,\n            this.address\n          );\n        }\n      } else {\n        log.error(\n          \"[%s] 'session_close' event occurred on the session of receiver '%s' with address \" +\n            \"'%s' because the sdk initiated it. Hence not calling detached from the _onSessionClose\" +\n            \"() handler.\",\n          connectionId,\n          this.name,\n          this.address\n        );\n      }\n    };\n  }\n\n  /**\n   * Creates the options that need to be specified while creating an AMQP receiver link.\n   */\n  protected _createReceiverOptions(\n    useNewName?: boolean,\n    options?: CreateReceiverOptions\n  ): ReceiverOptions {\n    if (!options) {\n      options = {\n        onMessage: (context: EventContext) =>\n          this._onAmqpMessage(context).catch(() => {\n            /* */\n          }),\n        onClose: (context: EventContext) =>\n          this._onAmqpClose(context).catch(() => {\n            /* */\n          }),\n        onSessionClose: (context: EventContext) =>\n          this._onSessionClose(context).catch(() => {\n            /* */\n          }),\n        onError: this._onAmqpError,\n        onSessionError: this._onSessionError,\n        onSettled: this._onSettled\n      };\n    }\n    const rcvrOptions: ReceiverOptions = {\n      name: useNewName ? getUniqueName(this._context.entityPath) : this.name,\n      autoaccept: this.receiveMode === ReceiveMode.receiveAndDelete ? true : false,\n      // receiveAndDelete -> first(0), peekLock -> second (1)\n      rcv_settle_mode: this.receiveMode === ReceiveMode.receiveAndDelete ? 0 : 1,\n      // receiveAndDelete -> settled (1), peekLock -> unsettled (0)\n      snd_settle_mode: this.receiveMode === ReceiveMode.receiveAndDelete ? 1 : 0,\n      source: {\n        address: this.address\n      },\n      credit_window: 0,\n      ...options\n    };\n\n    return rcvrOptions;\n  }\n\n  /**\n   * Creates a new AMQP receiver under a new AMQP session.\n   * @protected\n   *\n   * @returns {Promise<void>} Promise<void>.\n   */\n  protected async _init(options?: ReceiverOptions): Promise<void> {\n    const connectionId = this._context.namespace.connectionId;\n    try {\n      if (!this.isOpen() && !this.isConnecting) {\n        log.error(\n          \"[%s] The receiver '%s' with address '%s' is not open and is not currently \" +\n            \"establishing itself. Hence let's try to connect.\",\n          connectionId,\n          this.name,\n          this.address\n        );\n\n        if (options && options.name) {\n          this.name = options.name;\n        }\n\n        this.isConnecting = true;\n        await this._negotiateClaim();\n        if (!options) {\n          options = this._createReceiverOptions();\n        }\n        log.error(\n          \"[%s] Trying to create receiver '%s' with options %O\",\n          connectionId,\n          this.name,\n          options\n        );\n\n        this._receiver = await this._context.namespace.connection.createReceiver(options);\n        this.isConnecting = false;\n        log.error(\n          \"[%s] Receiver '%s' with address '%s' has established itself.\",\n          connectionId,\n          this.name,\n          this.address\n        );\n        log[this.receiverType](\n          \"Promise to create the receiver resolved. \" + \"Created receiver with name: \",\n          this.name\n        );\n        log[this.receiverType](\n          \"[%s] Receiver '%s' created with receiver options: %O\",\n          connectionId,\n          this.name,\n          options\n        );\n        // It is possible for someone to close the receiver and then start it again.\n        // Thus make sure that the receiver is present in the client cache.\n        if (this.receiverType === ReceiverType.streaming && !this._context.streamingReceiver) {\n          this._context.streamingReceiver = this as any;\n        } else if (this.receiverType === ReceiverType.batching && !this._context.batchingReceiver) {\n          this._context.batchingReceiver = this as any;\n        }\n        await this._ensureTokenRenewal();\n      } else {\n        log.error(\n          \"[%s] The receiver '%s' with address '%s' is open -> %s and is connecting \" +\n            \"-> %s. Hence not reconnecting.\",\n          connectionId,\n          this.name,\n          this.address,\n          this.isOpen(),\n          this.isConnecting\n        );\n      }\n    } catch (err) {\n      this.isConnecting = false;\n      err = translate(err);\n      log.error(\n        \"[%s] An error occured while creating the receiver '%s': %O\",\n        this._context.namespace.connectionId,\n        this.name,\n        err\n      );\n      throw err;\n    }\n  }\n\n  protected _deleteFromCache(): void {\n    this._receiver = undefined;\n    if (this.receiverType === ReceiverType.streaming) {\n      this._context.streamingReceiver = undefined;\n    } else if (this.receiverType === ReceiverType.batching) {\n      this._context.batchingReceiver = undefined;\n    }\n    log.error(\n      \"[%s] Deleted the receiver '%s' from the client cache.\",\n      this._context.namespace.connectionId,\n      this.name\n    );\n  }\n\n  /**\n   * Will reconnect the receiver link if necessary.\n   * @param {AmqpError | Error} [receiverError] The receiver error if any.\n   * @returns {Promise<void>} Promise<void>.\n   */\n  async onDetached(receiverError?: AmqpError | Error): Promise<void> {\n    const connectionId = this._context.namespace.connectionId;\n    try {\n      // Local 'wasCloseInitiated' serves same purpose as {this.wasCloseInitiated}\n      // but the condition is inferred based on state of receiver in context of network disconnect scenario\n      const wasCloseInitiated = this._receiver && this._receiver.isItselfClosed();\n      // Clears the token renewal timer. Closes the link and its session if they are open.\n      // Removes the link and its session if they are present in rhea's cache.\n      await this._closeLink(this._receiver);\n\n      if (this.receiverType === ReceiverType.batching) {\n        log.error(\n          \"[%s] Receiver '%s' with address '%s' is a Batching Receiver, so we will not be \" +\n            \"re-establishing the receiver link.\",\n          connectionId,\n          this.name,\n          this.address\n        );\n        return;\n      }\n\n      // We should attempt to reopen only when the receiver(sdk) did not initiate the close\n      let shouldReopen = false;\n      if (receiverError && !wasCloseInitiated) {\n        const translatedError = translate(receiverError);\n        if (translatedError.retryable) {\n          shouldReopen = true;\n          log.error(\n            \"[%s] close() method of Receiver '%s' with address '%s' was not called. There \" +\n              \"was an accompanying error and it is retryable. This is a candidate for re-establishing \" +\n              \"the receiver link.\",\n            connectionId,\n            this.name,\n            this.address\n          );\n        } else {\n          log.error(\n            \"[%s] close() method of Receiver '%s' with address '%s' was not called. There \" +\n              \"was an accompanying error and it is NOT retryable. Hence NOT re-establishing \" +\n              \"the receiver link.\",\n            connectionId,\n            this.name,\n            this.address\n          );\n        }\n      } else if (!wasCloseInitiated) {\n        shouldReopen = true;\n        log.error(\n          \"[%s] close() method of Receiver '%s' with address '%s' was not called. \" +\n            \"There was no accompanying error as well. This is a candidate for re-establishing \" +\n            \"the receiver link.\",\n          connectionId,\n          this.name,\n          this.address\n        );\n      } else {\n        const state: any = {\n          wasCloseInitiated: wasCloseInitiated,\n          receiverError: receiverError,\n          _receiver: this._receiver\n        };\n        log.error(\n          \"[%s] Something went wrong. State of Receiver '%s' with address '%s' is: %O\",\n          connectionId,\n          this.name,\n          this.address,\n          state\n        );\n      }\n      if (shouldReopen) {\n        // provide a new name to the link while re-connecting it. This ensures that\n        // the service does not send an error stating that the link is still open.\n        const options: ReceiverOptions = this._createReceiverOptions(true);\n\n        // shall retry forever at an interval of 15 seconds if the error is a retryable error\n        // else bail out when the error is not retryable or the oepration succeeds.\n        const config: RetryConfig<void> = {\n          operation: () =>\n            this._init(options).then(async () => {\n              if (this.wasCloseInitiated) {\n                log.error(\n                  \"[%s] close() method of Receiver '%s' with address '%s' was called. \" +\n                    \"by the time the receiver finished getting created. Hence, disallowing messages from being received. \",\n                  connectionId,\n                  this.name,\n                  this.address\n                );\n                await this.close();\n              } else {\n                if (this._receiver && this.receiverType === ReceiverType.streaming) {\n                  this._receiver.addCredit(this.maxConcurrentCalls);\n                }\n              }\n              return;\n            }),\n          connectionId: connectionId,\n          operationType: RetryOperationType.receiverLink,\n          times: Constants.defaultConnectionRetryAttempts,\n          connectionHost: this._context.namespace.config.host,\n          delayInSeconds: 15\n        };\n        if (!this.wasCloseInitiated) {\n          await retry<void>(config);\n        }\n      }\n    } catch (err) {\n      log.error(\n        \"[%s] An error occurred while processing detached() of Receiver '%s': %O \",\n        connectionId,\n        this.name,\n        this.address,\n        err\n      );\n      if (typeof this._onError === \"function\") {\n        log.error(\n          \"[%s] Unable to automatically reconnect Receiver '%s' with address '%s'.\",\n          connectionId,\n          this.name,\n          this.address\n        );\n        try {\n          this._onError(err);\n        } catch (err) {\n          log.error(\n            \"[%s] User-code error in error handler called after disconnect: %O\",\n            connectionId,\n            err\n          );\n        }\n      }\n    }\n  }\n\n  /**\n   * Closes the underlying AMQP receiver.\n   * @return {Promise<void>} Promise<void>.\n   */\n  async close(): Promise<void> {\n    this.wasCloseInitiated = true;\n    log.receiver(\n      \"[%s] Closing the [%s]Receiver for entity '%s'.\",\n      this._context.namespace.connectionId,\n      this.receiverType,\n      this._context.entityPath\n    );\n    if (this._newMessageReceivedTimer) clearTimeout(this._newMessageReceivedTimer);\n    this._clearAllMessageLockRenewTimers();\n    if (this._receiver) {\n      const receiverLink = this._receiver;\n      this._deleteFromCache();\n      await this._closeLink(receiverLink);\n    }\n  }\n\n  /**\n   * Settles the message with the specified disposition.\n   * @param message The ServiceBus Message that needs to be settled.\n   * @param operation The disposition type.\n   * @param options Optional parameters that can be provided while disposing the message.\n   */\n  async settleMessage(\n    message: ServiceBusMessage,\n    operation: DispositionType,\n    options?: DispositionOptions\n  ): Promise<any> {\n    return new Promise((resolve, reject) => {\n      if (!options) options = {};\n      if (operation.match(/^(complete|abandon|defer|deadletter)$/) == null) {\n        return reject(new Error(`operation: '${operation}' is not a valid operation.`));\n      }\n      this._clearMessageLockRenewTimer(message.messageId as string);\n      const delivery = message.delivery;\n      const timer = setTimeout(() => {\n        this._deliveryDispositionMap.delete(delivery.id);\n\n        log.receiver(\n          \"[%s] Disposition for delivery id: %d, did not complete in %d milliseconds. \" +\n            \"Hence rejecting the promise with timeout error.\",\n          this._context.namespace.connectionId,\n          delivery.id,\n          Constants.defaultOperationTimeoutInSeconds * 1000\n        );\n\n        const e: AmqpError = {\n          condition: ErrorNameConditionMapper.ServiceUnavailableError,\n          description:\n            \"Operation to settle the message has timed out. The disposition of the \" +\n            \"message may or may not be successful\"\n        };\n        return reject(translate(e));\n      }, Constants.defaultOperationTimeoutInSeconds * 1000);\n      this._deliveryDispositionMap.set(delivery.id, {\n        resolve: resolve,\n        reject: reject,\n        timer: timer\n      });\n      if (operation === DispositionType.complete) {\n        delivery.accept();\n      } else if (operation === DispositionType.abandon) {\n        const params: any = {\n          undeliverable_here: false\n        };\n        if (options.propertiesToModify) params.message_annotations = options.propertiesToModify;\n        delivery.modified(params);\n      } else if (operation === DispositionType.defer) {\n        const params: any = {\n          undeliverable_here: true\n        };\n        if (options.propertiesToModify) params.message_annotations = options.propertiesToModify;\n        delivery.modified(params);\n      } else if (operation === DispositionType.deadletter) {\n        delivery.reject(options.error || {});\n      }\n    });\n  }\n\n  /**\n   * Determines whether the AMQP receiver link is open. If open then returns true else returns false.\n   * @return {boolean} boolean\n   */\n  isOpen(): boolean {\n    const result: boolean = this._receiver! && this._receiver!.isOpen();\n    log.error(\n      \"[%s] Receiver '%s' with address '%s' is open? -> %s\",\n      this._context.namespace.connectionId,\n      this.name,\n      this.address,\n      result\n    );\n    return result;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {\n  MessageReceiver,\n  ReceiveOptions,\n  OnMessage,\n  OnError,\n  ReceiverType\n} from \"./messageReceiver\";\n\nimport { ClientEntityContext } from \"../clientEntityContext\";\n\nimport * as log from \"../log\";\nimport { throwErrorIfConnectionClosed } from \"../util/errors\";\n\n/**\n * Describes the options passed to `registerMessageHandler` method when receiving messages from a\n * Queue/Subscription which does not have sessions enabled.\n */\nexport interface MessageHandlerOptions {\n  /**\n   * @property Indicates whether the `complete()` method on the message should automatically be\n   * called by the sdk after the user provided onMessage handler has been executed.\n   * Calling `complete()` on a message removes it from the Queue/Subscription.\n   * - **Default**: `true`.\n   */\n  autoComplete?: boolean;\n  /**\n   * @property The maximum duration in seconds until which the lock on the message will be renewed\n   * by the sdk automatically. This auto renewal stops once the message is settled or once the user\n   * provided onMessage handler completes ite execution.\n   *\n   * - **Default**: `300` seconds (5 minutes).\n   * - **To disable autolock renewal**, set this to `0`.\n   */\n  maxMessageAutoRenewLockDurationInSeconds?: number;\n  /**\n   * @property The maximum number of concurrent calls that the sdk can make to the user's message\n   * handler. Once this limit has been reached, further messages will not be received until atleast\n   * one of the calls to the user's message handler has completed.\n   * - **Default**: `1`.\n   */\n  maxConcurrentCalls?: number;\n}\n\n/**\n * @internal\n * Describes the streaming receiver where the user can receive the message\n * by providing handler functions.\n * @class StreamingReceiver\n * @extends MessageReceiver\n */\nexport class StreamingReceiver extends MessageReceiver {\n  /**\n   * Instantiate a new Streaming receiver for receiving messages with handlers.\n   *\n   * @constructor\n   * @param {ClientEntityContext} context                      The client entity context.\n   * @param {ReceiveOptions} [options]                         Options for how you'd like to connect.\n   */\n  constructor(context: ClientEntityContext, options?: ReceiveOptions) {\n    super(context, ReceiverType.streaming, options);\n\n    this.resetTimerOnNewMessageReceived = () => {\n      if (this._newMessageReceivedTimer) clearTimeout(this._newMessageReceivedTimer);\n      if (this.newMessageWaitTimeoutInSeconds) {\n        this._newMessageReceivedTimer = setTimeout(async () => {\n          const msg =\n            `StreamingReceiver '${this.name}' did not receive any messages in ` +\n            `the last ${this.newMessageWaitTimeoutInSeconds} seconds. ` +\n            `Hence ending this receive operation.`;\n          log.error(\"[%s] %s\", this._context.namespace.connectionId, msg);\n\n          await this.close();\n        }, this.newMessageWaitTimeoutInSeconds * 1000);\n      }\n    };\n  }\n\n  /**\n   * Starts the receiver by establishing an AMQP session and an AMQP receiver link on the session.\n   *\n   * @param {OnMessage} onMessage The message handler to receive servicebus messages.\n   * @param {OnError} onError The error handler to receive an error that occurs while receivin messages.\n   */\n  receive(onMessage: OnMessage, onError: OnError): void {\n    throwErrorIfConnectionClosed(this._context.namespace);\n    this._onMessage = onMessage;\n    this._onError = onError;\n\n    if (this._receiver) {\n      this._receiver.addCredit(this.maxConcurrentCalls);\n    }\n  }\n\n  /**\n   * Creates a streaming receiver.\n   * @static\n   *\n   * @param {ClientEntityContext} context    The connection context.\n   * @param {ReceiveOptions} [options]     Receive options.\n   * @return {Promise<StreamingReceiver>} A promise that resolves with an instance of StreamingReceiver.\n   */\n  static async create(\n    context: ClientEntityContext,\n    options?: ReceiveOptions\n  ): Promise<StreamingReceiver> {\n    throwErrorIfConnectionClosed(context.namespace);\n    if (!options) options = {};\n    if (options.autoComplete == null) options.autoComplete = true;\n    const sReceiver = new StreamingReceiver(context, options);\n    await sReceiver._init();\n    context.streamingReceiver = sReceiver;\n    return sReceiver;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport * as log from \"../log\";\nimport { Constants, translate, MessagingError } from \"@azure/amqp-common\";\nimport { ReceiverEvents, EventContext, OnAmqpEvent, SessionEvents, AmqpError } from \"rhea-promise\";\nimport { ServiceBusMessage, ReceiveMode } from \"../serviceBusMessage\";\nimport {\n  MessageReceiver,\n  ReceiveOptions,\n  ReceiverType,\n  PromiseLike,\n  OnAmqpEventAsPromise\n} from \"./messageReceiver\";\nimport { ClientEntityContext } from \"../clientEntityContext\";\nimport { throwErrorIfConnectionClosed } from \"../util/errors\";\n\n/**\n * Describes the batching receiver where the user can receive a specified number of messages for\n * a predefined time.\n * @internal\n * @class BatchingReceiver\n * @extends MessageReceiver\n */\nexport class BatchingReceiver extends MessageReceiver {\n  /**\n   * @property {boolean} isReceivingMessages Indicates whether the link is actively receiving\n   * messages. Default: false.\n   */\n  isReceivingMessages: boolean = false;\n\n  /**\n   * @property {AmqpError | Error | undefined} detachedError Error that occured when receiver\n   * got detached. Not applicable when onReceiveError is called.\n   *  Default: undefined.\n   */\n  private detachedError: AmqpError | Error | undefined = undefined;\n\n  private _finalActionHandler: (() => void) | undefined = undefined;\n\n  /**\n   * Instantiate a new BatchingReceiver.\n   *\n   * @constructor\n   * @param {ClientEntityContext} context The client entity context.\n   * @param {ReceiveOptions} [options]  Options for how you'd like to connect.\n   */\n  constructor(context: ClientEntityContext, options?: ReceiveOptions) {\n    super(context, ReceiverType.batching, options);\n    this.newMessageWaitTimeoutInSeconds = 1;\n  }\n\n  /**\n   * Clear the token renewal timer and set the `detachedError` property.\n   * @param {AmqpError | Error} [receiverError] The receiver error if any.\n   * @returns {Promise<void>} Promise<void>.\n   */\n  async onDetached(receiverError?: AmqpError | Error): Promise<void> {\n    // Clears the token renewal timer. Closes the link and its session if they are open.\n    await this._closeLink(this._receiver);\n    this.detachedError = receiverError;\n    if (this.isReceivingMessages && typeof this._finalActionHandler === \"function\") {\n      this._finalActionHandler();\n    }\n  }\n\n  /**\n   * Receives a batch of messages from a ServiceBus Queue/Topic.\n   * @param maxMessageCount The maximum number of messages to receive.\n   * In Peeklock mode, this number is capped at 2047 due to constraints of the underlying buffer.\n   * @param maxWaitTimeInSeconds The total wait time in seconds until which the receiver will attempt to receive specified number of messages.\n   * If this time elapses before the `maxMessageCount` is reached, then messages collected till then will be returned to the user.\n   * - **Default**: `60` seconds.\n   * @returns {Promise<ServiceBusMessage[]>} A promise that resolves with an array of Message objects.\n   */\n  receive(maxMessageCount: number, maxWaitTimeInSeconds?: number): Promise<ServiceBusMessage[]> {\n    throwErrorIfConnectionClosed(this._context.namespace);\n\n    if (maxWaitTimeInSeconds == null) {\n      maxWaitTimeInSeconds = Constants.defaultOperationTimeoutInSeconds;\n    }\n\n    const brokeredMessages: ServiceBusMessage[] = [];\n\n    this.isReceivingMessages = true;\n    return new Promise<ServiceBusMessage[]>((resolve, reject) => {\n      let totalWaitTimer: NodeJS.Timer | undefined;\n\n      const onSessionError: OnAmqpEvent = (context: EventContext) => {\n        this.isReceivingMessages = false;\n        const receiver = this._receiver || context.receiver!;\n        receiver.removeListener(ReceiverEvents.receiverError, onReceiveError);\n        receiver.removeListener(ReceiverEvents.message, onReceiveMessage);\n        receiver.removeListener(ReceiverEvents.receiverDrained, onReceiveDrain);\n        receiver.session.removeListener(SessionEvents.sessionError, onSessionError);\n\n        const sessionError = context.session && context.session.error;\n        let error = new MessagingError(\"An error occurred while receiving messages.\");\n        if (sessionError) {\n          error = translate(sessionError);\n          log.error(\n            \"[%s] 'session_close' event occurred for Receiver '%s' received an error:\\n%O\",\n            this._context.namespace.connectionId,\n            this.name,\n            error\n          );\n        }\n        if (totalWaitTimer) {\n          clearTimeout(totalWaitTimer);\n        }\n        if (this._newMessageReceivedTimer) {\n          clearTimeout(this._newMessageReceivedTimer);\n        }\n        reject(error);\n      };\n\n      // Final action to be performed after maxMessageCount is reached or the maxWaitTime is over.\n      const finalAction = (this._finalActionHandler = (): void => {\n        // clear finalActionHandler so that it can't be called multiple times.\n        this._finalActionHandler = undefined;\n        if (this._newMessageReceivedTimer) {\n          clearTimeout(this._newMessageReceivedTimer);\n        }\n        if (totalWaitTimer) {\n          clearTimeout(totalWaitTimer);\n        }\n\n        // Removing listeners, so that the next receiveMessages() call can set them again.\n        if (this._receiver) {\n          this._receiver.removeListener(ReceiverEvents.receiverError, onReceiveError);\n          this._receiver.removeListener(ReceiverEvents.message, onReceiveMessage);\n          this._receiver.session.removeListener(SessionEvents.sessionError, onSessionError);\n        }\n\n        // When receiveMode is in receiveAndDelete mode, we should return those messages to the user\n        // because they have already been removed from service bus and are safe to handle.\n        // If there haven't been any received messages, then it's safe to reject the promise\n        // so that the user knows there was an underlying issue that prevented receiving messages.\n        if (\n          this.detachedError &&\n          (this.receiveMode !== ReceiveMode.receiveAndDelete || brokeredMessages.length === 0)\n        ) {\n          if (this._receiver) {\n            this._receiver.removeListener(ReceiverEvents.receiverDrained, onReceiveDrain);\n          }\n          this.isReceivingMessages = false;\n          const err = translate(this.detachedError);\n          return reject(err);\n        }\n\n        // If the receiver has been detached, there is no need to drain.\n        if (this._receiver && this._receiver.credit > 0 && !this.detachedError) {\n          log.batching(\n            \"[%s] Receiver '%s': Draining leftover credits(%d).\",\n            this._context.namespace.connectionId,\n            this.name,\n            this._receiver.credit\n          );\n\n          // Setting drain must be accompanied by a flow call (aliased to addCredit in this case).\n          this._receiver.drain = true;\n          this._receiver.addCredit(1);\n        } else {\n          if (this._receiver) {\n            this._receiver.removeListener(ReceiverEvents.receiverDrained, onReceiveDrain);\n          }\n\n          this.isReceivingMessages = false;\n          log.batching(\n            \"[%s] Receiver '%s': Resolving receiveMessages() with %d messages.\",\n            this._context.namespace.connectionId,\n            this.name,\n            brokeredMessages.length\n          );\n          resolve(brokeredMessages);\n        }\n      });\n\n      // Action to be performed on the \"message\" event.\n      const onReceiveMessage: OnAmqpEventAsPromise = async (context: EventContext) => {\n        this.resetTimerOnNewMessageReceived();\n        try {\n          const data: ServiceBusMessage = new ServiceBusMessage(\n            this._context,\n            context.message!,\n            context.delivery!,\n            true\n          );\n          if (brokeredMessages.length < maxMessageCount) {\n            brokeredMessages.push(data);\n          }\n        } catch (err) {\n          const errObj = err instanceof Error ? err : new Error(JSON.stringify(err));\n          log.error(\n            \"[%s] Receiver '%s' received an error while converting AmqpMessage to ServiceBusMessage:\\n%O\",\n            this._context.namespace.connectionId,\n            this.name,\n            errObj\n          );\n          reject(errObj);\n        }\n        if (brokeredMessages.length === maxMessageCount) {\n          finalAction();\n        }\n      };\n\n      const onSessionClose: OnAmqpEventAsPromise = async (context: EventContext) => {\n        try {\n          this.isReceivingMessages = false;\n          const sessionError = context.session && context.session.error;\n          if (sessionError) {\n            log.error(\n              \"[%s] 'session_close' event occurred for receiver '%s'. The associated error is: %O\",\n              this._context.namespace.connectionId,\n              this.name,\n              sessionError\n            );\n          }\n        } catch (err) {\n          log.error(\n            \"[%s] Receiver '%s' error in onSessionClose handler:\\n%O\",\n            this._context.namespace.connectionId,\n            this.name,\n            translate(err)\n          );\n        }\n      };\n\n      // Action to be performed on the \"receiver_drained\" event.\n      const onReceiveDrain: OnAmqpEvent = () => {\n        if (this._receiver) {\n          this._receiver.removeListener(ReceiverEvents.receiverDrained, onReceiveDrain);\n          this._receiver.drain = false;\n        }\n\n        this.isReceivingMessages = false;\n\n        log.batching(\n          \"[%s] Receiver '%s' drained. Resolving receiveMessages() with %d messages.\",\n          this._context.namespace.connectionId,\n          this.name,\n          brokeredMessages.length\n        );\n\n        resolve(brokeredMessages);\n      };\n\n      const onReceiveClose: OnAmqpEventAsPromise = async (context: EventContext) => {\n        try {\n          this.isReceivingMessages = false;\n          const receiverError = context.receiver && context.receiver.error;\n          if (receiverError) {\n            log.error(\n              \"[%s] 'receiver_close' event occurred. The associated error is: %O\",\n              this._context.namespace.connectionId,\n              receiverError\n            );\n          }\n        } catch (err) {\n          log.error(\n            \"[%s] Receiver '%s' error in onClose handler:\\n%O\",\n            this._context.namespace.connectionId,\n            this.name,\n            translate(err)\n          );\n        }\n      };\n\n      // Action to be taken when an error is received.\n      const onReceiveError: OnAmqpEvent = (context: EventContext) => {\n        this.isReceivingMessages = false;\n        const receiver = this._receiver || context.receiver!;\n        receiver.removeListener(ReceiverEvents.receiverError, onReceiveError);\n        receiver.removeListener(ReceiverEvents.message, onReceiveMessage);\n        receiver.removeListener(ReceiverEvents.receiverDrained, onReceiveDrain);\n        receiver.session.removeListener(SessionEvents.sessionError, onSessionError);\n\n        const receiverError = context.receiver && context.receiver.error;\n        let error = new MessagingError(\"An error occurred while receiving messages.\");\n        if (receiverError) {\n          error = translate(receiverError);\n          log.error(\n            \"[%s] Receiver '%s' received an error:\\n%O\",\n            this._context.namespace.connectionId,\n            this.name,\n            error\n          );\n        }\n        if (totalWaitTimer) {\n          clearTimeout(totalWaitTimer);\n        }\n        if (this._newMessageReceivedTimer) {\n          clearTimeout(this._newMessageReceivedTimer);\n        }\n        reject(error);\n      };\n\n      // Use new message wait timer only in peekLock mode\n      if (this.receiveMode === ReceiveMode.peekLock) {\n        /**\n         * Resets the timer when a new message is received. If no messages were received for\n         * `newMessageWaitTimeoutInSeconds`, the messages received till now are returned. The\n         * receiver link stays open for the next receive call, but doesnt receive messages until then.\n         */\n        this.resetTimerOnNewMessageReceived = () => {\n          if (this._newMessageReceivedTimer) clearTimeout(this._newMessageReceivedTimer);\n          if (this.newMessageWaitTimeoutInSeconds) {\n            this._newMessageReceivedTimer = setTimeout(async () => {\n              const msg =\n                `BatchingReceiver '${this.name}' did not receive any messages in the last ` +\n                `${this.newMessageWaitTimeoutInSeconds} seconds. ` +\n                `Hence ending this batch receive operation.`;\n              log.error(\"[%s] %s\", this._context.namespace.connectionId, msg);\n              finalAction();\n            }, this.newMessageWaitTimeoutInSeconds * 1000);\n          }\n        };\n      }\n\n      // Action to be performed after the max wait time is over.\n      const actionAfterWaitTimeout = (): void => {\n        log.batching(\n          \"[%s] Batching Receiver '%s'  max wait time in seconds %d over.\",\n          this._context.namespace.connectionId,\n          this.name,\n          maxWaitTimeInSeconds\n        );\n        return finalAction();\n      };\n\n      const onSettled: OnAmqpEvent = (context: EventContext) => {\n        const connectionId = this._context.namespace.connectionId;\n        const delivery = context.delivery;\n        if (delivery) {\n          const id = delivery.id;\n          const state = delivery.remote_state;\n          const settled = delivery.remote_settled;\n          log.receiver(\n            \"[%s] Delivery with id %d, remote_settled: %s, remote_state: %o has been \" +\n              \"received.\",\n            connectionId,\n            id,\n            settled,\n            state && state.error ? state.error : state\n          );\n          if (settled && this._deliveryDispositionMap.has(id)) {\n            const promise = this._deliveryDispositionMap.get(id) as PromiseLike;\n            clearTimeout(promise.timer);\n            log.receiver(\n              \"[%s] Found the delivery with id %d in the map and cleared the timer.\",\n              connectionId,\n              id\n            );\n            const deleteResult = this._deliveryDispositionMap.delete(id);\n            log.receiver(\n              \"[%s] Successfully deleted the delivery with id %d from the map.\",\n              connectionId,\n              id,\n              deleteResult\n            );\n            if (state && state.error && (state.error.condition || state.error.description)) {\n              const error = translate(state.error);\n              return promise.reject(error);\n            }\n\n            return promise.resolve();\n          }\n        }\n      };\n\n      const addCreditAndSetTimer = (reuse?: boolean): void => {\n        log.batching(\n          \"[%s] Receiver '%s', adding credit for receiving %d messages.\",\n          this._context.namespace.connectionId,\n          this.name,\n          maxMessageCount\n        );\n        // By adding credit here, we let the service know that at max we can handle `maxMessageCount`\n        // number of messages concurrently. We will return the user an array of messages that can\n        // be of size upto maxMessageCount. Then the user needs to accordingly dispose\n        // (complete/abandon/defer/deadletter) the messages from the array.\n        this._receiver!.addCredit(maxMessageCount);\n        let msg: string = \"[%s] Setting the wait timer for %d seconds for receiver '%s'.\";\n        if (reuse) msg += \" Receiver link already present, hence reusing it.\";\n        log.batching(msg, this._context.namespace.connectionId, maxWaitTimeInSeconds, this.name);\n        totalWaitTimer = setTimeout(\n          actionAfterWaitTimeout,\n          (maxWaitTimeInSeconds as number) * 1000\n        );\n        // TODO: Disabling this for now. We would want to give the user a decent chance to receive\n        // the first message and only timeout faster if successive messages from there onwards are\n        // not received quickly. However, it may be possible that there are no pending messages\n        // currently on the queue. In that case waiting for idleTimeoutInSeconds would be\n        // unnecessary.\n        // There is a management plane API to get runtimeInfo of the Queue which provides\n        // information about active messages on the Queue and it's sub Queues. However, this adds\n        // a little complexity. If the first message was delayed due to network latency then there\n        // are bright chances that the management plane api would receive the same fate.\n        // It would be better to weigh all the options before making a decision.\n        // resetTimerOnNewMessageReceived();\n      };\n\n      if (!this.isOpen()) {\n        // clear detachedError since we are reconnecting.\n        this.detachedError = undefined;\n        log.batching(\n          \"[%s] Receiver '%s', setting max concurrent calls to 0.\",\n          this._context.namespace.connectionId,\n          this.name\n        );\n        // while creating the receiver link for batching receiver the max concurrent calls\n        // i.e. the credit_window on the link is set to zero. After the link is created\n        // successfully, we add credit which is the maxMessageCount specified by the user.\n        this.maxConcurrentCalls = 0;\n        const rcvrOptions = this._createReceiverOptions(false, {\n          onMessage: onReceiveMessage,\n          onError: onReceiveError,\n          onSessionError: onSessionError,\n          onSettled: onSettled,\n          onClose: onReceiveClose,\n          onSessionClose: onSessionClose\n        });\n        this._init(rcvrOptions)\n          .then(() => {\n            this._receiver!.on(ReceiverEvents.receiverDrained, onReceiveDrain);\n            addCreditAndSetTimer();\n            return;\n          })\n          .catch(reject);\n      } else {\n        addCreditAndSetTimer(true);\n        this._receiver!.on(ReceiverEvents.message, onReceiveMessage);\n        this._receiver!.on(ReceiverEvents.receiverError, onReceiveError);\n        this._receiver!.on(ReceiverEvents.receiverDrained, onReceiveDrain);\n        this._receiver!.session.on(SessionEvents.sessionError, onSessionError);\n      }\n    });\n  }\n\n  /**\n   * Creates a batching receiver.\n   * @static\n   *\n   * @param {ClientEntityContext} context    The connection context.\n   * @param {ReceiveOptions} [options]     Receive options.\n   */\n  static create(context: ClientEntityContext, options?: ReceiveOptions): BatchingReceiver {\n    throwErrorIfConnectionClosed(context.namespace);\n    const bReceiver = new BatchingReceiver(context, options);\n    context.batchingReceiver = bReceiver;\n    return bReceiver;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {\n  translate,\n  Constants,\n  ErrorNameConditionMapper,\n  MessagingError,\n  Func\n} from \"@azure/amqp-common\";\nimport {\n  Receiver,\n  OnAmqpEvent,\n  EventContext,\n  ReceiverOptions,\n  ReceiverEvents,\n  AmqpError,\n  isAmqpError\n} from \"rhea-promise\";\nimport * as log from \"../log\";\nimport {\n  OnError,\n  OnAmqpEventAsPromise,\n  PromiseLike,\n  DispositionOptions,\n  OnMessage\n} from \"../core/messageReceiver\";\nimport { LinkEntity } from \"../core/linkEntity\";\nimport { ClientEntityContext } from \"../clientEntityContext\";\nimport { convertTicksToDate, calculateRenewAfterDuration } from \"../util/utils\";\nimport { throwErrorIfConnectionClosed } from \"../util/errors\";\nimport { ServiceBusMessage, DispositionType, ReceiveMode } from \"../serviceBusMessage\";\n\n/**\n * Enum to denote who is calling the session receiver\n * @internal\n */\nexport enum SessionCallee {\n  standalone = \"standalone\",\n  sessionManager = \"sessionManager\"\n}\n\n/**\n * Describes the options that need to be provided while creating a message session receiver link.\n * @internal\n */\nexport interface CreateMessageSessionReceiverLinkOptions {\n  onClose: OnAmqpEventAsPromise;\n  onSessionClose: OnAmqpEventAsPromise;\n  onError: OnAmqpEvent;\n  onSessionError: OnAmqpEvent;\n  onSettled: OnAmqpEvent;\n  sessionId?: string;\n}\n\n/**\n * Describes the options passed to the `createReceiver` method when using a Queue/Subscription that\n * has sessions enabled.\n */\nexport interface SessionReceiverOptions {\n  /**\n   * @property The id of the session from which messages need to be received. If null or undefined is\n   * provided, Service Bus chooses a random session from available sessions.\n   */\n  sessionId: string | undefined;\n  /**\n   * @property The maximum duration in seconds\n   * until which, the lock on the session will be renewed automatically by the sdk.\n   * - **Default**: `300` seconds (5 minutes).\n   * - **To disable autolock renewal**, set this to `0`.\n   */\n  maxSessionAutoRenewLockDurationInSeconds?: number;\n}\n\n/**\n * Describes the options passed to `registerMessageHandler` method when receiving messages from a\n * Queue/Subscription which has sessions enabled.\n */\nexport interface SessionMessageHandlerOptions {\n  /**\n   * @property Indicates whether the `complete()` method on the message should automatically be\n   * called by the sdk after the user provided onMessage handler has been executed.\n   * Calling `complete()` on a message removes it from the Queue/Subscription.\n   * - **Default**: `true`.\n   */\n  autoComplete?: boolean;\n  /**\n   * @property The maximum number of concurrent calls that the library\n   * can make to the user's message handler. Once this limit has been reached, more messages will\n   * not be received until atleast one of the calls to the user's message handler has completed.\n   * - **Default**: `1`.\n   */\n  maxConcurrentCalls?: number;\n}\n/**\n * @internal\n * Describes the options for creating a Session Manager.\n */\nexport interface SessionManagerOptions extends SessionMessageHandlerOptions {\n  /**\n   * @property {number} [maxConcurrentSessions] The maximum number of sessions that the user wants to\n   * handle concurrently.\n   * - **Default**: `2000`.\n   */\n  maxConcurrentSessions?: number;\n  /**\n   * @property The maximum amount of time the receiver will wait to receive a new message. If no new\n   * message is received in this time, then the receiver will be closed.\n   *\n   * If this option is not provided, then receiver link will stay open until manually closed.\n   *\n   * **Caution**: When setting this value, take into account the time taken to process messages. Once\n   * the receiver is closed, operations like complete()/abandon()/defer()/deadletter() cannot be\n   * invoked on messages.\n   */\n  newMessageWaitTimeoutInSeconds?: number;\n}\n\n/**\n * @internal\n * Describes all the options that can be set while instantiating a MessageSession object.\n */\nexport type MessageSessionOptions = SessionManagerOptions &\n  SessionReceiverOptions & {\n    callee?: SessionCallee;\n    receiveMode?: ReceiveMode;\n  };\n\n/**\n * @internal\n * Describes the receiver for a Message Session.\n */\nexport class MessageSession extends LinkEntity {\n  /**\n   * @property {Date} [sessionLockedUntilUtc] Provides the duration until which the session is locked.\n   */\n  sessionLockedUntilUtc?: Date;\n  /**\n   * @property {string} [sessionId] The sessionId for the message session. Empty string is valid sessionId\n   */\n  sessionId?: string;\n  /**\n   * @property {number} [maxConcurrentSessions] The maximum number of concurrent sessions that the\n   * client should initate.\n   * - **Default**: `1`.\n   */\n  maxConcurrentSessions?: number;\n  /**\n   * @property {number} [maxConcurrentCalls] The maximum number of messages that should be\n   * processed concurrently in a session while in streaming mode. Once this limit has been reached,\n   * more messages will not be received until the user's message handler has completed processing current message.\n   * - **Default**: `1` (message in a session at a time).\n   */\n  maxConcurrentCalls: number = 1;\n  /**\n   * @property {number} [receiveMode] The mode in which messages should be received.\n   * Default: ReceiveMode.peekLock\n   */\n  receiveMode: ReceiveMode;\n  /**\n   * @property {boolean} autoComplete Indicates whether `Message.complete()` should be called\n   * automatically after the message processing is complete while receiving messages with handlers.\n   * Default: false.\n   */\n  autoComplete: boolean;\n  /**\n   * @property {number} maxAutoRenewDurationInSeconds The maximum duration within which the\n   * lock will be renewed automatically. This value should be greater than the longest message\n   * lock duration; for example, the `lockDuration` property on the received message.\n   *\n   * Default: `300` (5 minutes);\n   */\n  maxAutoRenewDurationInSeconds: number;\n  /**\n   * @property {number} [newMessageWaitTimeoutInSeconds] The maximum amount of idle time the session\n   * reaceiver will wait ater a message has been received. If no messages are received in that\n   * time frame then the session will be closed.\n   */\n  newMessageWaitTimeoutInSeconds?: number;\n  /**\n   * @property {boolean} autoRenewLock Should lock renewal happen automatically.\n   */\n  autoRenewLock: boolean;\n  /**\n   * @property {SessionCallee} callee Describes who instantied the MessageSession. Whether it was\n   * called by the SessionManager or it was called standalone.\n   * - Default: \"standalone\"\n   */\n  callee: SessionCallee;\n  /**\n   * Denotes if we are currently receiving messages\n   */\n  isReceivingMessages: boolean;\n  /**\n   * @property {Receiver} [_receiver] The AMQP receiver link.\n   */\n  private _receiver?: Receiver;\n  /**\n   * @property {Map<number, Promise<any>>} _deliveryDispositionMap Maintains a map of deliveries that\n   * are being actively disposed. It acts as a store for correlating the responses received for\n   * active dispositions.\n   */\n  private _deliveryDispositionMap: Map<number, PromiseLike> = new Map<number, PromiseLike>();\n  /**\n   * @property {OnMessage} _onMessage The message handler provided by the user that will\n   * be wrapped inside _onAmqpMessage.\n   */\n  private _onMessage!: OnMessage;\n  /**\n   * @property {OnError} _onError The error handler provided by the user that will be wrapped\n   * inside _onAmqpError.\n   */\n  private _onError?: OnError;\n  /**\n   * @property {OnError} _notifyError If the user provided error handler is present then it will\n   * notify the user's error handler about the error.\n   */\n  private _notifyError: OnError;\n  /**\n   * @property {OnAmqpEventAsPromise} _onAmqpClose The message handler that will be set as the handler on the\n   * underlying rhea receiver for the \"receiver_close\" event.\n   */\n  private _onAmqpClose: OnAmqpEventAsPromise;\n  /**\n   * @property {OnAmqpEvent} _onSessionError The message handler that will be set as the handler on\n   * the underlying rhea receiver's session for the \"session_error\" event.\n   */\n  private _onSessionError: OnAmqpEvent;\n  /**\n   * @property {OnAmqpEventAsPromise} _onSessionClose The message handler that will be set as the handler on\n   * the underlying rhea receiver's session for the \"session_close\" event.\n   */\n  private _onSessionClose: OnAmqpEventAsPromise;\n  /**\n   * @property {OnAmqpEvent} _onAmqpError The message handler that will be set as the handler on the\n   * underlying rhea receiver for the \"receiver_error\" event.\n   */\n  private _onAmqpError: OnAmqpEvent;\n  /**\n   * @property {OnAmqpEvent} _onSettled The message handler that will be set as the handler on the\n   * underlying rhea receiver for the \"settled\" event.\n   */\n  private _onSettled: OnAmqpEvent;\n  /**\n   * @property {NodeJS.Timer} _sessionLockRenewalTimer The session lock renewal timer that keeps\n   * track of when the MessageSession is due for session lock renewal.\n   */\n  private _sessionLockRenewalTimer?: NodeJS.Timer;\n  /**\n   * @property {NodeJS.Timer} _newMessageReceivedTimer The new message received timer that keeps\n   * track of closing the MessageSession if no message was received in the configured\n   * `newMessageWaitTimeoutInSeconds` seconds.\n   */\n  private _newMessageReceivedTimer?: NodeJS.Timer;\n\n  private _totalAutoLockRenewDuration: number;\n\n  /**\n   * Ensures that the session lock is renewed before it expires. The lock will not be renewed for\n   * more than the configured totalAutoLockRenewDuration.\n   */\n  private _ensureSessionLockRenewal(): void {\n    if (\n      this.autoRenewLock &&\n      new Date(this._totalAutoLockRenewDuration) > this.sessionLockedUntilUtc! &&\n      Date.now() < this._totalAutoLockRenewDuration &&\n      this.isOpen()\n    ) {\n      const connectionId = this._context.namespace.connectionId;\n      const nextRenewalTimeout = calculateRenewAfterDuration(this.sessionLockedUntilUtc!);\n      this._sessionLockRenewalTimer = setTimeout(async () => {\n        try {\n          log.messageSession(\n            \"[%s] Attempting to renew the session lock for MessageSession '%s' \" +\n              \"with name '%s'.\",\n            connectionId,\n            this.sessionId,\n            this.name\n          );\n          this.sessionLockedUntilUtc = await this._context.managementClient!.renewSessionLock(\n            this.sessionId!,\n            {\n              delayInSeconds: 0,\n              timeoutInSeconds: 10,\n              times: 4\n            }\n          );\n          log.receiver(\n            \"[%s] Successfully renewed the session lock for MessageSession '%s' \" +\n              \"with name '%s'.\",\n            connectionId,\n            this.sessionId,\n            this.name\n          );\n          log.receiver(\n            \"[%s] Calling _ensureSessionLockRenewal() again for MessageSession '%s'.\",\n            connectionId,\n            this.sessionId\n          );\n          this._ensureSessionLockRenewal();\n        } catch (err) {\n          log.error(\n            \"[%s] An error occurred while renewing the session lock for MessageSession \" +\n              \"'%s' with name '%s': %O\",\n            this._context.namespace.connectionId,\n            this.sessionId,\n            this.name,\n            err\n          );\n        }\n      }, nextRenewalTimeout);\n      log.messageSession(\n        \"[%s] MessageSession '%s' with name '%s', has next session lock renewal \" +\n          \"in %d seconds @(%s).\",\n        this._context.namespace.connectionId,\n        this.sessionId,\n        this.name,\n        nextRenewalTimeout / 1000,\n        new Date(Date.now() + nextRenewalTimeout).toString()\n      );\n    }\n  }\n\n  /**\n   * Deletes the MessageSession from the internal cache.\n   */\n  private _deleteFromCache(): void {\n    this._receiver = undefined;\n    delete this._context.messageSessions[this.sessionId!];\n    log.error(\n      \"[%s] Deleted the receiver '%s' with sessionId '%s' from the client cache.\",\n      this._context.namespace.connectionId,\n      this.name,\n      this.sessionId\n    );\n  }\n\n  /**\n   * Creates a new AMQP receiver under a new AMQP session.\n   */\n  private async _init(): Promise<void> {\n    const connectionId = this._context.namespace.connectionId;\n    try {\n      if (!this.isOpen() && !this.isConnecting) {\n        log.error(\n          \"[%s] The receiver '%s' with address '%s' is not open and is not currently \" +\n            \"establishing itself. Hence let's try to connect.\",\n          connectionId,\n          this.name,\n          this.address\n        );\n        this.isConnecting = true;\n        await this._negotiateClaim();\n\n        const options = this._createMessageSessionOptions();\n\n        log.error(\n          \"[%s] Trying to create receiver '%s' with options %O\",\n          connectionId,\n          this.name,\n          options\n        );\n\n        this._receiver = await this._context.namespace.connection.createReceiver(options);\n        this.isConnecting = false;\n        const receivedSessionId =\n          this._receiver.source &&\n          this._receiver.source.filter &&\n          this._receiver.source.filter[Constants.sessionFilterName];\n        let errorMessage: string = \"\";\n        // SB allows a sessionId with empty string value :)\n        if (receivedSessionId == null) {\n          errorMessage =\n            `Received an incorrect sessionId '${receivedSessionId}' while creating ` +\n            `the receiver '${this.name}'.`;\n        }\n        if (this.sessionId != null && receivedSessionId !== this.sessionId) {\n          errorMessage =\n            `Received sessionId '${receivedSessionId}' does not match the provided ` +\n            `sessionId '${this.sessionId}' while creating the receiver '${this.name}'.`;\n        }\n        if (errorMessage) {\n          const error = translate({\n            description: errorMessage,\n            condition: ErrorNameConditionMapper.SessionCannotBeLockedError\n          });\n          log.error(\"[%s] %O\", this._context.namespace.connectionId, error);\n          throw error;\n        }\n        if (this.sessionId == null) this.sessionId = receivedSessionId;\n        this.sessionLockedUntilUtc = convertTicksToDate(\n          this._receiver.properties[\"com.microsoft:locked-until-utc\"]\n        );\n        log.messageSession(\n          \"[%s] Session with id '%s' is locked until: '%s'.\",\n          connectionId,\n          this.sessionId,\n          this.sessionLockedUntilUtc.toISOString()\n        );\n        log.error(\n          \"[%s] Receiver '%s' for sessionId '%s' has established itself.\",\n          connectionId,\n          this.name,\n          this.sessionId\n        );\n        log.messageSession(\n          \"Promise to create the receiver resolved. \" + \"Created receiver with name: \",\n          this.name\n        );\n        log.messageSession(\n          \"[%s] Receiver '%s' created with receiver options: %O\",\n          connectionId,\n          this.name,\n          options\n        );\n        if (!this._context.messageSessions[this.sessionId!]) {\n          this._context.messageSessions[this.sessionId!] = this;\n        }\n        this._totalAutoLockRenewDuration = Date.now() + this.maxAutoRenewDurationInSeconds * 1000;\n        await this._ensureTokenRenewal();\n        await this._ensureSessionLockRenewal();\n      } else {\n        log.error(\n          \"[%s] The receiver '%s' for sessionId '%s' is open -> %s and is connecting \" +\n            \"-> %s. Hence not reconnecting.\",\n          connectionId,\n          this.name,\n          this.sessionId,\n          this.isOpen(),\n          this.isConnecting\n        );\n      }\n    } catch (err) {\n      this.isConnecting = false;\n      const errObj = translate(err);\n      log.error(\n        \"[%s] An error occured while creating the receiver '%s': %O\",\n        this._context.namespace.connectionId,\n        this.name,\n        errObj\n      );\n      throw errObj;\n    }\n  }\n\n  /**\n   * Creates the options that need to be specified while creating an AMQP receiver link.\n   */\n  private _createMessageSessionOptions(): ReceiverOptions {\n    const rcvrOptions: ReceiverOptions = {\n      name: this.name,\n      autoaccept: false,\n      // receiveAndDelete -> first(0), peekLock -> second (1)\n      rcv_settle_mode: this.receiveMode === ReceiveMode.receiveAndDelete ? 0 : 1,\n      // receiveAndDelete -> settled (1), peekLock -> unsettled (0)\n      snd_settle_mode: this.receiveMode === ReceiveMode.receiveAndDelete ? 1 : 0,\n      source: {\n        address: this.address,\n        filter: {}\n      },\n      credit_window: 0,\n      onClose: (context) =>\n        this._onAmqpClose(context).catch(() => {\n          /* */\n        }),\n      onSessionClose: (context) =>\n        this._onSessionClose(context).catch(() => {\n          /* */\n        }),\n      onError: this._onAmqpError,\n      onSessionError: this._onSessionError,\n      onSettled: this._onSettled\n    };\n    (rcvrOptions.source as any).filter[Constants.sessionFilterName] = this.sessionId;\n    return rcvrOptions;\n  }\n\n  constructor(context: ClientEntityContext, options?: MessageSessionOptions) {\n    super(context.entityPath, context, {\n      address: context.entityPath,\n      audience: `${context.namespace.config.endpoint}${context.entityPath}`\n    });\n    this._context.isSessionEnabled = true;\n    this.isReceivingMessages = false;\n    if (!options) options = { sessionId: undefined };\n    this.autoComplete = false;\n    this.sessionId = options.sessionId;\n    this.receiveMode = options.receiveMode || ReceiveMode.peekLock;\n    this.callee = options.callee || SessionCallee.standalone;\n    this.maxAutoRenewDurationInSeconds =\n      options.maxSessionAutoRenewLockDurationInSeconds != null\n        ? options.maxSessionAutoRenewLockDurationInSeconds\n        : 300;\n    this._totalAutoLockRenewDuration = Date.now() + this.maxAutoRenewDurationInSeconds * 1000;\n    this.autoRenewLock =\n      this.maxAutoRenewDurationInSeconds > 0 && this.receiveMode === ReceiveMode.peekLock;\n\n    // setting all the handlers\n    this._onSettled = (context: EventContext) => {\n      const connectionId = this._context.namespace.connectionId;\n      const delivery = context.delivery;\n      if (delivery) {\n        const id = delivery.id;\n        const state = delivery.remote_state;\n        const settled = delivery.remote_settled;\n        log.receiver(\n          \"[%s] Delivery with id %d, remote_settled: %s, remote_state: %o has been \" + \"received.\",\n          connectionId,\n          id,\n          settled,\n          state && state.error ? state.error : state\n        );\n        if (settled && this._deliveryDispositionMap.has(id)) {\n          const promise = this._deliveryDispositionMap.get(id) as PromiseLike;\n          clearTimeout(promise.timer);\n          log.receiver(\n            \"[%s] Found the delivery with id %d in the map and cleared the timer.\",\n            connectionId,\n            id\n          );\n          const deleteResult = this._deliveryDispositionMap.delete(id);\n          log.receiver(\n            \"[%s] Successfully deleted the delivery with id %d from the map.\",\n            connectionId,\n            id,\n            deleteResult\n          );\n          if (state && state.error && (state.error.condition || state.error.description)) {\n            const error = translate(state.error);\n            return promise.reject(error);\n          }\n\n          return promise.resolve();\n        }\n      }\n    };\n\n    this._notifyError = (error: MessagingError | Error) => {\n      if (this._onError) {\n        this._onError(error);\n        log.error(\n          \"[%s] Notified the user's error handler about the error received by the \" +\n            \"Receiver '%s'.\",\n          this._context.namespace.connectionId,\n          this.name\n        );\n      }\n    };\n\n    this._onAmqpError = (context: EventContext) => {\n      const connectionId = this._context.namespace.connectionId;\n      const receiverError = context.receiver && context.receiver.error;\n      if (receiverError) {\n        const sbError = translate(receiverError);\n        if (sbError.name === \"SessionLockLostError\") {\n          this._context.expiredMessageSessions[this.sessionId!] = true;\n          sbError.message = `The session lock has expired on the session with id ${this.sessionId}.`;\n        }\n        log.error(\n          \"[%s] An error occurred for Receiver '%s': %O.\",\n          connectionId,\n          this.name,\n          sbError\n        );\n        this._notifyError(sbError);\n      }\n    };\n\n    this._onSessionError = (context: EventContext) => {\n      const connectionId = this._context.namespace.connectionId;\n      const sessionError = context.session && context.session.error;\n      if (sessionError) {\n        const sbError = translate(sessionError);\n        log.error(\n          \"[%s] An error occurred on the session for Receiver '%s': %O.\",\n          connectionId,\n          this.name,\n          sbError\n        );\n        this._notifyError(sbError);\n      }\n    };\n\n    this._onAmqpClose = async (context: EventContext) => {\n      const connectionId = this._context.namespace.connectionId;\n      const receiverError = context.receiver && context.receiver.error;\n      const receiver = this._receiver || context.receiver!;\n      let isClosedDueToExpiry = false;\n      if (receiverError) {\n        const sbError = translate(receiverError);\n        if (sbError.name === \"SessionLockLostError\") {\n          isClosedDueToExpiry = true;\n        }\n        log.error(\n          \"[%s] 'receiver_close' event occurred for receiver '%s' for sessionId '%s'. \" +\n            \"The associated error is: %O\",\n          connectionId,\n          this.name,\n          this.sessionId,\n          sbError\n        );\n        // no need to notify the user's error handler since rhea guarantees that receiver_error\n        // will always be emitted before receiver_close.\n      }\n      if (receiver && !receiver.isItselfClosed()) {\n        log.error(\n          \"[%s] 'receiver_close' event occurred on the receiver '%s' for sessionId '%s' \" +\n            \"and the sdk did not initiate this. Hence, let's gracefully close the receiver.\",\n          connectionId,\n          this.name,\n          this.sessionId\n        );\n        try {\n          await this.close(isClosedDueToExpiry);\n        } catch (err) {\n          log.error(\n            \"[%s] An error occurred while closing the receiver '%s' for sessionId '%s': %O.\",\n            connectionId,\n            this.name,\n            this.sessionId,\n            err\n          );\n        }\n      } else {\n        log.error(\n          \"[%s] 'receiver_close' event occurred on the receiver '%s' for sessionId '%s' \" +\n            \"because the sdk initiated it. Hence no need to gracefully close the receiver\",\n          connectionId,\n          this.name,\n          this.sessionId\n        );\n      }\n    };\n\n    this._onSessionClose = async (context: EventContext) => {\n      const connectionId = this._context.namespace.connectionId;\n      const receiver = this._receiver || context.receiver!;\n      const sessionError = context.session && context.session.error;\n      if (sessionError) {\n        const sbError = translate(sessionError);\n        log.error(\n          \"[%s] 'session_close' event occurred for receiver '%s' for sessionId '%s'. \" +\n            \"The associated error is: %O\",\n          connectionId,\n          this.name,\n          this.sessionId,\n          sbError\n        );\n        // no need to notify the user's error handler since rhea guarantees that session_error\n        // will always be emitted before session_close.\n      }\n\n      if (receiver && !receiver.isSessionItselfClosed()) {\n        log.error(\n          \"[%s] 'session_close' event occurred on the receiver '%s' for sessionId '%s' \" +\n            \"and the sdk did not initiate this. Hence, let's gracefully close the receiver.\",\n          connectionId,\n          this.name,\n          this.sessionId\n        );\n        try {\n          await this.close();\n        } catch (err) {\n          log.error(\n            \"[%s] An error occurred while closing the receiver '%s' for sessionId '%s': %O.\",\n            connectionId,\n            this.name,\n            this.sessionId,\n            err\n          );\n        }\n      } else {\n        log.error(\n          \"[%s] 'session_close' event occurred on the receiver '%s' for sessionId '%s' \" +\n            \"because the sdk initiated it. Hence no need to gracefully close the receiver\",\n          connectionId,\n          this.name,\n          this.sessionId\n        );\n      }\n    };\n  }\n\n  /**\n   * Closes the underlying AMQP receiver link.\n   * @param isClosedDueToExpiry Flag that denotes if close is invoked due to session expiring.\n   * This is so that the internal map of expired sessions doesn't get cleared when session is\n   * closed due to expiry.\n   */\n  async close(isClosedDueToExpiry?: boolean): Promise<void> {\n    try {\n      log.messageSession(\n        \"[%s] Closing the MessageSession '%s' for queue '%s'.\",\n        this._context.namespace.connectionId,\n        this.sessionId,\n        this.name\n      );\n\n      this.isReceivingMessages = false;\n      if (this._newMessageReceivedTimer) clearTimeout(this._newMessageReceivedTimer);\n      if (this._sessionLockRenewalTimer) clearTimeout(this._sessionLockRenewalTimer);\n      log.messageSession(\n        \"[%s] Cleared the timers for 'no new message received' task and \" +\n          \"'session lock renewal' task.\",\n        this._context.namespace.connectionId\n      );\n\n      if (!isClosedDueToExpiry) {\n        delete this._context.expiredMessageSessions[this.sessionId!];\n      }\n\n      if (this._receiver) {\n        const receiverLink = this._receiver;\n        this._deleteFromCache();\n        await this._closeLink(receiverLink);\n      }\n    } catch (err) {\n      log.error(\n        \"[%s] An error occurred while closing the message session with id '%s': %O.\",\n        this._context.namespace.connectionId,\n        this.sessionId,\n        err\n      );\n    }\n  }\n\n  /**\n   * Determines whether the AMQP receiver link is open. If open then returns true else returns false.\n   */\n  isOpen(): boolean {\n    const result: boolean = this._receiver! && this._receiver!.isOpen();\n    log.messageSession(\n      \"[%s] Receiver '%s' for sessionId '%s' is open? -> %s\",\n      this._context.namespace.connectionId,\n      this.name,\n      this.sessionId,\n      result\n    );\n    return result;\n  }\n\n  /**\n   * Registers handlers to deal with the incoming stream of messages over an AMQP receiver link\n   * from a Queue/Subscription.\n   * To stop receiving messages, call `close()` on the SessionReceiver or set the property\n   * `newMessageWaitTimeoutInSeconds` in the options to provide a timeout.\n   *\n   * @param onMessage - Handler for processing each incoming message.\n   * @param onError - Handler for any error that occurs while receiving or processing messages.\n   * @param options - Options to control whether messages should be automatically completed. You can\n   * also provide a timeout in seconds to denote the amount of time to wait for a new message\n   * before closing the receiver.\n   *\n   * @returns void\n   */\n  receive(onMessage: OnMessage, onError: OnError, options?: SessionMessageHandlerOptions): void {\n    if (!options) options = {};\n    this.isReceivingMessages = true;\n    if (typeof options.maxConcurrentCalls === \"number\" && options.maxConcurrentCalls > 0) {\n      this.maxConcurrentCalls = options.maxConcurrentCalls;\n    }\n\n    // If explicitly set to false then autoComplete is false else true (default).\n    this.autoComplete = options.autoComplete === false ? options.autoComplete : true;\n    this._onMessage = onMessage;\n    this._onError = onError;\n    const connectionId = this._context.namespace.connectionId;\n\n    /**\n     * Resets the timer when a new message is received for Session Manager.\n     * It will close the receiver gracefully, if no\n     * messages were received for the configured newMessageWaitTimeoutInSeconds\n     */\n    const resetTimerOnNewMessageReceived = (): void => {\n      if (this._newMessageReceivedTimer) clearTimeout(this._newMessageReceivedTimer);\n      if (this.newMessageWaitTimeoutInSeconds) {\n        this._newMessageReceivedTimer = setTimeout(async () => {\n          const msg =\n            `MessageSession '${this.sessionId}' with name '${this.name}' did not receive ` +\n            `any messages in the last ${this.newMessageWaitTimeoutInSeconds} seconds. Hence closing it.`;\n          log.error(\"[%s] %s\", this._context.namespace.connectionId, msg);\n\n          if (this.callee === SessionCallee.sessionManager) {\n            // The session manager will not forward this error to user.\n            // Instead, this is taken as a indicator to create a new session client for the next session.\n            const error = translate({\n              condition: \"com.microsoft:message-wait-timeout\",\n              description: msg\n            });\n            this._notifyError(translate(error));\n          }\n          await this.close();\n        }, this.newMessageWaitTimeoutInSeconds * 1000);\n      }\n    };\n\n    if (this._receiver && this._receiver.isOpen()) {\n      const onSessionMessage = async (context: EventContext): Promise<void> => {\n        // If the receiver got closed in PeekLock mode, avoid processing the message as we\n        // cannot settle the message.\n        if (\n          this.receiveMode === ReceiveMode.peekLock &&\n          (!this._receiver || !this._receiver.isOpen())\n        ) {\n          log.error(\n            \"[%s] Not calling the user's message handler for the current message \" +\n              \"as the receiver '%s' is closed\",\n            connectionId,\n            this.name\n          );\n          return;\n        }\n\n        resetTimerOnNewMessageReceived();\n        const bMessage: ServiceBusMessage = new ServiceBusMessage(\n          this._context,\n          context.message!,\n          context.delivery!,\n          true\n        );\n        try {\n          await this._onMessage(bMessage);\n        } catch (err) {\n          // This ensures we call users' error handler when users' message handler throws.\n          if (!isAmqpError(err)) {\n            log.error(\n              \"[%s] An error occurred while running user's message handler for the message \" +\n                \"with id '%s' on the receiver '%s': %O\",\n              connectionId,\n              bMessage.messageId,\n              this.name,\n              err\n            );\n            this._onError!(err);\n          }\n\n          const error = translate(err);\n          // Nothing much to do if user's message handler throws. Let us try abandoning the message.\n          if (\n            !bMessage.delivery.remote_settled &&\n            this.receiveMode === ReceiveMode.peekLock &&\n            this.isOpen() // only try to abandon the messages if the connection is still open\n          ) {\n            try {\n              log.error(\n                \"[%s] Abandoning the message with id '%s' on the receiver '%s' since \" +\n                  \"an error occured: %O.\",\n                connectionId,\n                bMessage.messageId,\n                this.name,\n                error\n              );\n              await bMessage.abandon();\n            } catch (abandonError) {\n              const translatedError = translate(abandonError);\n              log.error(\n                \"[%s] An error occurred while abandoning the message with id '%s' on the \" +\n                  \"receiver '%s': %O.\",\n                connectionId,\n                bMessage.messageId,\n                this.name,\n                translatedError\n              );\n              this._notifyError(translatedError);\n            }\n          }\n          return;\n        } finally {\n          if (this._receiver) {\n            this._receiver!.addCredit(1);\n          }\n        }\n\n        // If we've made it this far, then user's message handler completed fine. Let us try\n        // completing the message.\n        if (\n          this.autoComplete &&\n          this.receiveMode === ReceiveMode.peekLock &&\n          !bMessage.delivery.remote_settled\n        ) {\n          try {\n            log.messageSession(\n              \"[%s] Auto completing the message with id '%s' on \" + \"the receiver '%s'.\",\n              connectionId,\n              bMessage.messageId,\n              this.name\n            );\n            await bMessage.complete();\n          } catch (completeError) {\n            const translatedError = translate(completeError);\n            log.error(\n              \"[%s] An error occurred while completing the message with id '%s' on the \" +\n                \"receiver '%s': %O.\",\n              connectionId,\n              bMessage.messageId,\n              this.name,\n              translatedError\n            );\n            this._notifyError(translatedError);\n          }\n        }\n      };\n      // setting the \"message\" event listener.\n      this._receiver.on(ReceiverEvents.message, onSessionMessage);\n      // adding credit\n      this._receiver!.addCredit(this.maxConcurrentCalls);\n    } else {\n      this.isReceivingMessages = false;\n      const msg =\n        `MessageSession with sessionId '${this.sessionId}' and name '${this.name}' ` +\n        `has either not been created or is not open.`;\n      log.error(\"[%s] %s\", this._context.namespace.connectionId, msg);\n      this._notifyError(new Error(msg));\n    }\n  }\n\n  /**\n   * Returns a batch of messages based on given count and timeout over an AMQP receiver link\n   * from a Queue/Subscription.\n   *\n   * @param maxMessageCount      The maximum number of messages to receive from Queue/Subscription.\n   * @param maxWaitTimeInSeconds The total wait time in seconds until which the receiver will attempt to receive specified number of messages.\n   * If this time elapses before the `maxMessageCount` is reached, then messages collected till then will be returned to the user.\n   * - **Default**: `60` seconds.\n   * @returns Promise<ServiceBusMessage[]> A promise that resolves with an array of Message objects.\n   */\n  async receiveMessages(\n    maxMessageCount: number,\n    maxWaitTimeInSeconds?: number\n  ): Promise<ServiceBusMessage[]> {\n    if (maxWaitTimeInSeconds == null) {\n      maxWaitTimeInSeconds = Constants.defaultOperationTimeoutInSeconds;\n    }\n\n    const brokeredMessages: ServiceBusMessage[] = [];\n    this.isReceivingMessages = true;\n\n    return new Promise<ServiceBusMessage[]>((resolve, reject) => {\n      let totalWaitTimer: any;\n\n      const setnewMessageWaitTimeoutInSeconds = (value?: number): void => {\n        this.newMessageWaitTimeoutInSeconds = value;\n      };\n\n      setnewMessageWaitTimeoutInSeconds(1);\n\n      // Action to be performed on the \"receiver_drained\" event.\n      const onReceiveDrain: OnAmqpEvent = () => {\n        this._receiver!.removeListener(ReceiverEvents.receiverDrained, onReceiveDrain);\n        this._receiver!.drain = false;\n\n        this.isReceivingMessages = false;\n\n        log.messageSession(\n          \"[%s] Receiver '%s' drained. Resolving receiveMessages() with %d messages.\",\n          this._context.namespace.connectionId,\n          this.name,\n          brokeredMessages.length\n        );\n\n        resolve(brokeredMessages);\n      };\n\n      // Action to be performed after the max wait time is over.\n      const actionAfterWaitTimeout: Func<void, void> = (): void => {\n        log.batching(\n          \"[%s] Batching Receiver '%s'  max wait time in seconds %d over.\",\n          this._context.namespace.connectionId,\n          this.name,\n          maxWaitTimeInSeconds\n        );\n        return finalAction();\n      };\n\n      // Action to be performed on the \"message\" event.\n      const onReceiveMessage: OnAmqpEventAsPromise = async (context: EventContext) => {\n        resetTimerOnNewMessageReceived();\n        try {\n          const data: ServiceBusMessage = new ServiceBusMessage(\n            this._context,\n            context.message!,\n            context.delivery!,\n            true\n          );\n          if (brokeredMessages.length < maxMessageCount) {\n            brokeredMessages.push(data);\n          }\n        } catch (err) {\n          // Removing listeners, so that the next receiveMessages() call can set them again.\n          if (this._receiver) {\n            this._receiver.removeListener(ReceiverEvents.message, onReceiveMessage);\n            this._receiver.removeListener(ReceiverEvents.receiverDrained, onReceiveDrain);\n          }\n\n          log.error(\n            \"[%s] Receiver '%s' received an error while converting AmqpMessage to ServiceBusMessage:\\n%O\",\n            this._context.namespace.connectionId,\n            this.name,\n            err\n          );\n          reject(err instanceof Error ? err : new Error(JSON.stringify(err)));\n        }\n        if (brokeredMessages.length === maxMessageCount) {\n          finalAction();\n        }\n      };\n\n      this._onError = (error: MessagingError | Error) => {\n        this.isReceivingMessages = false;\n        // Resetting the newMessageWaitTimeoutInSeconds to undefined since we are done receiving\n        // a batch of messages.\n        setnewMessageWaitTimeoutInSeconds();\n        if (totalWaitTimer) {\n          clearTimeout(totalWaitTimer);\n        }\n        // Removing listeners, so that the next receiveMessages() call can set them again.\n        if (this._receiver) {\n          this._receiver.removeListener(ReceiverEvents.message, onReceiveMessage);\n          this._receiver.removeListener(ReceiverEvents.receiverDrained, onReceiveDrain);\n        }\n        reject(error);\n      };\n\n      // Final action to be performed after maxMessageCount is reached or the maxWaitTime is over.\n      const finalAction = (): void => {\n        if (this._newMessageReceivedTimer) {\n          clearTimeout(this._newMessageReceivedTimer);\n        }\n        if (totalWaitTimer) {\n          clearTimeout(totalWaitTimer);\n        }\n\n        // Unsetting the newMessageWaitTimeoutInSeconds to undefined since we are done receiving\n        // a batch of messages.\n        setnewMessageWaitTimeoutInSeconds();\n\n        // Removing listeners, so that the next receiveMessages() call can set them again.\n        if (this._receiver) {\n          this._receiver.removeListener(ReceiverEvents.message, onReceiveMessage);\n        }\n\n        if (this._receiver && this._receiver.credit > 0) {\n          log.messageSession(\n            \"[%s] Receiver '%s': Draining leftover credits(%d).\",\n            this._context.namespace.connectionId,\n            this.name,\n            this._receiver.credit\n          );\n\n          // Setting drain must be accompanied by a flow call (aliased to addCredit in this case).\n          this._receiver.drain = true;\n          this._receiver.addCredit(1);\n        } else {\n          if (this._receiver) {\n            this._receiver.removeListener(ReceiverEvents.receiverDrained, onReceiveDrain);\n          }\n\n          this.isReceivingMessages = false;\n          log.messageSession(\n            \"[%s] Receiver '%s': Resolving receiveMessages() with %d messages.\",\n            this._context.namespace.connectionId,\n            this.name,\n            brokeredMessages.length\n          );\n          resolve(brokeredMessages);\n        }\n      };\n\n      /**\n       * Resets the timer when a new message is received. If no messages were received for\n       * `newMessageWaitTimeoutInSeconds`, the messages received till now are returned. The\n       * receiver link stays open for the next receive call, but doesnt receive messages until then.\n       * The new message wait timer mechanism is used only in `peekLock` mode.\n       */\n      const resetTimerOnNewMessageReceived =\n        this.receiveMode === ReceiveMode.peekLock\n          ? (): void => {\n              if (this._newMessageReceivedTimer) clearTimeout(this._newMessageReceivedTimer);\n              if (this.newMessageWaitTimeoutInSeconds) {\n                this._newMessageReceivedTimer = setTimeout(async () => {\n                  const msg =\n                    `MessageSession '${this.sessionId}' with name '${this.name}' did not receive ` +\n                    `any messages in the last ${this.newMessageWaitTimeoutInSeconds} seconds. Hence closing it.`;\n                  log.error(\"[%s] %s\", this._context.namespace.connectionId, msg);\n                  finalAction();\n                  if (this.callee === SessionCallee.sessionManager) {\n                    await this.close();\n                  }\n                }, this.newMessageWaitTimeoutInSeconds * 1000);\n              }\n            }\n          : () => {};\n\n      const addCreditAndSetTimer = (reuse?: boolean): void => {\n        log.batching(\n          \"[%s] Receiver '%s', adding credit for receiving %d messages.\",\n          this._context.namespace.connectionId,\n          this.name,\n          maxMessageCount\n        );\n        // By adding credit here, we let the service know that at max we can handle `maxMessageCount`\n        // number of messages concurrently. We will return the user an array of messages that can\n        // be of size upto maxMessageCount. Then the user needs to accordingly dispose\n        // (complete,/abandon/defer/deadletter) the messages from the array.\n        this._receiver!.addCredit(maxMessageCount);\n        let msg: string = \"[%s] Setting the wait timer for %d seconds for receiver '%s'.\";\n        if (reuse) msg += \" Receiver link already present, hence reusing it.\";\n        log.batching(msg, this._context.namespace.connectionId, maxWaitTimeInSeconds, this.name);\n        totalWaitTimer = setTimeout(\n          actionAfterWaitTimeout,\n          (maxWaitTimeInSeconds as number) * 1000\n        );\n      };\n\n      if (this.isOpen()) {\n        this._receiver!.on(ReceiverEvents.message, onReceiveMessage);\n        this._receiver!.on(ReceiverEvents.receiverDrained, onReceiveDrain);\n        addCreditAndSetTimer(true);\n      } else {\n        const msg =\n          `MessageSession \"${this.name}\" with sessionId \"${this.sessionId}\", ` +\n          `is already closed. Hence cannot receive messages in a batch.`;\n        log.error(\"[%s] %s\", this._context.namespace.connectionId, msg);\n        reject(new Error(msg));\n      }\n    });\n  }\n\n  /**\n   * Settles the message with the specified disposition.\n   * @param message The ServiceBus Message that needs to be settled.\n   * @param operation The disposition type.\n   * @param options Optional parameters that can be provided while disposing the message.\n   */\n  async settleMessage(\n    message: ServiceBusMessage,\n    operation: DispositionType,\n    options?: DispositionOptions\n  ): Promise<any> {\n    return new Promise((resolve, reject) => {\n      if (!options) options = {};\n      if (operation.match(/^(complete|abandon|defer|deadletter)$/) == null) {\n        return reject(new Error(`operation: '${operation}' is not a valid operation.`));\n      }\n      const delivery = message.delivery;\n      const timer = setTimeout(() => {\n        this._deliveryDispositionMap.delete(delivery.id);\n        log.receiver(\n          \"[%s] Disposition for delivery id: %d, did not complete in %d milliseconds. \" +\n            \"Hence rejecting the promise with timeout error\",\n          this._context.namespace.connectionId,\n          delivery.id,\n          Constants.defaultOperationTimeoutInSeconds * 1000\n        );\n\n        const e: AmqpError = {\n          condition: ErrorNameConditionMapper.ServiceUnavailableError,\n          description:\n            \"Operation to settle the message has timed out. The disposition of the \" +\n            \"message may or may not be successful\"\n        };\n        return reject(translate(e));\n      }, Constants.defaultOperationTimeoutInSeconds * 1000);\n      this._deliveryDispositionMap.set(delivery.id, {\n        resolve: resolve,\n        reject: reject,\n        timer: timer\n      });\n      if (operation === DispositionType.complete) {\n        delivery.accept();\n      } else if (operation === DispositionType.abandon) {\n        const params: any = {\n          undeliverable_here: false\n        };\n        if (options.propertiesToModify) params.message_annotations = options.propertiesToModify;\n        delivery.modified(params);\n      } else if (operation === DispositionType.defer) {\n        const params: any = {\n          undeliverable_here: true\n        };\n        if (options.propertiesToModify) params.message_annotations = options.propertiesToModify;\n        delivery.modified(params);\n      } else if (operation === DispositionType.deadletter) {\n        delivery.reject(options.error || {});\n      }\n    });\n  }\n\n  /**\n   * Creates a new instance of the MessageSession based on the provided parameters.\n   * @param context The client entity context\n   * @param options Options that can be provided while creating the MessageSession.\n   */\n  static async create(\n    context: ClientEntityContext,\n    options?: MessageSessionOptions\n  ): Promise<MessageSession> {\n    throwErrorIfConnectionClosed(context.namespace);\n    const messageSession = new MessageSession(context, options);\n    await messageSession._init();\n    return messageSession;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nimport Long from \"long\";\nimport * as log from \"./log\";\nimport { StreamingReceiver, MessageHandlerOptions } from \"./core/streamingReceiver\";\nimport { BatchingReceiver } from \"./core/batchingReceiver\";\nimport { ReceiveOptions, OnError, OnMessage } from \"./core/messageReceiver\";\nimport { ClientEntityContext } from \"./clientEntityContext\";\nimport { ServiceBusMessage, ReceiveMode, ReceivedMessageInfo } from \"./serviceBusMessage\";\nimport {\n  MessageSession,\n  SessionMessageHandlerOptions,\n  SessionReceiverOptions\n} from \"./session/messageSession\";\nimport {\n  getAlreadyReceivingErrorMsg,\n  getOpenReceiverErrorMsg,\n  getReceiverClosedErrorMsg,\n  throwErrorIfConnectionClosed,\n  throwTypeErrorIfParameterMissing,\n  throwTypeErrorIfParameterNotLong,\n  throwTypeErrorIfParameterNotLongArray,\n  getErrorMessageNotSupportedInReceiveAndDeleteMode\n} from \"./util/errors\";\n\n/**\n * The Receiver class can be used to receive messages in a batch or by registering handlers.\n * Use the `createReceiver` function on the QueueClient or SubscriptionClient to instantiate a Receiver.\n * The Receiver class is an abstraction over the underlying AMQP receiver link.\n * @class Receiver\n */\nexport class Receiver {\n  /**\n   * @property Describes the amqp connection context for the QueueClient.\n   */\n  private _context: ClientEntityContext;\n  private _receiveMode: ReceiveMode;\n  /**\n   * @property {boolean} [_isClosed] Denotes if close() was called on this receiver\n   */\n  private _isClosed: boolean = false;\n\n  /**\n   * @internal\n   * @throws Error if the underlying connection is closed.\n   */\n  constructor(context: ClientEntityContext, receiveMode: ReceiveMode) {\n    throwErrorIfConnectionClosed(context.namespace);\n    this._context = context;\n\n    this._receiveMode =\n      receiveMode === ReceiveMode.receiveAndDelete ? receiveMode : ReceiveMode.peekLock;\n  }\n\n  private _throwIfAlreadyReceiving(): void {\n    if (this.isReceivingMessages()) {\n      const errorMessage = getAlreadyReceivingErrorMsg(this._context.entityPath);\n      const error = new Error(errorMessage);\n      log.error(`[${this._context.namespace.connectionId}] %O`, error);\n      throw error;\n    }\n  }\n\n  private _throwIfReceiverOrConnectionClosed(): void {\n    throwErrorIfConnectionClosed(this._context.namespace);\n    if (this.isClosed) {\n      const errorMessage = getReceiverClosedErrorMsg(\n        this._context.entityPath,\n        this._context.clientType,\n        this._context.isClosed\n      );\n      const error = new Error(errorMessage);\n      log.error(`[${this._context.namespace.connectionId}] %O`, error);\n      throw error;\n    }\n  }\n\n  /**\n   * @property Denotes receiveMode of this receiver.\n   * @readonly\n   */\n  public get receiveMode(): ReceiveMode {\n    return this._receiveMode;\n  }\n\n  /**\n   * @property Returns `true` if the receiver is closed. This can happen either because the receiver\n   * itself has been closed or the client that created it has been closed.\n   * @readonly\n   */\n  public get isClosed(): boolean {\n    return this._isClosed || this._context.isClosed;\n  }\n\n  /**\n   * Registers handlers to deal with the incoming stream of messages over an AMQP receiver link\n   * from a Queue/Subscription.\n   * To stop receiving messages, call `close()` on the Receiver.\n   *\n   * Throws an error if there is another receive operation in progress on the same receiver. If you\n   * are not sure whether there is another receive operation running, check the `isReceivingMessages`\n   * property on the receiver.\n   *\n   * @param onMessage - Handler for processing each incoming message.\n   * @param onError - Handler for any error that occurs while receiving or processing messages.\n   * @param options - Options to control if messages should be automatically completed, and/or have\n   * their locks automatically renewed. You can control the maximum number of messages that should\n   * be concurrently processed. You can also provide a timeout in seconds to denote the\n   * amount of time to wait for a new message before closing the receiver.\n   *\n   * @returns void\n   * @throws Error if the underlying connection or receiver is closed.\n   * @throws Error if current receiver is already in state of receiving messages.\n   * @throws MessagingError if the service returns an error while receiving messages. These are bubbled up to be handled by user provided `onError` handler.\n   */\n  registerMessageHandler(\n    onMessage: OnMessage,\n    onError: OnError,\n    options?: MessageHandlerOptions\n  ): void {\n    this._throwIfReceiverOrConnectionClosed();\n    this._throwIfAlreadyReceiving();\n    const connId = this._context.namespace.connectionId;\n    throwTypeErrorIfParameterMissing(connId, \"onMessage\", onMessage);\n    throwTypeErrorIfParameterMissing(connId, \"onError\", onError);\n    if (typeof onMessage !== \"function\") {\n      throw new TypeError(\"The parameter 'onMessage' must be of type 'function'.\");\n    }\n    if (typeof onError !== \"function\") {\n      throw new TypeError(\"The parameter 'onError' must be of type 'function'.\");\n    }\n\n    StreamingReceiver.create(this._context, {\n      ...options,\n      receiveMode: this._receiveMode\n    })\n      .then(async (sReceiver) => {\n        if (!sReceiver) {\n          return;\n        }\n        if (!this.isClosed) {\n          sReceiver.receive(onMessage, onError);\n        } else {\n          await sReceiver.close();\n        }\n        return;\n      })\n      .catch((err) => {\n        onError(err);\n      });\n  }\n\n  /**\n   * Returns a promise that resolves to an array of messages based on given count and timeout over\n   * an AMQP receiver link from a Queue/Subscription.\n   *\n   * Throws an error if there is another receive operation in progress on the same receiver. If you\n   * are not sure whether there is another receive operation running, check the `isReceivingMessages`\n   * property on the receiver.\n   *\n   * @param maxMessageCount      The maximum number of messages to receive from Queue/Subscription.\n   * @param maxWaitTimeInSeconds The total wait time in seconds until which the receiver will attempt to receive specified number of messages.\n   * If this time elapses before the `maxMessageCount` is reached, then messages collected till then will be returned to the user.\n   * - **Default**: `60` seconds.\n   * @returns Promise<ServiceBusMessage[]> A promise that resolves with an array of Message objects.\n   * @throws Error if the underlying connection, client or receiver is closed.\n   * @throws Error if current receiver is already in state of receiving messages.\n   * @throws MessagingError if the service returns an error while receiving messages.\n   */\n  async receiveMessages(\n    maxMessageCount: number,\n    maxWaitTimeInSeconds?: number\n  ): Promise<ServiceBusMessage[]> {\n    this._throwIfReceiverOrConnectionClosed();\n    this._throwIfAlreadyReceiving();\n\n    if (!this._context.batchingReceiver || !this._context.batchingReceiver.isOpen()) {\n      const options: ReceiveOptions = {\n        maxConcurrentCalls: 0,\n        receiveMode: this._receiveMode\n      };\n      this._context.batchingReceiver = BatchingReceiver.create(this._context, options);\n    }\n\n    return this._context.batchingReceiver.receive(maxMessageCount, maxWaitTimeInSeconds);\n  }\n\n  /**\n   * Gets an async iterator over messages from the receiver.\n   *\n   * Throws an error if there is another receive operation in progress on the same receiver. If you\n   * are not sure whether there is another receive operation running, check the `isReceivingMessages`\n   * property on the receiver.\n   *\n   * If the iterator is not able to fetch a new message in over a minute, `undefined` will be returned.\n   * @throws Error if the underlying connection, client or receiver is closed.\n   * @throws Error if current receiver is already in state of receiving messages.\n   * @throws MessagingError if the service returns an error while receiving messages.\n   */\n  async *getMessageIterator(): AsyncIterableIterator<ServiceBusMessage> {\n    while (true) {\n      const currentBatch = await this.receiveMessages(1);\n      yield currentBatch[0];\n    }\n  }\n\n  /**\n   * Renews the lock on the message for the duration as specified during the Queue/Subscription\n   * creation.\n   * - Check the `lockedUntilUtc` property on the message for the time when the lock expires.\n   * - If a message is not settled (using either `complete()`, `defer()` or `deadletter()`,\n   * before its lock expires, then the message lands back in the Queue/Subscription for the next\n   * receive operation.\n   *\n   * @param lockTokenOrMessage - The `lockToken` property of the message or the message itself.\n   * @returns Promise<Date> - New lock token expiry date and time in UTC format.\n   * @throws Error if the underlying connection, client or receiver is closed.\n   * @throws MessagingError if the service returns an error while renewing message lock.\n   */\n  async renewMessageLock(lockTokenOrMessage: string | ServiceBusMessage): Promise<Date> {\n    this._throwIfReceiverOrConnectionClosed();\n    if (this._receiveMode !== ReceiveMode.peekLock) {\n      throw new Error(getErrorMessageNotSupportedInReceiveAndDeleteMode(\"renew the message lock\"));\n    }\n    throwTypeErrorIfParameterMissing(\n      this._context.namespace.connectionId,\n      \"lockTokenOrMessage\",\n      lockTokenOrMessage\n    );\n\n    const lockToken =\n      lockTokenOrMessage instanceof ServiceBusMessage\n        ? String(lockTokenOrMessage.lockToken)\n        : String(lockTokenOrMessage);\n\n    const lockedUntilUtc = await this._context.managementClient!.renewLock(lockToken);\n\n    return lockedUntilUtc;\n  }\n\n  /**\n   * Returns a promise that resolves to a deferred message identified by the given `sequenceNumber`.\n   * @param sequenceNumber The sequence number of the message that needs to be received.\n   * @returns Promise<ServiceBusMessage | undefined>\n   * - Returns `Message` identified by sequence number.\n   * - Returns `undefined` if no such message is found.\n   * @throws Error if the underlying connection, client or receiver is closed.\n   * @throws MessagingError if the service returns an error while receiving deferred message.\n   */\n  async receiveDeferredMessage(sequenceNumber: Long): Promise<ServiceBusMessage | undefined> {\n    this._throwIfReceiverOrConnectionClosed();\n    throwTypeErrorIfParameterMissing(\n      this._context.namespace.connectionId,\n      \"sequenceNumber\",\n      sequenceNumber\n    );\n    throwTypeErrorIfParameterNotLong(\n      this._context.namespace.connectionId,\n      \"sequenceNumber\",\n      sequenceNumber\n    );\n\n    const messages = await this._context.managementClient!.receiveDeferredMessages(\n      [sequenceNumber],\n      this._receiveMode\n    );\n    return messages[0];\n  }\n\n  /**\n   * Returns a promise that resolves to an array of deferred messages identified by given `sequenceNumbers`.\n   * @param sequenceNumbers An array of sequence numbers for the messages that need to be received.\n   * @returns Promise<ServiceBusMessage[]>\n   * - Returns a list of messages identified by the given sequenceNumbers.\n   * - Returns an empty list if no messages are found.\n   * @throws Error if the underlying connection, client or receiver is closed.\n   * @throws MessagingError if the service returns an error while receiving deferred messages.\n   */\n  async receiveDeferredMessages(sequenceNumbers: Long[]): Promise<ServiceBusMessage[]> {\n    this._throwIfReceiverOrConnectionClosed();\n    throwTypeErrorIfParameterMissing(\n      this._context.namespace.connectionId,\n      \"sequenceNumbers\",\n      sequenceNumbers\n    );\n    if (!Array.isArray(sequenceNumbers)) {\n      sequenceNumbers = [sequenceNumbers];\n    }\n    throwTypeErrorIfParameterNotLongArray(\n      this._context.namespace.connectionId,\n      \"sequenceNumbers\",\n      sequenceNumbers\n    );\n\n    return this._context.managementClient!.receiveDeferredMessages(\n      sequenceNumbers,\n      this._receiveMode\n    );\n  }\n\n  /**\n   * Closes the underlying AMQP receiver link.\n   * Once closed, the receiver cannot be used for any further operations.\n   * Use the `createReceiver` function on the QueueClient or SubscriptionClient to instantiate\n   * a new Receiver\n   *\n   * @returns {Promise<void>}\n   */\n  async close(): Promise<void> {\n    try {\n      this._isClosed = true;\n      if (this._context.namespace.connection && this._context.namespace.connection.isOpen()) {\n        // Close the streaming receiver.\n        if (this._context.streamingReceiver) {\n          await this._context.streamingReceiver.close();\n        }\n\n        // Close the batching receiver.\n        if (this._context.batchingReceiver) {\n          await this._context.batchingReceiver.close();\n        }\n\n        // Make sure that we clear the map of deferred messages\n        this._context.requestResponseLockedMessages.clear();\n      }\n    } catch (err) {\n      log.error(\n        \"[%s] An error occurred while closing the Receiver for %s: %O\",\n        this._context.namespace.connectionId,\n        this._context.entityPath,\n        err\n      );\n      throw err;\n    }\n  }\n\n  /**\n   * Indicates whether the receiver is currently receiving messages or not.\n   * When this returns true, new `registerMessageHandler()` or `receiveMessages()` calls cannot be made.\n   */\n  isReceivingMessages(): boolean {\n    if (this._context.streamingReceiver && this._context.streamingReceiver.isOpen()) {\n      return true;\n    }\n    if (\n      this._context.batchingReceiver &&\n      this._context.batchingReceiver.isOpen() &&\n      this._context.batchingReceiver.isReceivingMessages\n    ) {\n      return true;\n    }\n    return false;\n  }\n}\n\n/**\n * The SessionReceiver class can be used to receive messages from a session enabled Queue or\n * Subscription in a batch or by registering handlers.\n * Use the `createReceiver` function on the QueueClient or SubscriptionClient to instantiate a\n * SessionReceiver.\n * The SessionReceiver class is an abstraction over the underlying AMQP receiver link.\n * @class SessionReceiver\n */\nexport class SessionReceiver {\n  /**\n   * @property {ClientEntityContext} _context Describes the amqp connection context for the QueueClient.\n   */\n\n  private _context: ClientEntityContext;\n  private _receiveMode: ReceiveMode;\n  private _messageSession: MessageSession | undefined;\n  private _sessionOptions: SessionReceiverOptions;\n  /**\n   * @property {boolean} [_isClosed] Denotes if close() was called on this receiver\n   */\n  private _isClosed: boolean = false;\n  private _sessionId: string | undefined;\n\n  /**\n   * @internal\n   * @throws Error if the underlying connection is closed.\n   * @throws Error if an open receiver is already existing for given sessionId.\n   */\n  constructor(\n    context: ClientEntityContext,\n    receiveMode: ReceiveMode,\n    sessionOptions: SessionReceiverOptions\n  ) {\n    throwErrorIfConnectionClosed(context.namespace);\n    this._context = context;\n    this._receiveMode =\n      receiveMode === ReceiveMode.receiveAndDelete ? receiveMode : ReceiveMode.peekLock;\n    this._sessionOptions = sessionOptions;\n\n    if (sessionOptions.sessionId) {\n      sessionOptions.sessionId = String(sessionOptions.sessionId);\n\n      // Check if receiver for given session already exists\n      if (\n        this._context.messageSessions[sessionOptions.sessionId] &&\n        this._context.messageSessions[sessionOptions.sessionId].isOpen()\n      ) {\n        const errorMessage = getOpenReceiverErrorMsg(\n          this._context.clientType,\n          this._context.entityPath,\n          sessionOptions.sessionId\n        );\n        const error = new Error(errorMessage);\n        log.error(`[${this._context.namespace.connectionId}] %O`, error);\n        throw error;\n      }\n    }\n  }\n\n  private _throwIfReceiverOrConnectionClosed(): void {\n    throwErrorIfConnectionClosed(this._context.namespace);\n    if (this.isClosed) {\n      const errorMessage = getReceiverClosedErrorMsg(\n        this._context.entityPath,\n        this._context.clientType,\n        this._context.isClosed,\n        this.sessionId!\n      );\n      const error = new Error(errorMessage);\n      log.error(`[${this._context.namespace.connectionId}] %O`, error);\n      throw error;\n    }\n  }\n\n  private async _createMessageSessionIfDoesntExist(): Promise<void> {\n    if (this._messageSession) {\n      return;\n    }\n    this._context.isSessionEnabled = true;\n    this._messageSession = await MessageSession.create(this._context, {\n      sessionId: this._sessionOptions.sessionId,\n      maxSessionAutoRenewLockDurationInSeconds: this._sessionOptions\n        .maxSessionAutoRenewLockDurationInSeconds,\n      receiveMode: this._receiveMode\n    });\n    // By this point, we should have a valid sessionId on the messageSession\n    // If not, the receiver cannot be used, so throw error.\n    if (this._messageSession.sessionId == null) {\n      const error = new Error(\"Something went wrong. Cannot lock a session.\");\n      log.error(`[${this._context.namespace.connectionId}] %O`, error);\n      throw error;\n    }\n    this._sessionId = this._messageSession.sessionId;\n    delete this._context.expiredMessageSessions[this._messageSession.sessionId];\n  }\n\n  private _throwIfAlreadyReceiving(): void {\n    if (this.isReceivingMessages()) {\n      const errorMessage = getAlreadyReceivingErrorMsg(this._context.entityPath, this.sessionId);\n      const error = new Error(errorMessage);\n      log.error(`[${this._context.namespace.connectionId}] %O`, error);\n      throw error;\n    }\n  }\n\n  /**\n   * @property Denotes receiveMode of this receiver.\n   * @readonly\n   */\n  public get receiveMode(): ReceiveMode {\n    return this._receiveMode;\n  }\n\n  /**\n   * @property Returns `true` if the receiver is closed. This can happen either because the receiver\n   * itself has been closed or the client that created it has been closed.\n   * @readonly\n   */\n  public get isClosed(): boolean {\n    return (\n      this._isClosed || (this.sessionId ? !this._context.messageSessions[this.sessionId] : false)\n    );\n  }\n\n  /**\n   * @property The id of the session from which this receiver will receive messages.\n   * Will return undefined until a AMQP receiver link has been successfully set up for the session.\n   * @readonly\n   */\n  public get sessionId(): string | undefined {\n    return this._sessionId;\n  }\n\n  /**\n   * @property The time in UTC until which the session is locked.\n   * Everytime `renewSessionLock()` is called, this time gets updated to current time plus the lock\n   * duration as specified during the Queue/Subscription creation.\n   *\n   * Will return undefined until a AMQP receiver link has been successfully set up for the session.\n   *\n   * @readonly\n   */\n  public get sessionLockedUntilUtc(): Date | undefined {\n    return this._messageSession ? this._messageSession.sessionLockedUntilUtc : undefined;\n  }\n\n  /**\n   * Renews the lock on the session for the duration as specified during the Queue/Subscription\n   * creation.\n   * - Check the `sessionLockedUntilUtc` property on the SessionReceiver for the time when the lock expires.\n   * - When the lock on the session expires\n   *     - No more messages can be received using this receiver\n   *     - If a message is not settled (using either `complete()`, `defer()` or `deadletter()`,\n   *   before the session lock expires, then the message lands back in the Queue/Subscription for the next\n   *   receive operation.\n   *\n   * @returns Promise<Date> - New lock token expiry date and time in UTC format.\n   * @throws Error if the underlying connection or receiver is closed.\n   * @throws MessagingError if the service returns an error while renewing session lock.\n   */\n  async renewSessionLock(): Promise<Date> {\n    this._throwIfReceiverOrConnectionClosed();\n    await this._createMessageSessionIfDoesntExist();\n\n    this._messageSession!.sessionLockedUntilUtc = await this._context.managementClient!.renewSessionLock(\n      this.sessionId!\n    );\n    return this._messageSession!.sessionLockedUntilUtc!;\n  }\n\n  /**\n   * Sets the state on the Session. For more on session states, see\n   * {@link https://docs.microsoft.com/en-us/azure/service-bus-messaging/message-sessions#message-session-state Session State}\n   * @param state The state that needs to be set.\n   * @throws Error if the underlying connection or receiver is closed.\n   * @throws MessagingError if the service returns an error while setting the session state.\n   */\n  async setState(state: any): Promise<void> {\n    this._throwIfReceiverOrConnectionClosed();\n    await this._createMessageSessionIfDoesntExist();\n    return this._context.managementClient!.setSessionState(this.sessionId!, state);\n  }\n\n  /**\n   * Gets the state of the Session. For more on session states, see\n   * {@link https://docs.microsoft.com/en-us/azure/service-bus-messaging/message-sessions#message-session-state Session State}\n   * @returns Promise<any> The state of that session\n   * @throws Error if the underlying connection or receiver is closed.\n   * @throws MessagingError if the service returns an error while retrieving session state.\n   */\n  async getState(): Promise<any> {\n    this._throwIfReceiverOrConnectionClosed();\n    await this._createMessageSessionIfDoesntExist();\n    return this._context.managementClient!.getSessionState(this.sessionId!);\n  }\n\n  /**\n   * Fetches the next batch of active messages (including deferred but not deadlettered messages) in\n   * the current session.\n   * - The first call to `peek()` fetches the first active message. Each subsequent call fetches the\n   * subsequent message.\n   * - Unlike a `received` message, `peeked` message is a read-only version of the message.\n   * It cannot be `Completed/Abandoned/Deferred/Deadlettered`. The lock on it cannot be renewed.\n   *\n   * @param maxMessageCount The maximum number of messages to peek. Default value `1`.\n   * @returns Promise<ReceivedMessageInfo[]>\n   * @throws Error if the underlying connection or receiver is closed.\n   * @throws MessagingError if the service returns an error while peeking for messages.\n   */\n  async peek(maxMessageCount?: number): Promise<ReceivedMessageInfo[]> {\n    this._throwIfReceiverOrConnectionClosed();\n    await this._createMessageSessionIfDoesntExist();\n    return this._context.managementClient!.peekMessagesBySession(this.sessionId!, maxMessageCount);\n  }\n\n  /**\n   * Peeks the desired number of active messages (including deferred but not deadlettered messages)\n   * from the specified sequence number in the current session.\n   * - Unlike a `received` message, `peeked` message is a read-only version of the message.\n   * It cannot be `Completed/Abandoned/Deferred/Deadlettered`. The lock on it cannot be renewed.\n   *\n   * @param fromSequenceNumber The sequence number from where to read the message.\n   * @param [maxMessageCount] The maximum number of messages to peek. Default value `1`.\n   * @returns Promise<ReceivedSBMessage[]>\n   * @throws Error if the underlying connection or receiver is closed.\n   * @throws MessagingError if the service returns an error while peeking for messages.\n   */\n  async peekBySequenceNumber(\n    fromSequenceNumber: Long,\n    maxMessageCount?: number\n  ): Promise<ReceivedMessageInfo[]> {\n    this._throwIfReceiverOrConnectionClosed();\n    await this._createMessageSessionIfDoesntExist();\n    return this._context.managementClient!.peekBySequenceNumber(\n      fromSequenceNumber,\n      maxMessageCount,\n      this.sessionId\n    );\n  }\n\n  /**\n   * Returns a promise that resolves to a deferred message identified by the given `sequenceNumber`.\n   * @param sequenceNumber The sequence number of the message that needs to be received.\n   * @returns Promise<ServiceBusMessage | undefined>\n   * - Returns `Message` identified by sequence number.\n   * - Returns `undefined` if no such message is found.\n   * @throws Error if the underlying connection or receiver is closed.\n   * @throws MessagingError if the service returns an error while receiving deferred message.\n   */\n  async receiveDeferredMessage(sequenceNumber: Long): Promise<ServiceBusMessage | undefined> {\n    this._throwIfReceiverOrConnectionClosed();\n    throwTypeErrorIfParameterMissing(\n      this._context.namespace.connectionId,\n      \"sequenceNumber\",\n      sequenceNumber\n    );\n    throwTypeErrorIfParameterNotLong(\n      this._context.namespace.connectionId,\n      \"sequenceNumber\",\n      sequenceNumber\n    );\n\n    await this._createMessageSessionIfDoesntExist();\n    const messages = await this._context.managementClient!.receiveDeferredMessages(\n      [sequenceNumber],\n      this._receiveMode,\n      this.sessionId\n    );\n    return messages[0];\n  }\n\n  /**\n   * Returns a promise that resolves to an array of deferred messages identified by given `sequenceNumbers`.\n   * @param sequenceNumbers An array of sequence numbers for the messages that need to be received.\n   * @returns Promise<ServiceBusMessage[]>\n   * - Returns a list of messages identified by the given sequenceNumbers.\n   * - Returns an empty list if no messages are found.\n   * @throws Error if the underlying connection or receiver is closed.\n   * @throws MessagingError if the service returns an error while receiving deferred messages.\n   */\n  async receiveDeferredMessages(sequenceNumbers: Long[]): Promise<ServiceBusMessage[]> {\n    this._throwIfReceiverOrConnectionClosed();\n    throwTypeErrorIfParameterMissing(\n      this._context.namespace.connectionId,\n      \"sequenceNumbers\",\n      sequenceNumbers\n    );\n    if (!Array.isArray(sequenceNumbers)) {\n      sequenceNumbers = [sequenceNumbers];\n    }\n    throwTypeErrorIfParameterNotLongArray(\n      this._context.namespace.connectionId,\n      \"sequenceNumbers\",\n      sequenceNumbers\n    );\n\n    await this._createMessageSessionIfDoesntExist();\n    return this._context.managementClient!.receiveDeferredMessages(\n      sequenceNumbers,\n      this._receiveMode,\n      this.sessionId\n    );\n  }\n\n  /**\n   * Returns a promise that resolves to an array of messages based on given count and timeout over\n   * an AMQP receiver link from a Queue/Subscription.\n   *\n   * Throws an error if there is another receive operation in progress on the same receiver. If you\n   * are not sure whether there is another receive operation running, check the `isReceivingMessages`\n   * property on the receiver.\n   *\n   * @param maxMessageCount      The maximum number of messages to receive from Queue/Subscription.\n   * @param maxWaitTimeInSeconds The total wait time in seconds until which the receiver will attempt to receive specified number of messages.\n   * If this time elapses before the `maxMessageCount` is reached, then messages collected till then will be returned to the user.\n   * - **Default**: `60` seconds.\n   * @returns Promise<ServiceBusMessage[]> A promise that resolves with an array of Message objects.\n   * @throws Error if the underlying connection or receiver is closed.\n   * @throws Error if the receiver is already in state of receiving messages.\n   * @throws MessagingError if the service returns an error while receiving messages.\n   */\n  async receiveMessages(\n    maxMessageCount: number,\n    maxWaitTimeInSeconds?: number\n  ): Promise<ServiceBusMessage[]> {\n    this._throwIfReceiverOrConnectionClosed();\n    this._throwIfAlreadyReceiving();\n    await this._createMessageSessionIfDoesntExist();\n    return this._messageSession!.receiveMessages(maxMessageCount, maxWaitTimeInSeconds);\n  }\n\n  /**\n   * Registers handlers to deal with the incoming stream of messages over an AMQP receiver link\n   * from a Queue/Subscription.\n   * To stop receiving messages, call `close()` on the SessionReceiver.\n   *\n   * Throws an error if there is another receive operation in progress on the same receiver. If you\n   * are not sure whether there is another receive operation running, check the `isReceivingMessages`\n   * property on the receiver.\n   *\n   * @param onMessage - Handler for processing each incoming message.\n   * @param onError - Handler for any error that occurs while receiving or processing messages.\n   * @param options - Options to control whether messages should be automatically completed\n   * or if the lock on the session should be automatically renewed. You can control the\n   * maximum number of messages that should be concurrently processed. You can\n   * also provide a timeout in seconds to denote the amount of time to wait for a new message\n   * before closing the receiver.\n   *\n   * @returns void\n   * @throws Error if the underlying connection or receiver is closed.\n   * @throws Error if the receiver is already in state of receiving messages.\n   * @throws MessagingErrormif the service returns an error while receiving messages. These are bubbled up to be handled by user provided `onError` handler.\n   */\n  registerMessageHandler(\n    onMessage: OnMessage,\n    onError: OnError,\n    options?: SessionMessageHandlerOptions\n  ): void {\n    this._throwIfReceiverOrConnectionClosed();\n    this._throwIfAlreadyReceiving();\n    const connId = this._context.namespace.connectionId;\n    throwTypeErrorIfParameterMissing(connId, \"onMessage\", onMessage);\n    throwTypeErrorIfParameterMissing(connId, \"onError\", onError);\n    if (typeof onMessage !== \"function\") {\n      throw new TypeError(\"The parameter 'onMessage' must be of type 'function'.\");\n    }\n    if (typeof onError !== \"function\") {\n      throw new TypeError(\"The parameter 'onError' must be of type 'function'.\");\n    }\n\n    this._createMessageSessionIfDoesntExist()\n      .then(async () => {\n        if (!this._messageSession) {\n          return;\n        }\n        if (!this._isClosed) {\n          this._messageSession.receive(onMessage, onError, options);\n        } else {\n          await this._messageSession.close();\n        }\n        return;\n      })\n      .catch((err) => {\n        onError(err);\n      });\n  }\n\n  /**\n   * Gets an async iterator over messages from the receiver.\n   *\n   * Throws an error if there is another receive operation in progress on the same receiver. If you\n   * are not sure whether there is another receive operation running, check the `isReceivingMessages`\n   * property on the receiver.\n   *\n   * If the iterator is not able to fetch a new message in over a minute, `undefined` will be returned\n   * @throws Error if the underlying connection or receiver is closed.\n   * @throws Error if the receiver is already in state of receiving messages.\n   * @throws MessagingError if the service returns an error while receiving messages.\n   */\n  async *getMessageIterator(): AsyncIterableIterator<ServiceBusMessage> {\n    while (true) {\n      const currentBatch = await this.receiveMessages(1);\n      yield currentBatch[0];\n    }\n  }\n\n  /**\n   * Closes the underlying AMQP receiver link.\n   * Once closed, the receiver cannot be used for any further operations.\n   * Use the `createReceiver` function on the QueueClient or SubscriptionClient to instantiate\n   * a new Receiver\n   *\n   * @returns {Promise<void>}\n   */\n  async close(): Promise<void> {\n    try {\n      if (this._messageSession) {\n        await this._messageSession.close();\n        this._messageSession = undefined;\n      }\n    } catch (err) {\n      log.error(\n        \"[%s] An error occurred while closing the SessionReceiver for session %s in %s: %O\",\n        this._context.namespace.connectionId,\n        this.sessionId,\n        this._context.entityPath,\n        err\n      );\n      throw err;\n    } finally {\n      this._isClosed = true;\n    }\n  }\n\n  /**\n   * Indicates whether the receiver is currently receiving messages or not.\n   * When this returns true, new `registerMessageHandler()` or `receiveMessages()` calls cannot be made.\n   */\n  isReceivingMessages(): boolean {\n    return this._messageSession ? this._messageSession.isReceivingMessages : false;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport Long from \"long\";\nimport {\n  EventContext,\n  SenderEvents,\n  ReceiverEvents,\n  SenderOptions,\n  ReceiverOptions,\n  types,\n  message as RheaMessageUtil,\n  generate_uuid,\n  string_to_uuid\n} from \"rhea-promise\";\nimport {\n  defaultLock,\n  translate,\n  Constants,\n  RequestResponseLink,\n  ConditionErrorNameMapper,\n  AmqpMessage,\n  SendRequestOptions\n} from \"@azure/amqp-common\";\nimport { ClientEntityContext } from \"../clientEntityContext\";\nimport {\n  ReceivedMessageInfo,\n  ServiceBusMessage,\n  SendableMessageInfo,\n  DispositionStatus,\n  toAmqpMessage,\n  getMessagePropertyTypeMismatchError\n} from \"../serviceBusMessage\";\nimport { LinkEntity } from \"./linkEntity\";\nimport * as log from \"../log\";\nimport { ReceiveMode, fromAmqpMessage } from \"../serviceBusMessage\";\nimport { toBuffer } from \"../util/utils\";\nimport {\n  throwErrorIfConnectionClosed,\n  throwTypeErrorIfParameterMissing,\n  throwTypeErrorIfParameterNotLong,\n  throwTypeErrorIfParameterTypeMismatch,\n  throwTypeErrorIfParameterIsEmptyString\n} from \"../util/errors\";\nimport { Typed } from \"rhea-promise\";\nimport { max32BitNumber } from \"../util/constants\";\nimport { Buffer } from \"buffer\";\n\n/**\n * Represents a Rule on a Subscription that is used to filter the incoming message from the\n * Subscription.\n */\nexport interface RuleDescription {\n  /**\n   * Filter expression used to match messages. Supports 2 types:\n   * - `string`: SQL-like condition expression that is evaluated against the messages'\n   * user-defined properties and system properties. All system properties will be prefixed with\n   * `sys.` in the condition expression.\n   * - `CorrelationFilter`: Properties of the filter will be used to match with the message properties.\n   */\n  filter?: string | CorrelationFilter;\n  /**\n   * Action to perform if the message satisfies the filtering expression.\n   */\n  action?: string;\n  /**\n   * Represents the name of the rule.\n   */\n  name: string;\n}\n\n/**\n * Represents the correlation filter expression.\n * A CorrelationFilter holds a set of conditions that are matched against user and system properties\n * of incoming messages from a Subscription.\n */\nexport interface CorrelationFilter {\n  /**\n   * Value to be matched with the `correlationId` property of the incoming message.\n   */\n  correlationId?: string;\n  /**\n   * Value to be matched with the `messageId` property of the incoming message.\n   */\n  messageId?: string;\n  /**\n   * Value to be matched with the `to` property of the incoming message.\n   */\n  to?: string;\n  /**\n   * Value to be matched with the `replyTo` property of the incoming message.\n   */\n  replyTo?: string;\n  /**\n   * Value to be matched with the `label` property of the incoming message.\n   */\n  label?: string;\n  /**\n   * Value to be matched with the `sessionId` property of the incoming message.\n   */\n  sessionId?: string;\n  /**\n   * Value to be matched with the `replyToSessionId` property of the incoming message.\n   */\n  replyToSessionId?: string;\n  /**\n   * Value to be matched with the `contentType` property of the incoming message.\n   */\n  contentType?: string;\n  /**\n   * Value to be matched with the user properties of the incoming message.\n   */\n  userProperties?: any;\n}\n\nconst correlationProperties = [\n  \"correlationId\",\n  \"messageId\",\n  \"to\",\n  \"replyTo\",\n  \"label\",\n  \"sessionId\",\n  \"replyToSessionId\",\n  \"contentType\",\n  \"userProperties\"\n];\n\n/**\n * @internal\n * Options to set when updating the disposition status\n */\ninterface DispositionStatusOptions {\n  /**\n   * @property [propertiesToModify] A dictionary of Service Bus brokered message properties\n   * to modify.\n   */\n  propertiesToModify?: { [key: string]: any };\n  /**\n   * @property [deadLetterReason] The deadletter reason. May be set if disposition status\n   * is set to suspended.\n   */\n  deadLetterReason?: string;\n  /**\n   * @property [deadLetterDescription] The deadletter description. May be set if disposition status\n   * is set to suspended.\n   */\n  deadLetterDescription?: string;\n  /**\n   * This should only be provided if `session` is enabled for a Queue or Topic.\n   */\n  sessionId?: string;\n}\n\n/**\n * @internal\n * Options passed to the constructor of ManagementClient\n */\nexport interface ManagementClientOptions {\n  address?: string;\n  audience?: string;\n}\n\n/**\n * @internal\n * @class ManagementClient\n * Descibes the ServiceBus Management Client that talks\n * to the $management endpoint over AMQP connection.\n */\nexport class ManagementClient extends LinkEntity {\n  readonly managementLock: string = `${Constants.managementRequestKey}-${generate_uuid()}`;\n  /**\n   * @property {string} entityPath - The name/path of the entity (queue/topic/subscription name)\n   * for which the management request needs to be made.\n   */\n  entityPath: string;\n  /**\n   * @property {string} replyTo The reply to Guid for the management client.\n   */\n  replyTo: string = generate_uuid();\n  /**\n   * @property $management sender, receiver on the same session.\n   * @private\n   */\n  private _mgmtReqResLink?: RequestResponseLink;\n  /**\n   * @property _lastPeekedSequenceNumber Provides the sequence number of the last peeked message.\n   * @private\n   */\n  private _lastPeekedSequenceNumber: Long = Long.ZERO;\n\n  /**\n   * @constructor\n   * Instantiates the management client.\n   * @param {ClientEntityContext} context The client entity context.\n   * @param {ManagementClientOptions} [options] Options to be provided for creating the\n   * \"$management\" client.\n   */\n  constructor(context: ClientEntityContext, options?: ManagementClientOptions) {\n    super(`${context.entityPath}/$management`, context, {\n      address: options && options.address ? options.address : Constants.management,\n      audience:\n        options && options.audience\n          ? options.audience\n          : `${context.namespace.config.endpoint}${context.entityPath}/$management`\n    });\n    this._context = context;\n    this.entityPath = context.namespace.config.entityPath as string;\n  }\n\n  private async _init(): Promise<void> {\n    throwErrorIfConnectionClosed(this._context.namespace);\n    try {\n      if (!this._isMgmtRequestResponseLinkOpen()) {\n        await this._negotiateClaim();\n        const rxopt: ReceiverOptions = {\n          source: { address: this.address },\n          name: this.replyTo,\n          target: { address: this.replyTo },\n          onSessionError: (context: EventContext) => {\n            const id = context.connection.options.id;\n            const ehError = translate(context.session!.error!);\n            log.error(\n              \"[%s] An error occurred on the session for request/response links for \" +\n                \"$management: %O\",\n              id,\n              ehError\n            );\n          }\n        };\n        const sropt: SenderOptions = { target: { address: this.address } };\n        log.mgmt(\n          \"[%s] Creating sender/receiver links on a session for $management endpoint with \" +\n            \"srOpts: %o, receiverOpts: %O.\",\n          this._context.namespace.connectionId,\n          sropt,\n          rxopt\n        );\n        this._mgmtReqResLink = await RequestResponseLink.create(\n          this._context.namespace.connection,\n          sropt,\n          rxopt\n        );\n        this._mgmtReqResLink.sender.on(SenderEvents.senderError, (context: EventContext) => {\n          const id = context.connection.options.id;\n          const ehError = translate(context.sender!.error!);\n          log.error(\"[%s] An error occurred on the $management sender link.. %O\", id, ehError);\n        });\n        this._mgmtReqResLink.receiver.on(ReceiverEvents.receiverError, (context: EventContext) => {\n          const id = context.connection.options.id;\n          const ehError = translate(context.receiver!.error!);\n          log.error(\"[%s] An error occurred on the $management receiver link.. %O\", id, ehError);\n        });\n        log.mgmt(\n          \"[%s] Created sender '%s' and receiver '%s' links for $management endpoint.\",\n          this._context.namespace.connectionId,\n          this._mgmtReqResLink.sender.name,\n          this._mgmtReqResLink.receiver.name\n        );\n        await this._ensureTokenRenewal();\n      }\n    } catch (err) {\n      err = translate(err);\n      log.error(\n        \"[%s] An error occured while establishing the $management links: %O\",\n        this._context.namespace.connectionId,\n        err\n      );\n      throw err;\n    }\n  }\n\n  private _isMgmtRequestResponseLinkOpen(): boolean {\n    return this._mgmtReqResLink! && this._mgmtReqResLink!.isOpen();\n  }\n\n  /**\n   * Given array of typed values, returns the element in given index\n   */\n  private _safelyGetTypedValueFromArray(data: Typed[], index: number): any {\n    return Array.isArray(data) && data.length > index && data[index]\n      ? data[index].value\n      : undefined;\n  }\n\n  /**\n   * Helper function to retrieve active receiver name, if it exists.\n   * @param clientEntityContext The `ClientEntityContext` associated with given Service Bus entity client\n   * @param sessionId `sessionId` if applicable\n   */\n  private _getAssociatedReceiverName(\n    clientEntityContext: ClientEntityContext,\n    sessionId?: string\n  ): string | undefined {\n    if (sessionId != undefined) {\n      if (clientEntityContext.messageSessions[sessionId]) {\n        return clientEntityContext.messageSessions[sessionId].name;\n      }\n    }\n    if (clientEntityContext.batchingReceiver) {\n      return clientEntityContext.batchingReceiver.name;\n    }\n    if (clientEntityContext.streamingReceiver) {\n      return clientEntityContext.streamingReceiver.name;\n    }\n    return;\n  }\n\n  /**\n   * Closes the AMQP management session to the ServiceBus namespace for this client,\n   * returning a promise that will be resolved when disconnection is completed.\n   * @return Promise<void>\n   */\n  async close(): Promise<void> {\n    try {\n      if (this._isMgmtRequestResponseLinkOpen()) {\n        const mgmtLink = this._mgmtReqResLink;\n        this._mgmtReqResLink = undefined;\n        clearTimeout(this._tokenRenewalTimer as NodeJS.Timer);\n        await mgmtLink!.close();\n        log.mgmt(\"Successfully closed the management session.\");\n      }\n    } catch (err) {\n      log.error(\n        \"[%s] An error occurred while closing the management session: %O.\",\n        this._context.namespace.connectionId,\n        err\n      );\n      throw err;\n    }\n  }\n\n  /**\n   * Fetches the next batch of active messages. The first call to `peek()` fetches the first\n   * active message for this client. Each subsequent call fetches the subsequent message in the\n   * entity.\n   *\n   * Unlike a `received` message, `peeked` message will not have lock token associated with it,\n   * and hence it cannot be `Completed/Abandoned/Deferred/Deadlettered/Renewed`. This method will\n   * also fetch even Deferred messages (but not Deadlettered message).\n   * @param {number} [messageCount] The number of messages to retrieve. Default value `1`.\n   * @returns Promise<ReceivedSBMessage[]>\n   */\n  async peek(messageCount?: number): Promise<ReceivedMessageInfo[]> {\n    throwErrorIfConnectionClosed(this._context.namespace);\n    return this.peekBySequenceNumber(this._lastPeekedSequenceNumber.add(1), messageCount);\n  }\n\n  /**\n   * Fetches the next batch of active messages in the current MessageSession. The first call to\n   * `peek()` fetches the first active message for this client. Each subsequent call fetches the\n   * subsequent message in the entity.\n   *\n   * Unlike a `received` message, `peeked` message will not have lock token associated with it,\n   * and hence it cannot be `Completed/Abandoned/Deferred/Deadlettered/Renewed`.  This method will\n   * also fetch even Deferred messages (but not Deadlettered message).\n   * @param {string} sessionId The sessionId from which messages need to be peeked.\n   * @param {number} [messageCount] The number of messages to retrieve. Default value `1`.\n   * @returns Promise<ReceivedMessageInfo[]>\n   */\n  async peekMessagesBySession(\n    sessionId: string,\n    messageCount?: number\n  ): Promise<ReceivedMessageInfo[]> {\n    throwErrorIfConnectionClosed(this._context.namespace);\n    return this.peekBySequenceNumber(\n      this._lastPeekedSequenceNumber.add(1),\n      messageCount,\n      sessionId\n    );\n  }\n\n  /**\n   * Peeks the desired number of messages from the specified sequence number.\n   * @param {Long} fromSequenceNumber The sequence number from where to read the message.\n   * @param {number} messageCount The number of messages to retrieve. Default value `1`.\n   * @param {string} sessionId The sessionId from which messages need to be peeked.\n   * @returns Promise<ReceivedMessageInfo[]>\n   */\n  async peekBySequenceNumber(\n    fromSequenceNumber: Long,\n    maxMessageCount?: number,\n    sessionId?: string\n  ): Promise<ReceivedMessageInfo[]> {\n    throwErrorIfConnectionClosed(this._context.namespace);\n    const connId = this._context.namespace.connectionId;\n\n    // Checks for fromSequenceNumber\n    throwTypeErrorIfParameterMissing(connId, \"fromSequenceNumber\", fromSequenceNumber);\n    throwTypeErrorIfParameterNotLong(connId, \"fromSequenceNumber\", fromSequenceNumber);\n\n    // Checks for maxMessageCount\n    if (maxMessageCount !== undefined) {\n      throwTypeErrorIfParameterTypeMismatch(connId, \"maxMessageCount\", maxMessageCount, \"number\");\n      if (maxMessageCount <= 0) {\n        return [];\n      }\n    } else {\n      maxMessageCount = 1;\n    }\n\n    const messageList: ReceivedMessageInfo[] = [];\n    try {\n      const messageBody: any = {};\n      messageBody[Constants.fromSequenceNumber] = types.wrap_long(\n        Buffer.from(fromSequenceNumber.toBytesBE())\n      );\n      messageBody[Constants.messageCount] = types.wrap_int(maxMessageCount);\n      if (sessionId != undefined) {\n        messageBody[Constants.sessionIdMapKey] = sessionId;\n      }\n      const request: AmqpMessage = {\n        body: messageBody,\n        message_id: generate_uuid(),\n        reply_to: this.replyTo,\n        application_properties: {\n          operation: Constants.operations.peekMessage\n        }\n      };\n      const associatedLinkName = this._getAssociatedReceiverName(this._context, sessionId);\n      if (associatedLinkName) {\n        request.application_properties![Constants.associatedLinkName] = associatedLinkName;\n      }\n      request.application_properties![Constants.trackingId] = generate_uuid();\n      log.mgmt(\n        \"[%s] Peek by sequence number request body: %O.\",\n        this._context.namespace.connectionId,\n        request.body\n      );\n      log.mgmt(\n        \"[%s] Acquiring lock to get the management req res link.\",\n        this._context.namespace.connectionId\n      );\n      await defaultLock.acquire(this.managementLock, () => {\n        return this._init();\n      });\n\n      const result = await this._mgmtReqResLink!.sendRequest(request);\n      if (result.application_properties!.statusCode !== 204) {\n        const messages = result.body.messages as { message: Buffer }[];\n        for (const msg of messages) {\n          const decodedMessage = RheaMessageUtil.decode(msg.message);\n          const message = fromAmqpMessage(decodedMessage as any);\n          message.body = this._context.namespace.dataTransformer.decode(message.body);\n          messageList.push(message);\n          this._lastPeekedSequenceNumber = message.sequenceNumber!;\n        }\n      }\n    } catch (err) {\n      const error = translate(err);\n      log.error(\n        \"An error occurred while sending the request to peek messages to \" +\n          \"$management endpoint: %O\",\n        error\n      );\n      // statusCode == 404 then do not throw\n      if (error.name !== ConditionErrorNameMapper[\"com.microsoft:message-not-found\"]) {\n        throw error;\n      }\n    }\n    return messageList;\n  }\n\n  /**\n   * Renews the lock on the message. The lock will be renewed based on the setting specified on\n   * the queue.\n   *\n   * When a message is received in `PeekLock` mode, the message is locked on the server for this\n   * receiver instance for a duration as specified during the Queue/Subscription creation\n   * (LockDuration). If processing of the message requires longer than this duration, the\n   * lock needs to be renewed. For each renewal, it resets the time the message is locked by the\n   * LockDuration set on the Entity.\n   *\n   * @param {string} lockToken Lock token of the message\n   * @param {SendRequestOptions} [options] Options that can be set while sending the request.\n   * @returns {Promise<Date>} Promise<Date> New lock token expiry date and time in UTC format.\n   */\n  async renewLock(lockToken: string, options?: SendRequestOptions): Promise<Date> {\n    throwErrorIfConnectionClosed(this._context.namespace);\n    if (!options) options = {};\n    if (options.delayInSeconds == null) options.delayInSeconds = 1;\n    if (options.timeoutInSeconds == null) options.timeoutInSeconds = 5;\n    if (options.times == null) options.times = 5;\n\n    try {\n      const messageBody: any = {};\n\n      messageBody[Constants.lockTokens] = types.wrap_array(\n        [string_to_uuid(lockToken)],\n        0x98,\n        undefined\n      );\n      const request: AmqpMessage = {\n        body: messageBody,\n        reply_to: this.replyTo,\n        application_properties: {\n          operation: Constants.operations.renewLock\n        }\n      };\n      request.application_properties![Constants.trackingId] = generate_uuid();\n      const associatedLinkName = this._getAssociatedReceiverName(this._context);\n      if (associatedLinkName) {\n        request.application_properties![Constants.associatedLinkName] = associatedLinkName;\n      }\n      log.mgmt(\n        \"[%s] Renew message Lock request: %O.\",\n        this._context.namespace.connectionId,\n        request\n      );\n      log.mgmt(\n        \"[%s] Acquiring lock to get the management req res link.\",\n        this._context.namespace.connectionId\n      );\n      await defaultLock.acquire(this.managementLock, () => {\n        return this._init();\n      });\n      const result = await this._mgmtReqResLink!.sendRequest(request, options);\n      const lockedUntilUtc = new Date(result.body.expirations[0]);\n      return lockedUntilUtc;\n    } catch (err) {\n      const error = translate(err);\n      log.error(\n        \"An error occurred while sending the renew lock request to $management \" + \"endpoint: %O\",\n        error\n      );\n      throw error;\n    }\n  }\n\n  /**\n   * Schedules an array of messages to appear on Service Bus at a later time.\n   *\n   * @param scheduledEnqueueTimeUtc - The UTC time at which the messages should be enqueued.\n   * @param messages - An array of messages that needs to be scheduled.\n   * @returns Promise<number> The sequence numbers of messages that were scheduled.\n   */\n  async scheduleMessages(\n    scheduledEnqueueTimeUtc: Date,\n    messages: SendableMessageInfo[]\n  ): Promise<Long[]> {\n    throwErrorIfConnectionClosed(this._context.namespace);\n    const messageBody: any[] = [];\n    for (let i = 0; i < messages.length; i++) {\n      const item = messages[i];\n      if (!item.messageId) item.messageId = generate_uuid();\n      item.scheduledEnqueueTimeUtc = scheduledEnqueueTimeUtc;\n      const amqpMessage = toAmqpMessage(item);\n\n      try {\n        const entry: any = {\n          message: RheaMessageUtil.encode(amqpMessage),\n          \"message-id\": item.messageId\n        };\n        if (item.sessionId) {\n          entry[Constants.sessionIdMapKey] = item.sessionId;\n        }\n        if (item.partitionKey) {\n          entry[\"partition-key\"] = item.partitionKey;\n        }\n        if (item.viaPartitionKey) {\n          entry[\"via-partition-key\"] = item.viaPartitionKey;\n        }\n\n        const wrappedEntry = types.wrap_map(entry);\n        messageBody.push(wrappedEntry);\n      } catch (err) {\n        let error: Error;\n        if (err instanceof TypeError || err.name === \"TypeError\") {\n          // `RheaMessageUtil.encode` can fail if message properties are of invalid type\n          // rhea throws errors with name `TypeError` but not an instance of `TypeError`, so catch them too\n          // Errors in such cases do not have user friendy message or call stack\n          // So use `getMessagePropertyTypeMismatchError` to get a better error message\n          error = translate(getMessagePropertyTypeMismatchError(item) || err);\n        } else {\n          error = translate(err);\n        }\n        log.error(\n          \"An error occurred while encoding the item at position %d in the messages array\" + \": %O\",\n          i,\n          error\n        );\n        throw error;\n      }\n    }\n    try {\n      const request: AmqpMessage = {\n        body: { messages: messageBody },\n        reply_to: this.replyTo,\n        application_properties: {\n          operation: Constants.operations.scheduleMessage\n        }\n      };\n      if (this._context.sender) {\n        request.application_properties![Constants.associatedLinkName] = this._context.sender!.name;\n      }\n      request.application_properties![Constants.trackingId] = generate_uuid();\n      log.mgmt(\n        \"[%s] Schedule messages request body: %O.\",\n        this._context.namespace.connectionId,\n        request.body\n      );\n      log.mgmt(\n        \"[%s] Acquiring lock to get the management req res link.\",\n        this._context.namespace.connectionId\n      );\n      await defaultLock.acquire(this.managementLock, () => {\n        return this._init();\n      });\n      const result = await this._mgmtReqResLink!.sendRequest(request);\n      const sequenceNumbers = result.body[Constants.sequenceNumbers];\n      const sequenceNumbersAsLong = [];\n      for (let i = 0; i < sequenceNumbers.length; i++) {\n        if (typeof sequenceNumbers[i] === \"number\") {\n          sequenceNumbersAsLong.push(Long.fromNumber(sequenceNumbers[i]));\n        } else {\n          sequenceNumbersAsLong.push(Long.fromBytesBE(sequenceNumbers[i]));\n        }\n      }\n      return sequenceNumbersAsLong;\n    } catch (err) {\n      const error = translate(err);\n      log.error(\n        \"An error occurred while sending the request to schedule messages to \" +\n          \"$management endpoint: %O\",\n        error\n      );\n      throw error;\n    }\n  }\n\n  /**\n   * Cancels an array of messages that were scheduled.\n   * @param sequenceNumbers - An Array of sequence numbers of the message to be cancelled.\n   * @returns Promise<void>\n   */\n  async cancelScheduledMessages(sequenceNumbers: Long[]): Promise<void> {\n    throwErrorIfConnectionClosed(this._context.namespace);\n    const messageBody: any = {};\n    messageBody[Constants.sequenceNumbers] = [];\n    for (let i = 0; i < sequenceNumbers.length; i++) {\n      const sequenceNumber = sequenceNumbers[i];\n      try {\n        messageBody[Constants.sequenceNumbers].push(Buffer.from(sequenceNumber.toBytesBE()));\n      } catch (err) {\n        const error = translate(err);\n        log.error(\n          \"An error occurred while encoding the item at position %d in the \" +\n            \"sequenceNumbers array: %O\",\n          i,\n          error\n        );\n        throw error;\n      }\n    }\n\n    try {\n      messageBody[Constants.sequenceNumbers] = types.wrap_array(\n        messageBody[Constants.sequenceNumbers],\n        0x81,\n        undefined\n      );\n      const request: AmqpMessage = {\n        body: messageBody,\n        message_id: generate_uuid(),\n        reply_to: this.replyTo,\n        application_properties: {\n          operation: Constants.operations.cancelScheduledMessage\n        }\n      };\n\n      if (this._context.sender) {\n        request.application_properties![Constants.associatedLinkName] = this._context.sender!.name;\n      }\n      request.application_properties![Constants.trackingId] = generate_uuid();\n      log.mgmt(\n        \"[%s] Cancel scheduled messages request body: %O.\",\n        this._context.namespace.connectionId,\n        request.body\n      );\n      log.mgmt(\n        \"[%s] Acquiring lock to get the management req res link.\",\n        this._context.namespace.connectionId\n      );\n      await defaultLock.acquire(this.managementLock, () => {\n        return this._init();\n      });\n      await this._mgmtReqResLink!.sendRequest(request);\n    } catch (err) {\n      const error = translate(err);\n      log.error(\n        \"An error occurred while sending the request to cancel the scheduled message to \" +\n          \"$management endpoint: %O\",\n        error\n      );\n      throw error;\n    }\n  }\n\n  /**\n   * Receives a list of deferred messages identified by `sequenceNumbers`.\n   * @param sequenceNumbers A list containing the sequence numbers to receive.\n   * @param receiveMode The mode in which the receiver was created.\n   * @returns Promise<ServiceBusMessage[]>\n   * - Returns a list of messages identified by the given sequenceNumbers.\n   * - Returns an empty list if no messages are found.\n   * - Throws an error if the messages have not been deferred.\n   */\n  async receiveDeferredMessages(\n    sequenceNumbers: Long[],\n    receiveMode: ReceiveMode,\n    sessionId?: string\n  ): Promise<ServiceBusMessage[]> {\n    throwErrorIfConnectionClosed(this._context.namespace);\n\n    const messageList: ServiceBusMessage[] = [];\n    const messageBody: any = {};\n    messageBody[Constants.sequenceNumbers] = [];\n    for (let i = 0; i < sequenceNumbers.length; i++) {\n      const sequenceNumber = sequenceNumbers[i];\n      try {\n        messageBody[Constants.sequenceNumbers].push(Buffer.from(sequenceNumber.toBytesBE()));\n      } catch (err) {\n        const error = translate(err);\n        log.error(\n          \"An error occurred while encoding the item at position %d in the \" +\n            \"sequenceNumbers array: %O\",\n          i,\n          error\n        );\n        throw error;\n      }\n    }\n\n    try {\n      messageBody[Constants.sequenceNumbers] = types.wrap_array(\n        messageBody[Constants.sequenceNumbers],\n        0x81,\n        undefined\n      );\n      const receiverSettleMode: number = receiveMode === ReceiveMode.receiveAndDelete ? 0 : 1;\n      messageBody[Constants.receiverSettleMode] = types.wrap_uint(receiverSettleMode);\n      if (sessionId != null) {\n        messageBody[Constants.sessionIdMapKey] = sessionId;\n      }\n      const request: AmqpMessage = {\n        body: messageBody,\n        message_id: generate_uuid(),\n        reply_to: this.replyTo,\n        application_properties: {\n          operation: Constants.operations.receiveBySequenceNumber\n        }\n      };\n      const associatedLinkName = this._getAssociatedReceiverName(this._context, sessionId);\n      if (associatedLinkName) {\n        request.application_properties![Constants.associatedLinkName] = associatedLinkName;\n      }\n      request.application_properties![Constants.trackingId] = generate_uuid();\n      log.mgmt(\n        \"[%s] Receive deferred messages request body: %O.\",\n        this._context.namespace.connectionId,\n        request.body\n      );\n      log.mgmt(\n        \"[%s] Acquiring lock to get the management req res link.\",\n        this._context.namespace.connectionId\n      );\n      await defaultLock.acquire(this.managementLock, () => {\n        return this._init();\n      });\n\n      const result = await this._mgmtReqResLink!.sendRequest(request);\n      const messages = result.body.messages as {\n        message: Buffer;\n        \"lock-token\": Buffer;\n      }[];\n      for (const msg of messages) {\n        const decodedMessage = RheaMessageUtil.decode(msg.message);\n        const message = new ServiceBusMessage(\n          this._context,\n          decodedMessage as any,\n          { tag: msg[\"lock-token\"] } as any,\n          false\n        );\n        if (message.lockToken && message.lockedUntilUtc) {\n          this._context.requestResponseLockedMessages.set(\n            message.lockToken,\n            message.lockedUntilUtc\n          );\n        }\n        messageList.push(message);\n      }\n      return messageList;\n    } catch (err) {\n      const error = translate(err);\n      log.error(\n        \"An error occurred while sending the request to receive deferred messages to \" +\n          \"$management endpoint: %O\",\n        error\n      );\n      throw error;\n    }\n  }\n\n  /**\n   * Updates the disposition status of deferred messages.\n   *\n   * @param lockTokens Message lock tokens to update disposition status.\n   * @param dispositionStatus The disposition status to be set\n   * @param options Optional parameters that can be provided while updating the disposition status.\n   *\n   * @returns Promise<void>\n   */\n  async updateDispositionStatus(\n    lockToken: string,\n    dispositionStatus: DispositionStatus,\n    options?: DispositionStatusOptions\n  ): Promise<void> {\n    throwErrorIfConnectionClosed(this._context.namespace);\n\n    if (!options) options = {};\n    try {\n      const messageBody: any = {};\n      const lockTokenBuffer: Buffer[] = [];\n      lockTokenBuffer.push(string_to_uuid(lockToken));\n      messageBody[Constants.lockTokens] = types.wrap_array(lockTokenBuffer, 0x98, undefined);\n      messageBody[Constants.dispositionStatus] = dispositionStatus;\n      if (options.deadLetterDescription != null) {\n        messageBody[Constants.deadLetterDescription] = options.deadLetterDescription;\n      }\n      if (options.deadLetterReason != null) {\n        messageBody[Constants.deadLetterReason] = options.deadLetterReason;\n      }\n      if (options.propertiesToModify != null) {\n        messageBody[Constants.propertiesToModify] = options.propertiesToModify;\n      }\n      if (options.sessionId != null) {\n        messageBody[Constants.sessionIdMapKey] = options.sessionId;\n      }\n      const request: AmqpMessage = {\n        body: messageBody,\n        message_id: generate_uuid(),\n        reply_to: this.replyTo,\n        application_properties: {\n          operation: Constants.operations.updateDisposition\n        }\n      };\n      const associatedLinkName = this._getAssociatedReceiverName(this._context, options.sessionId);\n      if (associatedLinkName) {\n        request.application_properties![Constants.associatedLinkName] = associatedLinkName;\n      }\n      request.application_properties![Constants.trackingId] = generate_uuid();\n      log.mgmt(\n        \"[%s] Update disposition status request body: %O.\",\n        this._context.namespace.connectionId,\n        request.body\n      );\n      log.mgmt(\n        \"[%s] Acquiring lock to get the management req res link.\",\n        this._context.namespace.connectionId\n      );\n      await defaultLock.acquire(this.managementLock, () => {\n        return this._init();\n      });\n      await this._mgmtReqResLink!.sendRequest(request);\n    } catch (err) {\n      const error = translate(err);\n      log.error(\n        \"An error occurred while sending the request to update disposition status to \" +\n          \"$management endpoint: %O\",\n        error\n      );\n      throw error;\n    }\n  }\n\n  /**\n   * Renews the lock for the specified session.\n   * @param sessionId Id of the session for which the lock needs to be renewed\n   * @param options Options that can be set while sending the request.\n   * @returns Promise<Date> New lock token expiry date and time in UTC format.\n   */\n  async renewSessionLock(sessionId: string, options?: SendRequestOptions): Promise<Date> {\n    throwErrorIfConnectionClosed(this._context.namespace);\n    if (!options) options = {};\n    if (options.delayInSeconds == null) options.delayInSeconds = 1;\n    if (options.timeoutInSeconds == null) options.timeoutInSeconds = 5;\n    if (options.times == null) options.times = 5;\n    try {\n      const messageBody: any = {};\n      messageBody[Constants.sessionIdMapKey] = sessionId;\n      const request: AmqpMessage = {\n        body: messageBody,\n        reply_to: this.replyTo,\n        application_properties: {\n          operation: Constants.operations.renewSessionLock\n        }\n      };\n      request.application_properties![Constants.trackingId] = generate_uuid();\n      const associatedLinkName = this._getAssociatedReceiverName(this._context, sessionId);\n      if (associatedLinkName) {\n        request.application_properties![Constants.associatedLinkName] = associatedLinkName;\n      }\n      log.mgmt(\n        \"[%s] Renew Session Lock request body: %O.\",\n        this._context.namespace.connectionId,\n        request.body\n      );\n      log.mgmt(\n        \"[%s] Acquiring lock to get the management req res link.\",\n        this._context.namespace.connectionId\n      );\n      await defaultLock.acquire(this.managementLock, () => {\n        return this._init();\n      });\n      const result = await this._mgmtReqResLink!.sendRequest(request, options);\n      const lockedUntilUtc = new Date(result.body.expiration);\n      log.mgmt(\n        \"[%s] Lock for session '%s' will expire at %s.\",\n        this._context.namespace.connectionId,\n        sessionId,\n        lockedUntilUtc.toString()\n      );\n      return lockedUntilUtc;\n    } catch (err) {\n      const error = translate(err);\n      log.error(\n        \"An error occurred while sending the renew lock request to $management \" + \"endpoint: %O\",\n        error\n      );\n      throw error;\n    }\n  }\n\n  /**\n   * Sets the state of the specified session.\n   * @param sessionId The session for which the state needs to be set\n   * @param state The state that needs to be set.\n   * @returns Promise<void>\n   */\n  async setSessionState(sessionId: string, state: any): Promise<void> {\n    throwErrorIfConnectionClosed(this._context.namespace);\n\n    try {\n      const messageBody: any = {};\n      messageBody[Constants.sessionIdMapKey] = sessionId;\n      messageBody[\"session-state\"] = toBuffer(state);\n      const request: AmqpMessage = {\n        body: messageBody,\n        reply_to: this.replyTo,\n        application_properties: {\n          operation: Constants.operations.setSessionState\n        }\n      };\n      const associatedLinkName = this._getAssociatedReceiverName(this._context, sessionId);\n      if (associatedLinkName) {\n        request.application_properties![Constants.associatedLinkName] = associatedLinkName;\n      }\n      request.application_properties![Constants.trackingId] = generate_uuid();\n      log.mgmt(\n        \"[%s] Set Session state request body: %O.\",\n        this._context.namespace.connectionId,\n        request.body\n      );\n      log.mgmt(\n        \"[%s] Acquiring lock to get the management req res link.\",\n        this._context.namespace.connectionId\n      );\n      await defaultLock.acquire(this.managementLock, () => {\n        return this._init();\n      });\n      await this._mgmtReqResLink!.sendRequest(request);\n    } catch (err) {\n      const error = translate(err);\n      log.error(\n        \"An error occurred while sending the renew lock request to $management \" + \"endpoint: %O\",\n        error\n      );\n      throw error;\n    }\n  }\n\n  /**\n   * Gets the state of the specified session.\n   * @param sessionId The session for which the state needs to be retrieved.\n   * @returns Promise<any> The state of that session\n   */\n  async getSessionState(sessionId: string): Promise<any> {\n    throwErrorIfConnectionClosed(this._context.namespace);\n    try {\n      const messageBody: any = {};\n      messageBody[Constants.sessionIdMapKey] = sessionId;\n      const request: AmqpMessage = {\n        body: messageBody,\n        reply_to: this.replyTo,\n        application_properties: {\n          operation: Constants.operations.getSessionState\n        }\n      };\n      const associatedLinkName = this._getAssociatedReceiverName(this._context, sessionId);\n      if (associatedLinkName) {\n        request.application_properties![Constants.associatedLinkName] = associatedLinkName;\n      }\n      request.application_properties![Constants.trackingId] = generate_uuid();\n      log.mgmt(\n        \"[%s] Get session state request body: %O.\",\n        this._context.namespace.connectionId,\n        request.body\n      );\n      log.mgmt(\n        \"[%s] Acquiring lock to get the management req res link.\",\n        this._context.namespace.connectionId\n      );\n      await defaultLock.acquire(this.managementLock, () => {\n        return this._init();\n      });\n      const result = await this._mgmtReqResLink!.sendRequest(request);\n      return result.body[\"session-state\"]\n        ? this._context.namespace.dataTransformer.decode(result.body[\"session-state\"])\n        : result.body[\"session-state\"];\n    } catch (err) {\n      const error = translate(err);\n      log.error(\n        \"An error occurred while sending the renew lock request to $management \" + \"endpoint: %O\",\n        error\n      );\n      throw error;\n    }\n  }\n\n  /**\n   * Lists the sessions on the ServiceBus Queue/Topic.\n   * @param lastUpdateTime Filter to include only sessions updated after a given time.\n   * @param skip The number of sessions to skip\n   * @param top Maximum numer of sessions.\n   * @returns Promise<string[]> A list of session ids.\n   */\n  async listMessageSessions(skip: number, top: number, lastUpdatedTime?: Date): Promise<string[]> {\n    throwErrorIfConnectionClosed(this._context.namespace);\n    const defaultLastUpdatedTimeForListingSessions: number = 259200000; // 3 * 24 * 3600 * 1000\n    if (typeof skip !== \"number\") {\n      throw new Error(\"'skip' is a required parameter and must be of type 'number'.\");\n    }\n    if (typeof top !== \"number\") {\n      throw new Error(\"'top' is a required parameter and must be of type 'number'.\");\n    }\n    if (lastUpdatedTime && !(lastUpdatedTime instanceof Date)) {\n      throw new Error(\"'lastUpdatedTime' must be of type 'Date'.\");\n    }\n    if (!lastUpdatedTime) {\n      lastUpdatedTime = new Date(Date.now() - defaultLastUpdatedTimeForListingSessions);\n    }\n    try {\n      const messageBody: any = {};\n      messageBody[\"last-updated-time\"] = lastUpdatedTime;\n      messageBody[\"skip\"] = types.wrap_int(skip);\n      messageBody[\"top\"] = types.wrap_int(top);\n      const request: AmqpMessage = {\n        body: messageBody,\n        reply_to: this.replyTo,\n        application_properties: {\n          operation: Constants.operations.enumerateSessions\n        }\n      };\n      request.application_properties![Constants.trackingId] = generate_uuid();\n      log.mgmt(\n        \"[%s] List sessions request body: %O.\",\n        this._context.namespace.connectionId,\n        request.body\n      );\n      log.mgmt(\n        \"[%s] Acquiring lock to get the management req res link.\",\n        this._context.namespace.connectionId\n      );\n      await defaultLock.acquire(this.managementLock, () => {\n        return this._init();\n      });\n      const response = await this._mgmtReqResLink!.sendRequest(request);\n\n      return (response && response.body && response.body[\"sessions-ids\"]) || [];\n    } catch (err) {\n      const error = translate(err);\n      log.error(\n        \"An error occurred while sending the renew lock request to $management \" + \"endpoint: %O\",\n        error\n      );\n      throw error;\n    }\n  }\n\n  /**\n   * Get all the rules on the Subscription.\n   * @returns Promise<RuleDescription[]> A list of rules.\n   */\n  async getRules(): Promise<RuleDescription[]> {\n    throwErrorIfConnectionClosed(this._context.namespace);\n    try {\n      const request: AmqpMessage = {\n        body: {\n          top: types.wrap_int(max32BitNumber),\n          skip: types.wrap_int(0)\n        },\n        reply_to: this.replyTo,\n        application_properties: {\n          operation: Constants.operations.enumerateRules\n        }\n      };\n      request.application_properties![Constants.trackingId] = generate_uuid();\n\n      log.mgmt(\n        \"[%s] Get rules request body: %O.\",\n        this._context.namespace.connectionId,\n        request.body\n      );\n      log.mgmt(\n        \"[%s] Acquiring lock to get the management req res link.\",\n        this._context.namespace.connectionId\n      );\n      await defaultLock.acquire(this.managementLock, () => {\n        return this._init();\n      });\n\n      const response = await this._mgmtReqResLink!.sendRequest(request);\n      if (\n        response.application_properties!.statusCode === 204 ||\n        !response.body ||\n        !Array.isArray(response.body.rules)\n      ) {\n        return [];\n      }\n\n      // Reference: https://docs.microsoft.com/en-us/azure/service-bus-messaging/service-bus-amqp-request-response#response-11\n      const result: { \"rule-description\": Typed }[] = response.body.rules || [];\n      const rules: RuleDescription[] = [];\n      result.forEach((x) => {\n        const ruleDescriptor = x[\"rule-description\"];\n\n        // We use the first three elements of the `ruleDescriptor.value` to get filter, action, name\n        if (\n          !ruleDescriptor ||\n          !ruleDescriptor.descriptor ||\n          ruleDescriptor.descriptor.value !== Constants.descriptorCodes.ruleDescriptionList ||\n          !Array.isArray(ruleDescriptor.value) ||\n          ruleDescriptor.value.length < 3\n        ) {\n          return;\n        }\n\n        const filtersRawData: Typed = ruleDescriptor.value[0];\n        const actionsRawData: Typed = ruleDescriptor.value[1];\n        const rule: RuleDescription = {\n          name: ruleDescriptor.value[2].value\n        };\n\n        switch (filtersRawData.descriptor.value) {\n          case Constants.descriptorCodes.trueFilterList:\n            rule.filter = \"1=1\";\n            break;\n          case Constants.descriptorCodes.falseFilterList:\n            rule.filter = \"1=0\";\n            break;\n          case Constants.descriptorCodes.sqlFilterList:\n            rule.filter = this._safelyGetTypedValueFromArray(filtersRawData.value, 0);\n            break;\n          case Constants.descriptorCodes.correlationFilterList:\n            rule.filter = {\n              correlationId: this._safelyGetTypedValueFromArray(filtersRawData.value, 0),\n              messageId: this._safelyGetTypedValueFromArray(filtersRawData.value, 1),\n              to: this._safelyGetTypedValueFromArray(filtersRawData.value, 2),\n              replyTo: this._safelyGetTypedValueFromArray(filtersRawData.value, 3),\n              label: this._safelyGetTypedValueFromArray(filtersRawData.value, 4),\n              sessionId: this._safelyGetTypedValueFromArray(filtersRawData.value, 5),\n              replyToSessionId: this._safelyGetTypedValueFromArray(filtersRawData.value, 6),\n              contentType: this._safelyGetTypedValueFromArray(filtersRawData.value, 7),\n              userProperties: this._safelyGetTypedValueFromArray(filtersRawData.value, 8)\n            };\n            break;\n          default:\n            log.mgmt(\n              `Found unexpected descriptor code for the filter: ${filtersRawData.descriptor.value}`\n            );\n            break;\n        }\n\n        if (\n          actionsRawData.descriptor.value === Constants.descriptorCodes.sqlRuleActionList &&\n          Array.isArray(actionsRawData.value) &&\n          actionsRawData.value.length\n        ) {\n          rule.action = this._safelyGetTypedValueFromArray(actionsRawData.value, 0);\n        }\n\n        rules.push(rule);\n      });\n\n      return rules;\n    } catch (err) {\n      const error = translate(err);\n      log.error(\n        \"An error occurred while sending the get rules request to $management \" + \"endpoint: %O\",\n        error\n      );\n      throw error;\n    }\n  }\n\n  /**\n   * Removes the rule on the Subscription identified by the given rule name.\n   * @param ruleName\n   */\n  async removeRule(ruleName: string): Promise<void> {\n    throwErrorIfConnectionClosed(this._context.namespace);\n    throwTypeErrorIfParameterMissing(this._context.namespace.connectionId, \"ruleName\", ruleName);\n    ruleName = String(ruleName);\n    throwTypeErrorIfParameterIsEmptyString(\n      this._context.namespace.connectionId,\n      \"ruleName\",\n      ruleName\n    );\n\n    try {\n      const request: AmqpMessage = {\n        body: {\n          \"rule-name\": types.wrap_string(ruleName)\n        },\n        reply_to: this.replyTo,\n        application_properties: {\n          operation: Constants.operations.removeRule\n        }\n      };\n      request.application_properties![Constants.trackingId] = generate_uuid();\n\n      log.mgmt(\n        \"[%s] Remove Rule request body: %O.\",\n        this._context.namespace.connectionId,\n        request.body\n      );\n      log.mgmt(\n        \"[%s] Acquiring lock to get the management req res link.\",\n        this._context.namespace.connectionId\n      );\n      await defaultLock.acquire(this.managementLock, () => {\n        return this._init();\n      });\n\n      await this._mgmtReqResLink!.sendRequest(request);\n    } catch (err) {\n      const error = translate(err);\n      log.error(\n        \"An error occurred while sending the remove rule request to $management \" + \"endpoint: %O\",\n        error\n      );\n      throw error;\n    }\n  }\n\n  /**\n   * Adds a rule on the subscription as defined by the given rule name, filter and action\n   * @param ruleName Name of the rule\n   * @param filter A Boolean, SQL expression or a Correlation filter\n   * @param sqlRuleActionExpression Action to perform if the message satisfies the filtering expression\n   */\n  async addRule(\n    ruleName: string,\n    filter: boolean | string | CorrelationFilter,\n    sqlRuleActionExpression?: string\n  ): Promise<void> {\n    throwErrorIfConnectionClosed(this._context.namespace);\n\n    throwTypeErrorIfParameterMissing(this._context.namespace.connectionId, \"ruleName\", ruleName);\n    ruleName = String(ruleName);\n    throwTypeErrorIfParameterIsEmptyString(\n      this._context.namespace.connectionId,\n      \"ruleName\",\n      ruleName\n    );\n\n    throwTypeErrorIfParameterMissing(this._context.namespace.connectionId, \"filter\", filter);\n    if (\n      typeof filter !== \"boolean\" &&\n      typeof filter !== \"string\" &&\n      !correlationProperties.some((validProperty) => filter.hasOwnProperty(validProperty))\n    ) {\n      throw new TypeError(\n        `The parameter \"filter\" should be either a boolean, string or implement the CorrelationFilter interface.`\n      );\n    }\n\n    try {\n      const ruleDescription: any = {};\n      switch (typeof filter) {\n        case \"boolean\":\n          ruleDescription[\"sql-filter\"] = {\n            expression: filter ? \"1=1\" : \"1=0\"\n          };\n          break;\n        case \"string\":\n          ruleDescription[\"sql-filter\"] = {\n            expression: filter\n          };\n          break;\n        default:\n          ruleDescription[\"correlation-filter\"] = {\n            \"correlation-id\": filter.correlationId,\n            \"message-id\": filter.messageId,\n            to: filter.to,\n            \"reply-to\": filter.replyTo,\n            label: filter.label,\n            \"session-id\": filter.sessionId,\n            \"reply-to-session-id\": filter.replyToSessionId,\n            \"content-type\": filter.contentType,\n            properties: filter.userProperties\n          };\n          break;\n      }\n\n      if (sqlRuleActionExpression !== undefined) {\n        ruleDescription[\"sql-rule-action\"] = {\n          expression: String(sqlRuleActionExpression)\n        };\n      }\n      const request: AmqpMessage = {\n        body: {\n          \"rule-name\": types.wrap_string(ruleName),\n          \"rule-description\": types.wrap_map(ruleDescription)\n        },\n        reply_to: this.replyTo,\n        application_properties: {\n          operation: Constants.operations.addRule\n        }\n      };\n      request.application_properties![Constants.trackingId] = generate_uuid();\n\n      log.mgmt(\n        \"[%s] Add Rule request body: %O.\",\n        this._context.namespace.connectionId,\n        request.body\n      );\n      log.mgmt(\n        \"[%s] Acquiring lock to get the management req res link.\",\n        this._context.namespace.connectionId\n      );\n      await defaultLock.acquire(this.managementLock, () => {\n        return this._init();\n      });\n\n      await this._mgmtReqResLink!.sendRequest(request);\n    } catch (err) {\n      const error = translate(err);\n      log.error(\n        \"An error occurred while sending the Add rule request to $management \" + \"endpoint: %O\",\n        error\n      );\n      throw error;\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { generate_uuid } from \"rhea-promise\";\nimport { delay, AsyncLock } from \"@azure/amqp-common\";\nimport * as log from \"../log\";\n\n/**\n * Describes a map that ensures, deleting a an entry from the map is concurrency safe.\n * @internal\n * @class ConcurrentExpiringMap<TKey>\n */\nexport class ConcurrentExpiringMap<TKey> {\n  private readonly _map: Map<TKey, Date> = new Map();\n  private _cleanupScheduled: boolean = false;\n  private _delayBetweenCleanupInSeconds: number;\n  private _lockId: string = generate_uuid();\n  private _lockStore: AsyncLock = new AsyncLock({ maxPending: 1000000 });\n\n  constructor(options?: { delayBetweenCleanupInSeconds?: number }) {\n    if (!options) options = {};\n    this._delayBetweenCleanupInSeconds = options.delayBetweenCleanupInSeconds || 30;\n  }\n\n  private async _scheduleCleanup(): Promise<void> {\n    if (this._cleanupScheduled || this._map.size === 0) {\n      return;\n    }\n\n    await this._lockStore.acquire(this._lockId, () => {\n      this._cleanupScheduled = true;\n      this._collectExpiredEntries().catch((err) => {\n        log.error(\"An error occurred while collecting expired entries: %O\", err);\n      });\n    });\n  }\n\n  private async _collectExpiredEntries(): Promise<void> {\n    if (this._map.size === 0) {\n      return;\n    }\n\n    await delay(this._delayBetweenCleanupInSeconds);\n    this._cleanupScheduled = false;\n    for (const key of this._map.keys()) {\n      if (Date.now() > this._map.get(key)!.getTime()) {\n        this._map.delete(key);\n        log.map(\"Deleted the key '%s' from the map.\", key);\n      }\n    }\n    this._scheduleCleanup().catch((err) => {\n      log.error(\n        \"An error occurred while scheduling the cleanup, after \" + \"collecting expired entries: %O\",\n        err\n      );\n    });\n  }\n\n  /**\n   * Sets the key and it's expiration time as the value in the map.\n   * @param key The key to be set.\n   * @param expiration Expiration time for the key.\n   * @returns void\n   */\n  set(key: TKey, expiration: Date): void {\n    this._map.set(key, expiration);\n    this._scheduleCleanup().catch((err) => {\n      log.error(\n        \"An error occurred while scheduling the cleanup, after \" + \"setting the key: '%s': %O\",\n        key,\n        err\n      );\n    });\n  }\n\n  /**\n   * Determines whether the key is present in the map.\n   * @param key The key whose presence in the map needs to be checked.\n   * @returns boolean\n   */\n  has(key: TKey): boolean {\n    const value = this._map.get(key) as Date;\n    const result: boolean = value && value.getTime() > Date.now();\n    log.map(\"Key '%s' is present in the map? -> %s\", key, result);\n    return result;\n  }\n\n  /**\n   * Removes an entry from the the map if present\n   * @param key The key which needs to be removed from the map.\n   * @returns True if the key was found and removed from the map, False otherwise\n   */\n  delete(key: TKey): boolean {\n    log.map(\"Deleting key '%s' from the map\", key);\n    return this._map.delete(key);\n  }\n\n  /**\n   * Clears all the entries from the underlying map.\n   */\n  clear(): void {\n    log.map(\"Clearing the map of all the entries\");\n    this._map.clear();\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/**\n * @internal\n * A simple Semaphore\n * @class Semaphore\n */\nexport class Semaphore {\n  /**\n   * The number of concurrent calls that can be made.\n   */\n  limit: number;\n  private _queue: ((value?: void | PromiseLike<void> | undefined) => void)[] = [];\n  private _used: number = 0;\n  constructor(limit: number) {\n    if (typeof limit !== \"number\") {\n      throw new TypeError(`Expected limit to be a number, got ${typeof limit}`);\n    }\n\n    if (limit < 1) {\n      throw new Error(\"limit cannot be less than 1\");\n    }\n    this.limit = limit;\n  }\n\n  /**\n   * Acquires a lock from the semaphore, returns a Promise that resolves when the caller holds\n   * a lock.\n   */\n  acquire(): Promise<void> {\n    if (this._used < this.limit) {\n      this._used += 1;\n      return Promise.resolve();\n    }\n\n    return new Promise((resolve) => {\n      this._queue.push(resolve);\n    });\n  }\n\n  /**\n   * Releases a lock back to the semaphore.\n   */\n  release(): void {\n    if (this._queue.length) {\n      const item = this._queue.shift();\n      if (item) {\n        item();\n      }\n    } else {\n      this._used -= 1;\n    }\n  }\n\n  /**\n   * Aquires a lock from the semaphore and then execute the fn. If the fn returns a Promise,\n   * wait for that promise to settle and then release the lock back to the semaphore.\n   * @param fn The function that needs to be executed in the ciritical region.\n   * @returns A Promise that will settle with the return value of fn.\n   */\n  use<T>(fn: () => T | PromiseLike<T>): Promise<T> {\n    return this.acquire()\n      .then(fn)\n      .then((val) => {\n        this.release();\n        return val;\n      })\n      .catch((err) => {\n        this.release();\n        throw err;\n      });\n  }\n\n  /**\n   * Provides the number of locks currently held.\n   */\n  currentLockCount(): number {\n    return this._used;\n  }\n\n  /**\n   * Provides the number of tasks waiting to acquire a lock.\n   */\n  awaitedTaskCount(): number {\n    return this._queue.length;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { SessionManagerOptions, MessageSession, SessionCallee } from \"./messageSession\";\nimport { OnError, OnMessage } from \"../core/messageReceiver\";\nimport { ClientEntityContext } from \"../clientEntityContext\";\nimport { getProcessorCount } from \"../util/utils\";\nimport * as log from \"../log\";\nimport { Semaphore } from \"../util/semaphore\";\nimport { delay, ConditionErrorNameMapper, Constants } from \"@azure/amqp-common\";\n\n/**\n * @internal\n * Enum to denote the entity type calling the session manager\n */\nexport enum SessionEntityType {\n  queue = \"Queue\",\n  subscription = \"Subscription\"\n}\n\n/**\n * @internal\n */\nexport class SessionManager {\n  /**\n   * @property {number} maxConcurrentSessions The maximum number of sessions that the user wants to\n   * handle concurrently.\n   * - **Default**: `2000`.\n   */\n  set maxConcurrentSessions(value: number) {\n    if (value <= 0) {\n      throw new Error(\"'maxConcurrentSessions must be greater than 0.\");\n    }\n    this._maxConcurrentSessions = value;\n    this.maxConcurrentAcceptSessionRequests = value;\n  }\n  get maxConcurrenSessions(): number {\n    return this._maxConcurrentSessions;\n  }\n  /**\n   * @property {number} _maxConcurrentAcceptSessionRequests The maximum number of acceptSession\n   * requests that can be made concurrently at any given time.\n   */\n  set maxConcurrentAcceptSessionRequests(value: number) {\n    this._maxConcurrentAcceptSessionRequests = Math.min(value, getProcessorCount());\n  }\n  get maxConcurrentAcceptSessionRequests(): number {\n    return this._maxConcurrentAcceptSessionRequests;\n  }\n\n  private _isManagingSessions: boolean = false;\n  private _maxConcurrentSessions!: number;\n  private _maxConcurrentAcceptSessionRequests!: number;\n  private _isCancelRequested: boolean = false;\n  private _maxConcurrentSessionsSemaphore!: Semaphore;\n  private _maxPendingAcceptSessionsSemaphore!: Semaphore;\n\n  /**\n   * @property {ClientEntityContext} _context The client entity context.\n   * @readonly\n   */\n  private readonly _context: ClientEntityContext;\n\n  constructor(context: ClientEntityContext) {\n    this._context = context;\n    this.maxConcurrentSessions = 2000;\n  }\n\n  /**\n   * Accept a new session and start receiving messages.\n   * @param onMessage Handler for receiving messages from a session enabled entity.\n   * @param onError Handler for receiving errors.\n   * @param options Optional parameters for handling sessions.\n   */\n  private async _acceptSessionAndReceiveMessages(\n    onMessage: OnMessage,\n    onError: OnError,\n    options?: SessionManagerOptions\n  ): Promise<void> {\n    if (!options) {\n      options = {};\n    }\n    const connectionId = this._context.namespace.connectionId;\n    const noActiveSessionBackOffInSeconds = 10;\n    while (!this._isCancelRequested) {\n      try {\n        await this._maxConcurrentSessionsSemaphore.acquire();\n        log.sessionManager(\n          \"[%s] Acquired the semaphore for max concurrent sessions: %d, %d.\",\n          connectionId,\n          this._maxConcurrentSessionsSemaphore.currentLockCount(),\n          this._maxConcurrentSessionsSemaphore.awaitedTaskCount()\n        );\n\n        await this._maxPendingAcceptSessionsSemaphore.acquire();\n        log.sessionManager(\n          \"[%s] Acquired the semaphore for max pending accept sessions: %d, %d.\",\n          connectionId,\n          this._maxPendingAcceptSessionsSemaphore.currentLockCount(),\n          this._maxPendingAcceptSessionsSemaphore.awaitedTaskCount()\n        );\n\n        const closeMessageSession = async (messageSession: MessageSession): Promise<void> => {\n          try {\n            await this._maxConcurrentSessionsSemaphore.release();\n            log.sessionManager(\n              \"[%s] Releasing the semaphore for max concurrent sessions: %d, %d.\",\n              connectionId,\n              this._maxConcurrentSessionsSemaphore.currentLockCount(),\n              this._maxConcurrentSessionsSemaphore.awaitedTaskCount()\n            );\n            if (messageSession.isOpen()) {\n              await messageSession.close();\n            }\n          } catch (err) {\n            log.error(\n              \"[%s] An error occurred while releasing the max concurrent session semaphore \" +\n                \"or while closing MessageSession with id '%s': %O.\",\n              connectionId,\n              messageSession.sessionId,\n              err\n            );\n          }\n        };\n        // Create the MessageSession.\n        const messageSession = await MessageSession.create(this._context, {\n          sessionId: undefined,\n          callee: SessionCallee.sessionManager,\n          ...options\n        });\n\n        messageSession.newMessageWaitTimeoutInSeconds = options.newMessageWaitTimeoutInSeconds;\n\n        if (this._isCancelRequested) {\n          log.sessionManager(\n            \"[%s] Since cancellation was requested, we will close the messageSession with id '%s'.\",\n            connectionId,\n            messageSession.sessionId\n          );\n          await closeMessageSession(messageSession);\n        }\n        const sessionId = messageSession.sessionId;\n        this._context.messageSessions[sessionId as string] = messageSession;\n\n        log.sessionManager(\"[%s] Created MessageSession with id '%s'.\", connectionId, sessionId);\n        const onSessionError: OnError = async (error) => {\n          log.sessionManager(\n            \"An error ocurred in MessageSession with id '%s': %O. Hence closing it.\",\n            connectionId,\n            sessionId,\n            error\n          );\n          await closeMessageSession(messageSession);\n          if (error.name !== ConditionErrorNameMapper[\"com.microsoft:message-wait-timeout\"]) {\n            // notify the user about the error.\n            onError(error);\n          }\n        };\n        messageSession.receive(onMessage, onSessionError, options);\n      } catch (err) {\n        log.error(\"[%s] An error occurred while accepting a MessageSession: %O\", connectionId, err);\n        this._maxConcurrentSessionsSemaphore.release();\n        log.sessionManager(\n          \"[%s] Releasing the semaphore for max concurrent sessions \" +\n            \"because an error ocurred: %d, %d.\",\n          connectionId,\n          this._maxConcurrentSessionsSemaphore.currentLockCount(),\n          this._maxConcurrentSessionsSemaphore.awaitedTaskCount()\n        );\n        // When we ask servicebus to give us a random session and if there are no active sessions,\n        // ServiceBus initially sends the attach frame which causes rhea to emit \"receiver_open\"\n        // event and thus rhea-promise resolves the promise. Moments later ServiceBus sends a\n        // detach frame with an error that the link creation timed out. Therefore inside\n        // MessageSession._init() after the promise to create a session enabled receiver link\n        // resolves we check for sessionId. If it is undefined then we reject the Promise with an\n        // error \"session-cannot-be-locked\". The \"operation-timeout\" error happens when\n        // rhea-promise does not receive a response from ServiceBus in a predefined time frame and\n        // the Promise is rejected. The \"microsoft.timeout\" error occurs when timeout happens on\n        // the server side and ServiceBus sends a detach frame due to which the Promise is rejected.\n        if (\n          err.name === ConditionErrorNameMapper[\"amqp:operation-timeout\"] ||\n          err.name === ConditionErrorNameMapper[\"com.microsoft:timeout\"] ||\n          err.name === ConditionErrorNameMapper[\"com.microsoft:session-cannot-be-locked\"]\n        ) {\n          // No point in delaying if cancel has been requested.\n          if (!this._isCancelRequested) {\n            log.sessionManager(\n              \"[%s] Sleeping for %d seconds, since there are no more active MessageSessions on \" +\n                \"the ServiceBus entity.\",\n              connectionId,\n              noActiveSessionBackOffInSeconds\n            );\n            await delay(noActiveSessionBackOffInSeconds * 1000);\n          }\n        } else {\n          // notify the user about the error only when it is not one of the above mentioned errors.\n          onError(err);\n        }\n      } finally {\n        this._maxPendingAcceptSessionsSemaphore.release();\n        log.sessionManager(\n          \"[%s] Releasing the semaphore for max pending accept sessions from \" +\n            \"the finally block: %d, %d.\",\n          connectionId,\n          this._maxPendingAcceptSessionsSemaphore.currentLockCount(),\n          this._maxPendingAcceptSessionsSemaphore.awaitedTaskCount()\n        );\n      }\n    }\n  }\n\n  /**\n   * Manages MessageSessions based on the provided parameters.\n   * @param onMessage The message handler to receive service bus messages from a session\n   * enabled entity.\n   * @param onError The error handler to receive an error that occurs while receiving messages\n   * from a session enabled entity.\n   * @throws Error if the underlying connection is closed.\n   * @throws Error if the session enabled client is already receiving messages.\n   * @throws MessagingError if any error occurs while receiving messages from the service.\n   */\n  async manageMessageSessions(\n    entityType: SessionEntityType,\n    onMessage: OnMessage,\n    onError: OnError,\n    options?: SessionManagerOptions\n  ): Promise<void> {\n    if (this._isManagingSessions) {\n      throw new Error(\n        `${entityType}Client for \"${this._context.namespace.config.entityPath}\" ` +\n          `is already receiving messages from sessions. Please close this ${entityType}Client or ` +\n          `create a new one and receiveMessages from Sessions.`\n      );\n    }\n    this._isManagingSessions = true;\n    this._isCancelRequested = false;\n    if (!options) options = {};\n    if (options.maxConcurrentSessions) this.maxConcurrentSessions = options.maxConcurrentSessions;\n    // We are explicitly configuring the messageSession to timeout in 60 seconds (if not provided\n    // by the user) when no new messages are received.\n    if (!options.newMessageWaitTimeoutInSeconds) {\n      options.newMessageWaitTimeoutInSeconds = Constants.defaultOperationTimeoutInSeconds;\n    }\n    this._maxConcurrentSessionsSemaphore = new Semaphore(this.maxConcurrenSessions);\n    this._maxPendingAcceptSessionsSemaphore = new Semaphore(\n      this.maxConcurrentAcceptSessionRequests\n    );\n\n    for (let i = 0; i < this._maxConcurrentAcceptSessionRequests; i++) {\n      this._acceptSessionAndReceiveMessages(onMessage, onError, options).catch((err) => {\n        log.error(err);\n      });\n    }\n  }\n\n  /**\n   * Close the session manager.\n   */\n  close(): void {\n    log.sessionManager(\n      \"[%s] Closing the SessionMaanger for entity '%s'.\",\n      this._context.namespace.connectionId,\n      this._context.entityPath\n    );\n    this._isCancelRequested = true;\n    this._isManagingSessions = false;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport * as log from \"./log\";\nimport { StreamingReceiver } from \"./core/streamingReceiver\";\nimport { MessageSender } from \"./core/messageSender\";\nimport { ManagementClient, ManagementClientOptions } from \"./core/managementClient\";\nimport { ConnectionContext } from \"./connectionContext\";\nimport { Dictionary, AmqpError } from \"rhea-promise\";\nimport { ClientType } from \"./client\";\nimport { BatchingReceiver } from \"./core/batchingReceiver\";\nimport { ConcurrentExpiringMap } from \"./util/concurrentExpiringMap\";\nimport { MessageReceiver } from \"./core/messageReceiver\";\nimport { MessageSession } from \"./session/messageSession\";\nimport { SessionManager } from \"./session/sessionManager\";\n\n/**\n * @interface ClientEntityContext\n * Provides contextual information like the underlying amqp connection, cbs session,\n * management session, tokenProvider, senders, receivers, etc. about the ServiceBus client.\n * @internal\n */\nexport interface ClientEntityContextBase {\n  /**\n   * @property {ConnectionContext} namespace Describes the context with common properties at\n   * the namespace level.\n   */\n  namespace: ConnectionContext;\n  /**\n   * @property {string} entityPath - The name/path of the entity (queue/topic/subscription) to which\n   * the connection needs to happen.\n   */\n  entityPath: string;\n  /**\n   * @property {boolean} [isSessionEnabled] Indicates whether the client entity is session enabled.\n   * Default: `false`.\n   */\n  isSessionEnabled?: boolean;\n  /**\n   * @property {ManagementClient} [managementClient] A reference to the management client\n   * ($management endpoint) on the underlying amqp connection for the ServiceBus Client.\n   */\n  managementClient?: ManagementClient;\n  /**\n   * @property {StreamingReceiver} [receiver] The ServiceBus receiver associated with the\n   * client entity for streaming messages.\n   */\n  streamingReceiver?: StreamingReceiver;\n  /**\n   * @property {BatchingReceiver} [batchingReceiver] The ServiceBus receiver associated with the\n   * client entity for receiving a batch of messages.\n   */\n  batchingReceiver?: BatchingReceiver;\n  /**\n   * @property {Dictionary<MessageSession>} messageSessions A dictionary of the MessageSession\n   * objects associated with this client.\n   */\n  messageSessions: Dictionary<MessageSession>;\n  /**\n   * @property {Dictionary<MessageSession>} expiredMessageSessions A dictionary that stores expired message sessions IDs.\n   */\n  expiredMessageSessions: Dictionary<boolean>;\n  /**\n   * @property {MessageSender} [sender] The ServiceBus sender associated with the client entity.\n   */\n  sender?: MessageSender;\n  /**\n   * @property {ConcurrentExpiringMap<string>} [requestResponseLockedMessages] A map of locked\n   * messages received using the management client.\n   */\n  requestResponseLockedMessages: ConcurrentExpiringMap<string>;\n  /**\n   * @property {SessionManager} [sessionManager] SessionManager is responsible for efficiently\n   * receiving messages from multiple message sessions.\n   */\n  sessionManager?: SessionManager;\n\n  /**\n   * @property {ClientType} [clientType] Type of the client, used mostly for logging\n   */\n  clientType: ClientType;\n\n  /**\n   * @property {string} [clientId] Unique Id of the client for which this context is created\n   */\n  clientId: string;\n\n  /**\n   * @property {boolean} [isClosed] Denotes if close() was called on this client.\n   */\n  isClosed: boolean;\n}\n\n/**\n * @internal\n */\nexport interface ClientEntityContext extends ClientEntityContextBase {\n  onDetached(error?: AmqpError | Error): Promise<void>;\n  getReceiver(name: string, sessionId?: string): MessageReceiver | MessageSession | undefined;\n  close(): Promise<void>;\n}\n\n/**\n * @internal\n */\nexport interface ClientEntityContextOptions {\n  managementClientAddress?: string;\n  managementClientAudience?: string;\n  isSessionEnabled?: boolean;\n}\n\n/**\n * @internal\n */\nexport namespace ClientEntityContext {\n  /**\n   * @internal\n   */\n  export function create(\n    entityPath: string,\n    clientType: ClientType,\n    context: ConnectionContext,\n    clientId: string,\n    options?: ClientEntityContextOptions\n  ): ClientEntityContext {\n    log.entityCtxt(\n      \"[%s] Creating client entity context for %s: %O\",\n      context.connectionId,\n      clientId\n    );\n\n    if (!options) options = {};\n    const entityContext: ClientEntityContextBase = {\n      namespace: context,\n      entityPath: entityPath,\n      clientType: clientType,\n      clientId: clientId,\n      isClosed: false,\n      requestResponseLockedMessages: new ConcurrentExpiringMap<string>(),\n      isSessionEnabled: !!options.isSessionEnabled,\n      messageSessions: {},\n      expiredMessageSessions: {}\n    };\n\n    (entityContext as ClientEntityContext).sessionManager = new SessionManager(\n      entityContext as ClientEntityContext\n    );\n\n    (entityContext as ClientEntityContext).getReceiver = (name: string, sessionId?: string) => {\n      if (sessionId != undefined && entityContext.expiredMessageSessions[sessionId]) {\n        const error = new Error(\n          `The session lock has expired on the session with id ${sessionId}.`\n        );\n        error.name = \"SessionLockLostError\";\n        log.error(\n          \"[%s] Failed to find receiver '%s' as the session with id '%s' is expired\",\n          entityContext.namespace.connectionId,\n          name,\n          sessionId\n        );\n        throw error;\n      }\n\n      if (\n        sessionId != null &&\n        entityContext.messageSessions[sessionId] &&\n        entityContext.messageSessions[sessionId].name === name\n      ) {\n        return entityContext.messageSessions[sessionId];\n      }\n\n      if (entityContext.streamingReceiver && entityContext.streamingReceiver.name === name) {\n        return entityContext.streamingReceiver;\n      }\n\n      if (entityContext.batchingReceiver && entityContext.batchingReceiver.name === name) {\n        return entityContext.batchingReceiver;\n      }\n\n      let existingReceivers = \"\";\n      if (sessionId != null && entityContext.messageSessions[sessionId]) {\n        existingReceivers = entityContext.messageSessions[sessionId].name;\n      } else {\n        if (entityContext.streamingReceiver) {\n          existingReceivers = entityContext.streamingReceiver.name;\n        }\n        if (entityContext.batchingReceiver) {\n          existingReceivers +=\n            (existingReceivers ? \", \" : \"\") + entityContext.batchingReceiver.name;\n        }\n      }\n\n      log.error(\n        \"[%s] Failed to find receiver '%s' among existing receivers: %s\",\n        entityContext.namespace.connectionId,\n        name,\n        existingReceivers\n      );\n      return;\n    };\n\n    (entityContext as ClientEntityContext).onDetached = async (error?: AmqpError | Error) => {\n      const connectionId = entityContext.namespace.connectionId;\n\n      // Call onDetached() on sender so that it can decide whether to reconnect or not\n      const sender = entityContext.sender;\n      if (sender && !sender.isConnecting) {\n        try {\n          log.error(\"[%s] calling detached on sender '%s'.\", connectionId, sender.name);\n          await sender.onDetached();\n        } catch (err) {\n          log.error(\n            \"[%s] An error occurred while calling onDetached() the sender '%s': %O.\",\n            connectionId,\n            sender.name,\n            err\n          );\n        }\n      }\n\n      // Call onDetached() on batchingReceiver so that it can gracefully close any ongoing batch operation.\n      const batchingReceiver = entityContext.batchingReceiver;\n      if (batchingReceiver && !batchingReceiver.isConnecting) {\n        try {\n          log.error(\n            \"[%s] calling detached on batching receiver '%s'.\",\n            connectionId,\n            batchingReceiver.name\n          );\n          await batchingReceiver.onDetached(error);\n        } catch (err) {\n          log.error(\n            \"[%s] An error occurred while calling onDetached() on the batching receiver '%s': %O.\",\n            connectionId,\n            batchingReceiver.name,\n            err\n          );\n        }\n      }\n\n      // Call onDetached() on streamingReceiver so that it can decide whether to reconnect or not\n      const streamingReceiver = entityContext.streamingReceiver;\n      if (streamingReceiver && !streamingReceiver.isConnecting) {\n        try {\n          log.error(\n            \"[%s] calling detached on streaming receiver '%s'.\",\n            connectionId,\n            streamingReceiver.name\n          );\n          await streamingReceiver.onDetached(error);\n        } catch (err) {\n          log.error(\n            \"[%s] An error occurred while calling onDetached() on the streaming receiver '%s': %O.\",\n            connectionId,\n            streamingReceiver.name,\n            err\n          );\n        }\n      }\n    };\n\n    const isManagementClientSharedWithOtherClients = (): boolean => {\n      for (const id of Object.keys(context.clientContexts)) {\n        if (\n          context.clientContexts[id].entityPath === entityContext.entityPath &&\n          context.clientContexts[id].clientId !== entityContext.clientId\n        ) {\n          return true;\n        }\n      }\n      return false;\n    };\n\n    (entityContext as ClientEntityContext).close = async () => {\n      if (!context.connection || !context.connection.isOpen()) {\n        return;\n      }\n\n      log.entityCtxt(\n        \"[%s] Closing client entity context for %s: %O\",\n        context.connectionId,\n        clientId\n      );\n\n      // Close sender\n      if (entityContext.sender) {\n        await entityContext.sender.close();\n      }\n\n      // Close batching receiver\n      if (entityContext.batchingReceiver) {\n        await entityContext.batchingReceiver.close();\n      }\n\n      // Close streaming receiver\n      if (entityContext.streamingReceiver) {\n        await entityContext.streamingReceiver.close();\n      }\n\n      // Close all the MessageSessions.\n      for (const messageSessionId of Object.keys(entityContext.messageSessions)) {\n        await entityContext.messageSessions[messageSessionId].close();\n      }\n\n      // Close the sessionManager.\n      if (entityContext.sessionManager) {\n        entityContext.sessionManager.close();\n      }\n\n      // Make sure that we clear the map of deferred messages\n      entityContext.requestResponseLockedMessages.clear();\n\n      // Delete the reference in ConnectionContext\n      delete context.clientContexts[clientId];\n\n      // Close the managementClient unless it is shared with other clients\n      if (entityContext.managementClient && !isManagementClientSharedWithOtherClients()) {\n        await entityContext.managementClient.close();\n        entityContext.managementClient = undefined;\n      }\n\n      entityContext.isClosed = true;\n\n      log.entityCtxt(\n        \"[%s] Closed client entity context for %s: %O\",\n        context.connectionId,\n        clientId\n      );\n    };\n\n    let managementClient = getManagementClient(context.clientContexts, entityPath);\n    if (!managementClient) {\n      const mOptions: ManagementClientOptions = {\n        address: options.managementClientAddress || `${entityPath}/$management`,\n        audience: options.managementClientAudience\n      };\n      managementClient = new ManagementClient(entityContext as ClientEntityContext, mOptions);\n    }\n    entityContext.managementClient = managementClient;\n\n    const clientEntityContext = entityContext as ClientEntityContext;\n    context.clientContexts[entityContext.clientId] = clientEntityContext;\n\n    log.entityCtxt(\"[%s] Created client entity context for %s: %O\", context.connectionId, clientId);\n\n    return clientEntityContext;\n  }\n}\n\n// Multiple clients for the same Service Bus entity should be using the same management client.\nfunction getManagementClient(\n  clients: Dictionary<ClientEntityContext>,\n  entityPath: string\n): ManagementClient | undefined {\n  let result: ManagementClient | undefined;\n  for (const id of Object.keys(clients)) {\n    if (clients[id].entityPath === entityPath) {\n      result = clients[id].managementClient;\n      break;\n    }\n  }\n  return result;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport Long from \"long\";\nimport * as log from \"./log\";\nimport { ConnectionContext } from \"./connectionContext\";\nimport { ReceivedMessageInfo, ReceiveMode } from \"./serviceBusMessage\";\nimport { Client, ClientType } from \"./client\";\nimport { SessionReceiverOptions } from \"./session/messageSession\";\nimport { Sender } from \"./sender\";\nimport { Receiver, SessionReceiver } from \"./receiver\";\nimport {\n  getOpenReceiverErrorMsg,\n  getOpenSenderErrorMsg,\n  throwErrorIfClientOrConnectionClosed,\n  throwErrorIfConnectionClosed\n} from \"./util/errors\";\nimport { generate_uuid } from \"rhea-promise\";\nimport { ClientEntityContext } from \"./clientEntityContext\";\n\n/**\n * Describes the client that allows interacting with a Service Bus Queue.\n * Use the `createQueueClient` function on the ServiceBusClient object to instantiate a QueueClient\n * @class QueueClient\n */\nexport class QueueClient implements Client {\n  /**\n   * @readonly\n   * @property The path for the Service Bus Queue for which this client is created.\n   */\n  readonly entityPath: string;\n  /**\n   * @readonly\n   * @property A unique identifier for this client.\n   */\n  readonly id: string;\n  /**\n   * @property Describes the amqp connection context for the QueueClient.\n   */\n  private _context: ClientEntityContext;\n\n  private _currentReceiver: Receiver | undefined;\n  private _currentSender: Sender | undefined;\n\n  /**\n   * Constructor for QueueClient.\n   * This is not meant for the user to call directly.\n   * The user should use the `createQueueClient` on the ServiceBusClient instead.\n   *\n   * @constructor\n   * @internal\n   * @param queueName The Queue name.\n   * @param context The connection context to create the QueueClient.\n   * @throws Error if the underlying connection is closed.\n   */\n  constructor(queueName: string, context: ConnectionContext) {\n    throwErrorIfConnectionClosed(context);\n    this.entityPath = String(queueName);\n    this.id = `${this.entityPath}/${generate_uuid()}`;\n    this._context = ClientEntityContext.create(\n      this.entityPath,\n      ClientType.QueueClient,\n      context,\n      this.id\n    );\n  }\n\n  /**\n   * Closes all the AMQP links for sender/receivers created by this client.\n   * Once closed, neither the QueueClient nor its sender/receivers can be used for any\n   * further operations.\n   *\n   * @returns {Promise<void>}\n   */\n  async close(): Promise<void> {\n    try {\n      // Close the corresponding client context which will take care of closing all AMQP links\n      // associated with this client\n      await this._context.close();\n    } catch (err) {\n      log.error(\n        \"[%s] An error occurred while closing the QueueClient for %s: %O\",\n        this._context.namespace.connectionId,\n        this.id,\n        err\n      );\n      throw err;\n    }\n  }\n\n  /**\n   * Creates a Sender to be used for sending messages, scheduling messages to be sent at a later time\n   * and cancelling such scheduled messages.\n   * @throws Error if the QueueClient or the underlying connection is closed.\n   * @throws Error if an open sender already exists on the QueueClient.\n   */\n  createSender(): Sender {\n    throwErrorIfClientOrConnectionClosed(\n      this._context.namespace,\n      this.entityPath,\n      this._context.isClosed\n    );\n    if (!this._currentSender || this._currentSender.isClosed) {\n      this._currentSender = new Sender(this._context);\n      return this._currentSender;\n    }\n    const errorMessage = getOpenSenderErrorMsg(\"QueueClient\", this.entityPath);\n    const error = new Error(errorMessage);\n    log.error(`[${this._context.namespace.connectionId}] %O`, error);\n    throw error;\n  }\n\n  /**\n   * Creates a Receiver for receiving messages from a Queue which does not have sessions enabled.\n   * @param receiveMode An enum indicating the mode in which messages should be received. Possible\n   * values are:\n   * - `ReceiveMode.peekLock`: Once a message is received in this mode, the receiver has a lock on\n   * the message for a particular duration. If the message is not settled by this time, it lands back\n   * on Service Bus to be fetched by the next receive operation.\n   * - `ReceiveMode.receiveAndDelete`: Messages received in this mode get automatically removed from\n   * Service Bus.\n   *\n   * @returns Receiver A receiver to receive messages from a Queue which does not have\n   * sessions enabled.\n   * @throws Error if the QueueClient or the underlying connection is closed.\n   * @throws Error if an open receiver already exists on the QueueClient.\n   * @throws MessagingError with name `InvalidOperationError` if the Queue has sessions enabled\n   * (in which case, use the overload of this method which takes\n   * `sessionOptions` argument)\n   */\n  public createReceiver(receiveMode: ReceiveMode): Receiver;\n\n  /**\n   * Creates a Receiver for receiving messages from a session enabled Queue. When no sessionId is\n   * given, a random session among the available sessions is used.\n   *\n   * @param receiveMode An enum indicating the mode in which messages should be received. Possible\n   * values are:\n   * - `ReceiveMode.peekLock`: Once a message is received in this mode, the receiver has a lock on\n   * the message for a particular duration. If the message is not settled by this time, it lands back\n   * on Service Bus to be fetched by the next receive operation.\n   * - `ReceiveMode.receiveAndDelete`: Messages received in this mode get automatically removed from\n   * Service Bus.\n   * @param sessionOptions Options to provide sessionId and duration of automatic lock renewal for\n   * the session receiver.\n   *\n   * @returns SessionReceiver A receiver to receive from a session in the Queue.\n   * @throws Error if the QueueClient or the underlying connection is closed.\n   * @throws Error if an open receiver already exists on the QueueClient for given sessionId.\n   * @throws MessagingError with name `SessionCannotBeLockedError` if the Queue does not have sessions enabled (in which\n   * case do not pass the `sessionOptions` argument) or if Service Bus is not able to get a lock on\n   * the session (in which case try again after some time)\n   */\n  public createReceiver(\n    receiveMode: ReceiveMode,\n    sessionOptions: SessionReceiverOptions\n  ): SessionReceiver;\n\n  public createReceiver(\n    receiveMode: ReceiveMode,\n    sessionOptions?: SessionReceiverOptions\n  ): Receiver | SessionReceiver {\n    throwErrorIfClientOrConnectionClosed(\n      this._context.namespace,\n      this.entityPath,\n      this._context.isClosed\n    );\n\n    // Receiver for Queue where sessions are not enabled\n    if (!sessionOptions) {\n      if (!this._currentReceiver || this._currentReceiver.isClosed) {\n        this._currentReceiver = new Receiver(this._context, receiveMode);\n        return this._currentReceiver;\n      }\n      const errorMessage = getOpenReceiverErrorMsg(ClientType.QueueClient, this.entityPath);\n      const error = new Error(errorMessage);\n      log.error(`[${this._context.namespace.connectionId}] %O`, error);\n      throw error;\n    }\n\n    return new SessionReceiver(this._context, receiveMode, sessionOptions);\n  }\n\n  /**\n   * Fetches the next batch of active messages (including deferred but not deadlettered messages).\n   * - The first call to `peek()` fetches the first active message. Each subsequent call fetches the\n   * subsequent message.\n   * - Unlike a `received` message, `peeked` message is a read-only version of the message.\n   * It cannot be `Completed/Abandoned/Deferred/Deadlettered`. The lock on it cannot be renewed.\n   *\n   * @param [maxMessageCount] The maximum number of messages to peek. Default value `1`.\n   * @returns Promise<ReceivedMessageInfo[]>\n   * @throws Error if the QueueClient or the underlying connection is closed.\n   * @throws MessagingError if the service returns an error while peeking for messages.\n   */\n  async peek(maxMessageCount?: number): Promise<ReceivedMessageInfo[]> {\n    throwErrorIfClientOrConnectionClosed(\n      this._context.namespace,\n      this.entityPath,\n      this._context.isClosed\n    );\n\n    return this._context.managementClient!.peek(maxMessageCount);\n  }\n\n  /**\n   * Peeks the desired number of active messages (including deferred but not deadlettered messages)\n   * from the specified sequence number.\n   * - Unlike a `received` message, `peeked` message is a read-only version of the message.\n   * It cannot be `Completed/Abandoned/Deferred/Deadlettered`. The lock on it cannot be renewed.\n   *\n   * @param fromSequenceNumber The sequence number from where to read the message.\n   * @param [maxMessageCount] The maximum number of messages to peek. Default value `1`.\n   * @returns Promise<ReceivedMessageInfo[]>\n   * @throws Error if the QueueClient or the underlying connection is closed.\n   * @throws MessagingError if the service returns an error while peeking for messages.\n   */\n  async peekBySequenceNumber(\n    fromSequenceNumber: Long,\n    maxMessageCount?: number\n  ): Promise<ReceivedMessageInfo[]> {\n    throwErrorIfClientOrConnectionClosed(\n      this._context.namespace,\n      this.entityPath,\n      this._context.isClosed\n    );\n\n    return this._context.managementClient!.peekBySequenceNumber(\n      fromSequenceNumber,\n      maxMessageCount\n    );\n  }\n\n  // /**\n  //  * Lists the ids of the sessions on the ServiceBus Queue.\n  //  * @param maxNumberOfSessions Maximum number of sessions.\n  //  * @param lastUpdateTime Filter to include only sessions updated after a given time. Default\n  //  * value is 3 days before the current time.\n  //  */\n  // async listMessageSessions(\n  //   maxNumberOfSessions: number,\n  //   lastUpdatedTime?: Date\n  // ): Promise<string[]> {\n  // TODO: Parameter validation if required\n  // this.throwErrorIfClientOrConnectionClosed();\n  //   return this._context.managementClient!.listMessageSessions(\n  //     0,\n  //     maxNumberOfSessions,\n  //     lastUpdatedTime\n  //   );\n  // }\n\n  /**\n   * Returns the corresponding dead letter queue name for the queue represented by the given name.\n   * Use this in the `createQueueClient` function on the `ServiceBusClient` instance to receive\n   * messages from a dead letter queue.\n   * @param queueName Name of the queue whose dead letter counterpart's name is being fetched\n   */\n  static getDeadLetterQueuePath(queueName: string): string {\n    return `${queueName}/$DeadLetterQueue`;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport * as log from \"./log\";\nimport { ConnectionContext } from \"./connectionContext\";\nimport { Client, ClientType } from \"./client\";\nimport { Sender } from \"./sender\";\nimport {\n  getOpenSenderErrorMsg,\n  throwErrorIfClientOrConnectionClosed,\n  throwErrorIfConnectionClosed\n} from \"./util/errors\";\nimport { generate_uuid } from \"rhea-promise\";\nimport { ClientEntityContext } from \"./clientEntityContext\";\n\n/**\n * Describes the client that allows interacting with a Service Bus Topic.\n * Use the `createTopicClient` function on the ServiceBusClient object to instantiate a TopicClient\n * @class TopicClient\n */\nexport class TopicClient implements Client {\n  /**\n   * @readonly\n   * @property The path for the Service Bus Topic for which this client is created.\n   */\n  readonly entityPath: string;\n  /**\n   * @readonly\n   * @property A unique identifier for this client.\n   */\n  readonly id: string;\n  /**\n   * @property Describes the amqp connection context for the QueueClient.\n   */\n  private _context: ClientEntityContext;\n\n  private _currentSender: Sender | undefined;\n\n  /**\n   * Constructor for TopicClient.\n   * This is not meant for the user to call directly.\n   * The user should use the `createTopicClient` on the Namespace instead.\n   *\n   * @constructor\n   * @internal\n   * @param topicName - The topic name.\n   * @param context - The connection context to create the TopicClient.\n   * @throws Error if the TopicClient or the underlying connection is closed.\n   */\n  constructor(topicName: string, context: ConnectionContext) {\n    throwErrorIfConnectionClosed(context);\n    this.entityPath = String(topicName);\n    this.id = `${this.entityPath}/${generate_uuid()}`;\n    this._context = ClientEntityContext.create(\n      this.entityPath,\n      ClientType.TopicClient,\n      context,\n      this.id\n    );\n  }\n\n  /**\n   * Closes the AMQP link for the sender created by this client.\n   * Once closed, neither the TopicClient nor its senders can be used for any\n   * further operations.\n   *\n   * @returns {Promise<void>}\n   */\n  async close(): Promise<void> {\n    try {\n      // Close the corresponding client context which will take care of closing all AMQP links\n      // associated with this client\n      await this._context.close();\n    } catch (err) {\n      log.error(\n        \"[%s] An error occurred while closing the TopicClient for %s: %O\",\n        this._context.namespace.connectionId,\n        this.id,\n        err\n      );\n      throw err;\n    }\n  }\n\n  /**\n   * Creates a Sender to be used for sending messages, scheduling messages to be sent at a later time\n   * and cancelling such scheduled messages.\n   *\n   * If the Topic has session enabled Subscriptions, then messages sent without the `sessionId`\n   * property will go to the dead letter queue of such subscriptions.\n   * @throws Error if the TopicClient or the underlying connection is closed.\n   * @throws Error if an open sender already exists on the TopicClient.\n   */\n  createSender(): Sender {\n    throwErrorIfClientOrConnectionClosed(\n      this._context.namespace,\n      this.entityPath,\n      this._context.isClosed\n    );\n    if (!this._currentSender || this._currentSender.isClosed) {\n      this._currentSender = new Sender(this._context);\n      return this._currentSender;\n    }\n\n    const errorMessage = getOpenSenderErrorMsg(\"TopicClient\", this.entityPath);\n    const error = new Error(errorMessage);\n    log.error(`[${this._context.namespace.connectionId}] %O`, error);\n    throw error;\n  }\n\n  /**\n   * Returns the corresponding dead letter topic name for the given topic and subscription names.\n   * Use this in the `createSubscriptionClient` function of the `ServiceBusClient` instance to\n   * receive messages from dead letter queue for given subscription.\n   * @param topicName Name of the topic whose dead letter counterpart's name is being fetched\n   * @param subscriptionName Name of the subscription whose dead letter counterpart's name is being fetched\n   */\n  static getDeadLetterTopicPath(topicName: string, subscriptionName: string): string {\n    return `${topicName}/Subscriptions/${subscriptionName}/$DeadLetterQueue`;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport * as log from \"./log\";\nimport { ConnectionContext } from \"./connectionContext\";\nimport { Receiver, SessionReceiver } from \"./receiver\";\nimport { ReceivedMessageInfo, ReceiveMode } from \"./serviceBusMessage\";\nimport { Client, ClientType } from \"./client\";\nimport { CorrelationFilter, RuleDescription } from \"./core/managementClient\";\nimport { SessionReceiverOptions } from \"./session/messageSession\";\nimport {\n  getOpenReceiverErrorMsg,\n  throwErrorIfClientOrConnectionClosed,\n  throwErrorIfConnectionClosed\n} from \"./util/errors\";\nimport { generate_uuid } from \"rhea-promise\";\nimport { ClientEntityContext } from \"./clientEntityContext\";\nimport Long from \"long\";\n\n/**\n * Describes the client that allows interacting with a Service Bus Subscription.\n * Use the `createSubscriptionClient` function on the ServiceBusClient object to instantiate a\n * SubscriptionClient\n * @class SubscriptionClient\n */\nexport class SubscriptionClient implements Client {\n  /**\n   * @readonly\n   * @property The name of the Service Bus Topic for whose Subscription, this client is created.\n   */\n  readonly topicName: string;\n  /**\n   * @readonly\n   * @property The name of the Service Bus Subscription for which this client is created.\n   */\n  readonly subscriptionName: string;\n\n  /**\n   * @readonly\n   * @property The name of the default rule on the subscription.\n   */\n  readonly defaultRuleName: string = \"$Default\";\n\n  /**\n   * @readonly\n   * @property The path for the Service Bus Subscription for which this client is created.\n   */\n  readonly entityPath: string;\n  /**\n   * @readonly\n   * @property A unique identifier for this client.\n   */\n  readonly id: string;\n  /**\n   * @property Describes the amqp connection context for the SubscriptionClient.\n   */\n  private _context: ClientEntityContext;\n\n  private _currentReceiver: Receiver | undefined;\n\n  /**\n   * Constructor for SubscriptionClient.\n   * This is not meant for the user to call directly.\n   * The user should use the `createSubscriptionClient` on the Namespace instead.\n   *\n   * @constructor\n   * @internal\n   * @param topicName - The Topic name.\n   * @param subscriptionName - The Subscription name.\n   * @param context - The connection context to create the SubscriptionClient.\n   * @throws Error if the underlying connection is closed.\n   */\n  constructor(topicName: string, subscriptionName: string, context: ConnectionContext) {\n    throwErrorIfConnectionClosed(context);\n\n    this.topicName = String(topicName);\n    this.subscriptionName = String(subscriptionName);\n\n    this.entityPath = `${topicName}/Subscriptions/${subscriptionName}`;\n    this.id = `${this.entityPath}/${generate_uuid()}`;\n    this._context = ClientEntityContext.create(\n      this.entityPath,\n      ClientType.SubscriptionClient,\n      context,\n      this.id\n    );\n  }\n\n  /**\n   * Closes the AMQP link for the receivers created by this client.\n   * Once closed, neither the SubscriptionClient nor its receivers can be used for any\n   * further operations.\n   *\n   * @returns {Promise<void>}\n   */\n  async close(): Promise<void> {\n    try {\n      // Close the corresponding client context which will take care of closing all AMQP links\n      // associated with this client\n      await this._context.close();\n    } catch (err) {\n      log.error(\n        \"[%s] An error occurred while closing the SubscriptionClient for %s: %O\",\n        this._context.namespace.connectionId,\n        this.id,\n        err\n      );\n      throw err;\n    }\n  }\n\n  /**\n   * Creates a Receiver for receiving messages from a Subscription which does not have sessions enabled.\n   * @param receiveMode An enum indicating the mode in which messages should be received. Possible\n   * values are:\n   * - `ReceiveMode.peekLock`: Once a message is received in this mode, the receiver has a lock on\n   * the message for a particular duration. If the message is not settled by this time, it lands back\n   * on Service Bus to be fetched by the next receive operation.\n   * - `ReceiveMode.receiveAndDelete`: Messages received in this mode get automatically removed from\n   * Service Bus.\n   *\n   * @returns Receiver A receiver to receive messages from a Subscription which does not have\n   * sessions enabled.\n   * @throws Error if the SubscriptionClient or the underlying connection is closed.\n   * @throws Error if an open receiver already exists on the SubscriptionClient.\n   * @throws MessagingError with name `InvalidOperationError` if the Queue has sessions enabled\n   * (in which case, use the overload of this method which takes\n   * `sessionOptions` argument)\n   */\n  public createReceiver(receiveMode: ReceiveMode): Receiver;\n\n  /**\n   * Creates a Receiver for receiving messages from a session enabled Subscription. When no sessionId is\n   * given, a random session among the available sessions is used.\n   * @param receiveMode An enum indicating the mode in which messages should be received. Possible\n   * values are:\n   * - `ReceiveMode.peekLock`: Once a message is received in this mode, the receiver has a lock on\n   * the message for a particular duration. If the message is not settled by this time, it lands back\n   * on Service Bus to be fetched by the next receive operation.\n   * - `ReceiveMode.receiveAndDelete`: Messages received in this mode get automatically removed from\n   * Service Bus.\n   * @param sessionOptions Options to provide sessionId and duration of automatic lock renewal for\n   * the session receiver.\n   *\n   * @returns SessionReceiver A receiver to receive from a session in the Subscription.\n   * @throws Error if the SubscriptionClient or the underlying connection is closed.\n   * @throws Error if an open receiver already exists on the SubscriptionClient for given sessionId.\n   * @throws MessagingError with name `SessionCannotBeLockedError` if the Queue does not have sessions enabled (in which\n   * case do not pass the `sessionOptions` argument) or if Service Bus is not able to get a lock on\n   * the session (in which case try again after some time)\n   */\n  public createReceiver(\n    receiveMode: ReceiveMode,\n    sessionOptions: SessionReceiverOptions\n  ): SessionReceiver;\n\n  public createReceiver(\n    receiveMode: ReceiveMode,\n    sessionOptions?: SessionReceiverOptions\n  ): Receiver | SessionReceiver {\n    throwErrorIfClientOrConnectionClosed(\n      this._context.namespace,\n      this.entityPath,\n      this._context.isClosed\n    );\n\n    // Receiver for Subscription where sessions are not enabled\n    if (!sessionOptions) {\n      if (!this._currentReceiver || this._currentReceiver.isClosed) {\n        this._currentReceiver = new Receiver(this._context, receiveMode);\n        return this._currentReceiver;\n      }\n      const errorMessage = getOpenReceiverErrorMsg(ClientType.SubscriptionClient, this.entityPath);\n      const error = new Error(errorMessage);\n      log.error(`[${this._context.namespace.connectionId}] %O`, error);\n      throw error;\n    }\n\n    return new SessionReceiver(this._context, receiveMode, sessionOptions);\n  }\n\n  /**\n   * Fetches the next batch of active messages (including deferred but not deadlettered messages).\n   * - The first call to `peek()` fetches the first active message. Each subsequent call fetches the\n   * subsequent message.\n   * - Unlike a `received` message, `peeked` message is a read-only version of the message.\n   * It cannot be `Completed/Abandoned/Deferred/Deadlettered`. The lock on it cannot be renewed.\n   *\n   * @param [maxMessageCount] The maximum number of messages to peek. Default value `1`.\n   * @returns Promise<ReceivedSBMessage[]>\n   * @throws Error if the SubscriptionClient or the underlying connection is closed.\n   * @throws MessagingError if the service returns an error while peeking for messages.\n   */\n  async peek(maxMessageCount?: number): Promise<ReceivedMessageInfo[]> {\n    throwErrorIfClientOrConnectionClosed(\n      this._context.namespace,\n      this.entityPath,\n      this._context.isClosed\n    );\n\n    return this._context.managementClient!.peek(maxMessageCount);\n  }\n\n  /**\n   * Peeks the desired number of active messages (including deferred but not deadlettered messages)\n   * from the specified sequence number.\n   * - Unlike a `received` message, `peeked` message is a read-only version of the message.\n   * It cannot be `Completed/Abandoned/Deferred/Deadlettered`. The lock on it cannot be renewed.\n   *\n   * @param fromSequenceNumber The sequence number from where to read the message.\n   * @param [maxMessageCount] The maximum number of messages to peek. Default value `1`.\n   * @returns Promise<ReceivedSBMessage[]>\n   * @throws Error if the SubscriptionClient or the underlying connection is closed.\n   * @throws MessagingError if the service returns an error while peeking for messages.\n   */\n  async peekBySequenceNumber(\n    fromSequenceNumber: Long,\n    maxMessageCount?: number\n  ): Promise<ReceivedMessageInfo[]> {\n    throwErrorIfClientOrConnectionClosed(\n      this._context.namespace,\n      this.entityPath,\n      this._context.isClosed\n    );\n\n    return this._context.managementClient!.peekBySequenceNumber(\n      fromSequenceNumber,\n      maxMessageCount\n    );\n  }\n\n  // #region topic-filters\n\n  /**\n   * Gets all rules associated with the subscription\n   * @throws Error if the SubscriptionClient or the underlying connection is closed.\n   * @throws MessagingError if the service returns an error while retrieving rules.\n   */\n  async getRules(): Promise<RuleDescription[]> {\n    throwErrorIfClientOrConnectionClosed(\n      this._context.namespace,\n      this.entityPath,\n      this._context.isClosed\n    );\n    return this._context.managementClient!.getRules();\n  }\n\n  /**\n   * Removes the rule on the subscription identified by the given rule name.\n   *\n   * **Caution**: If all rules on a subscription are removed, then the subscription will not receive\n   * any more messages.\n   * @param ruleName\n   * @throws Error if the SubscriptionClient or the underlying connection is closed.\n   * @throws MessagingError if the service returns an error while removing rules.\n   */\n  async removeRule(ruleName: string): Promise<void> {\n    throwErrorIfClientOrConnectionClosed(\n      this._context.namespace,\n      this.entityPath,\n      this._context.isClosed\n    );\n    return this._context.managementClient!.removeRule(ruleName);\n  }\n\n  /**\n   * Adds a rule on the subscription as defined by the given rule name, filter and action.\n   *\n   * **Note**: Remove the default true filter on the subscription before adding a rule.\n   * Otherwise, the added rule will have no affect as the true filter will always result in\n   * the subscription receiving all messages.\n   * @param ruleName Name of the rule\n   * @param filter A Boolean, SQL expression or a Correlation filter. For SQL Filter syntax, see\n   * {@link https://docs.microsoft.com/en-us/azure/service-bus-messaging/service-bus-messaging-sql-filter SQLFilter syntax}.\n   * @param sqlRuleActionExpression Action to perform if the message satisfies the filtering expression. For SQL Rule Action syntax,\n   * see {@link https://docs.microsoft.com/en-us/azure/service-bus-messaging/service-bus-messaging-sql-rule-action SQLRuleAction syntax}.\n   * @throws Error if the SubscriptionClient or the underlying connection is closed.\n   * @throws MessagingError if the service returns an error while adding rules.\n   */\n  async addRule(\n    ruleName: string,\n    filter: boolean | string | CorrelationFilter,\n    sqlRuleActionExpression?: string\n  ): Promise<void> {\n    throwErrorIfClientOrConnectionClosed(\n      this._context.namespace,\n      this.entityPath,\n      this._context.isClosed\n    );\n    return this._context.managementClient!.addRule(ruleName, filter, sqlRuleActionExpression);\n  }\n\n  // #endregion\n\n  // #region sessions\n\n  // /**\n  //  * Lists the ids of the sessions on the ServiceBus Subscription.\n  //  * @param maxNumberOfSessions Maximum number of sessions.\n  //  * @param lastUpdateTime Filter to include only sessions updated after a given time. Default\n  //  * value is 3 days before the current time.\n  //  */\n  // async listMessageSessions(\n  //   maxNumberOfSessions: number,\n  //   lastUpdatedTime?: Date\n  // ): Promise<string[]> {\n  // TODO: Parameter validation if required\n  // this.throwErrorIfClientOrConnectionClosed();\n  //   return this._context.managementClient!.listMessageSessions(\n  //     0,\n  //     maxNumberOfSessions,\n  //     lastUpdatedTime\n  //   );\n  // }\n\n  // #endregion\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport * as log from \"./log\";\n\nimport {\n  ApplicationTokenCredentials,\n  DeviceTokenCredentials,\n  UserTokenCredentials,\n  MSITokenCredentials\n} from \"@azure/ms-rest-nodeauth\";\n\nimport { WebSocketImpl } from \"rhea-promise\";\nimport { ConnectionContext } from \"./connectionContext\";\nimport { QueueClient } from \"./queueClient\";\nimport { TopicClient } from \"./topicClient\";\nimport {\n  ConnectionConfig,\n  DataTransformer,\n  TokenProvider,\n  AadTokenProvider,\n  SasTokenProvider\n} from \"@azure/amqp-common\";\nimport { SubscriptionClient } from \"./subscriptionClient\";\nimport { isNode } from \"./util/utils\";\n\n/**\n * Describes the options that can be provided while creating the ServiceBusClient.\n * @interface ServiceBusClientOptions\n */\nexport interface ServiceBusClientOptions {\n  /**\n   * @property The data transformer that will be used to encode\n   * and decode the sent and received messages respectively. If not provided then we will use the\n   * DefaultDataTransformer. The default transformer should handle majority of the cases. This\n   * option needs to be used only for specialized scenarios.\n   */\n  dataTransformer?: DataTransformer;\n  /**\n   * @property The WebSocket constructor used to create an AMQP connection\n   * over a WebSocket. In browsers, the built-in WebSocket will be  used by default. In Node, a\n   * TCP socket will be used if a WebSocket constructor is not provided.\n   */\n  webSocket?: WebSocketImpl;\n  /**\n   * @property Options to be passed to the WebSocket constructor\n   */\n  webSocketConstructorOptions?: any;\n}\n\n/**\n * Describes the client that allows interacting with a Service Bus instance.\n * Holds the AMQP connection to the Service Bus Namespace and is the entry point for using Queues,\n * Topics and Subscriptions.\n */\nexport class ServiceBusClient {\n  /**\n   * @readonly\n   * @property The name of the Service Bus Namespace.\n   */\n  readonly name: string;\n  /**\n   * @property Describes the amqp connection context for the Namespace.\n   * @private\n   */\n  private _context: ConnectionContext;\n\n  /**\n   * Instantiates a ServiceBusClient to interact with a Service Bus Namespace.\n   *\n   * @constructor\n   * @param {ConnectionConfig} config - The connection configuration needed to connect to the\n   * Service Bus Namespace.\n   * @param {TokenProvider} [tokenProvider] - The token provider that provides the token for\n   * authentication.\n   * @param {ServiceBusClientOptions} - Options to control ways to interact with the Service Bus\n   * Namespace.\n   */\n  private constructor(\n    config: ConnectionConfig,\n    tokenProvider: TokenProvider,\n    options?: ServiceBusClientOptions\n  ) {\n    if (!options) options = {};\n    this.name = config.endpoint;\n    this._context = ConnectionContext.create(config, tokenProvider, options);\n  }\n\n  /**\n   * Creates a QueueClient for an existing Service Bus Queue.\n   * @param {string} queueName The queue name.\n   * @returns QueueClient.\n   * @throws Error if the underlying connection is closed.\n   */\n  createQueueClient(queueName: string): QueueClient {\n    const client = new QueueClient(queueName, this._context);\n    log.ns(\"Created the QueueClient for Queue: %s\", queueName);\n    return client;\n  }\n\n  /**\n   * Creates a TopicClient for an existing Service Bus Topic.\n   * @param {string} topicName The topic name.\n   * @returns TopicClient.\n   * @throws\n   * @throws Error if the underlying connection is closed.\n   */\n  createTopicClient(topicName: string): TopicClient {\n    const client = new TopicClient(topicName, this._context);\n    log.ns(\"Created the TopicClient for Topic: %s\", topicName);\n    return client;\n  }\n\n  /**\n   * Creates a SubscriptionClient for an existing Service Bus Subscription.\n   * @param {string} topicName The topic name.\n   * @param {string} subscriptionName The subscription name.\n   * @returns SubscriptionClient.\n   * @throws Error if the underlying connection is closed.\n   */\n  createSubscriptionClient(topicName: string, subscriptionName: string): SubscriptionClient {\n    const client = new SubscriptionClient(topicName, subscriptionName, this._context);\n    log.ns(\n      \"Created the SubscriptionClient for Topic: %s and Subscription: %s\",\n      topicName,\n      subscriptionName\n    );\n    return client;\n  }\n\n  /**\n   * Closes the AMQP connection created by this ServiceBusClient along with AMQP links for\n   * sender/receivers created by the queue/topic/subscription clients created by this\n   * ServiceBusClient.\n   * Once closed,\n   * - the clients created by this ServiceBusClient cannot be used to send/receive messages anymore.\n   * - this ServiceBusClient cannot be used to create any new queues/topics/subscriptions clients.\n   * @returns {Promise<any>}\n   */\n  async close(): Promise<any> {\n    try {\n      if (this._context.connection.isOpen()) {\n        log.ns(\"Closing the amqp connection '%s' on the client.\", this._context.connectionId);\n\n        // Close all the clients.\n        for (const id of Object.keys(this._context.clientContexts)) {\n          const clientContext = this._context.clientContexts[id];\n          await clientContext.close();\n        }\n        await this._context.cbsSession.close();\n\n        await this._context.connection.close();\n        this._context.wasConnectionCloseCalled = true;\n        log.ns(\"Closed the amqp connection '%s' on the client.\", this._context.connectionId);\n      }\n    } catch (err) {\n      const errObj = err instanceof Error ? err : new Error(JSON.stringify(err));\n      log.error(\n        `An error occurred while closing the connection \"${this._context.connectionId}\":\\n${errObj}`\n      );\n      throw errObj;\n    }\n  }\n\n  /**\n   * Creates a ServiceBusClient for the Service Bus Namespace represented in the given connection\n   * string.\n   * @param {string} connectionString - Connection string of the form\n   * 'Endpoint=sb://my-servicebus-namespace.servicebus.windows.net/;SharedAccessKeyName=my-SA-name;SharedAccessKey=my-SA-key'\n   * @param {ServiceBusClientOptions} [options] Options to control ways to interact with the\n   * Service Bus Namespace.\n   * @returns {ServiceBusClient}\n   */\n  static createFromConnectionString(\n    connectionString: string,\n    options?: ServiceBusClientOptions\n  ): ServiceBusClient {\n    const config = ConnectionConfig.create(connectionString);\n\n    config.webSocket = options && options.webSocket;\n    config.webSocketEndpointPath = \"$servicebus/websocket\";\n    config.webSocketConstructorOptions = options && options.webSocketConstructorOptions;\n\n    ConnectionConfig.validate(config);\n    const tokenProvider = new SasTokenProvider(\n      config.endpoint,\n      config.sharedAccessKeyName,\n      config.sharedAccessKey\n    );\n    return new ServiceBusClient(config, tokenProvider, options);\n  }\n\n  /**\n   * Creates a ServiceBusClient for the Service Bus Namespace represented by the given host using\n   * the given TokenProvider.\n   * @param {string} host - Fully qualified domain name for Servicebus. Most likely,\n   * `<yournamespace>.servicebus.windows.net`.\n   * @param {TokenProvider} tokenProvider - Your custom implementation of the {@link https://github.com/Azure/amqp-common-js/blob/master/lib/auth/token.ts Token Provider}\n   * interface.\n   * @param {ServiceBusClientOptions} options - Options to control ways to interact with the\n   * Service Bus Namespace.\n   * @returns {ServiceBusClient}\n   */\n  static createFromTokenProvider(\n    host: string,\n    tokenProvider: TokenProvider,\n    options?: ServiceBusClientOptions\n  ): ServiceBusClient {\n    host = String(host);\n    if (!tokenProvider) {\n      throw new TypeError('Missing parameter \"tokenProvider\"');\n    }\n    if (!host.endsWith(\"/\")) host += \"/\";\n    const connectionString =\n      `Endpoint=sb://${host};SharedAccessKeyName=defaultKeyName;` +\n      `SharedAccessKey=defaultKeyValue`;\n    const config = ConnectionConfig.create(connectionString);\n\n    config.webSocket = options && options.webSocket;\n    config.webSocketEndpointPath = \"$servicebus/websocket\";\n    config.webSocketConstructorOptions = options && options.webSocketConstructorOptions;\n\n    ConnectionConfig.validate(config);\n    return new ServiceBusClient(config, tokenProvider, options);\n  }\n\n  /**\n   * Creates a ServiceBusClient for the Service Bus Namespace represented by the given host using\n   * the TokenCredentials generated using the `@azure/ms-rest-nodeauth` library.\n   * @param {string} host - Fully qualified domain name for ServiceBus.\n   * Most likely, {yournamespace}.servicebus.windows.net\n   * @param {ServiceClientCredentials} credentials - The Token credentials generated by using the\n   * `@azure/ms-rest-nodeauth` library. It can be one of the following:\n   *  - ApplicationTokenCredentials\n   *  - UserTokenCredentials\n   *  - DeviceTokenCredentials\n   *  - MSITokenCredentials\n   * Token audience (or resource in case of MSI based credentials) to use when creating the credentials is https://servicebus.azure.net/\n   * @param {ServiceBusClientOptions} options - Options to control ways to interact with the\n   * Service Bus Namespace.\n   * @returns {ServiceBusClient}\n   * @throws Error if `createFromAadTokenCredentials` is accessed in browser context, as AAD support is not present in browser.\n   */\n  static createFromAadTokenCredentials(\n    host: string,\n    credentials:\n      | ApplicationTokenCredentials\n      | UserTokenCredentials\n      | DeviceTokenCredentials\n      | MSITokenCredentials,\n    options?: ServiceBusClientOptions\n  ): ServiceBusClient {\n    if (!isNode) {\n      throw new Error(\n        \"`createFromAadTokenCredentials` cannot be used to create ServiceBusClient as AAD support is not present in browser.\"\n      );\n    }\n    host = String(host);\n    const tokenProvider = new AadTokenProvider(credentials);\n    return ServiceBusClient.createFromTokenProvider(host, tokenProvider, options);\n  }\n}\n"],"names":["require$$0","process","debugModule","base64","toStr","hasToStringTag","isArgumentsObject","isBuffer","require$$1","require$$2","TypeError","util","Buffer","types","by_descriptor","setup","debug","log","frames","Transport","message","EventEmitter","link","terminus","EndpointState","attach","aliases","remote_property_shortcut","session","Session","amqp_types","Connection","require$$3","eventContext_1","events_1","entity_1","rhea_1","operationTimeoutError_1","utils_1","link_1","receiver_1","sender_1","connection_1","constants_1","container_1","session_1","AsyncLock","isAmqpError","error","retry","log.retry","log.error","Constants.defaultOperationTimeoutInSeconds","generate_uuid","Constants.statusCode","Constants.statusDescription","Constants.errorCondition","ReceiverEvents","log.reqres","Constants.cbsEndpoint","log.transformer","TokenType","this","jssha","Constants.cbsReplyTo","Constants.negotiateCbsKey","log.cbs","SenderEvents","Constants.operationPutToken","log.msgHeader","msgHeader","log.msgProperties","msgProperties","Constants.maxUserAgentLength","Constants.TLS","os.arch","os.type","os.release","Constants.defaultConnectionIdleTimeoutInMs","Constants.establishConnection","Constants.negotiateClaim","log.connectionCtxt","Constants.connectionReconnectDelay","ConnectionEvents","log.utils","Long","ReceiveMode","Constants.maxSessionIdLength","Constants.maxMessageIdLength","Constants.maxDurationValue","Constants.maxAbsoluteExpiryTime","Constants.maxPartitionKeyLength","Constants.partitionKey","Constants.viaPartitionKey","Constants.scheduledEnqueueTime","log.message","Constants.deadLetterSource","Constants.enqueueSequenceNumber","Constants.sequenceNumber","Constants.enqueuedTime","Constants.lockedUntil","uuid_to_string","Constants.deadLetterName","log.link","log.sender","Constants.defaultRetryAttempts","Constants.defaultDelayBetweenOperationRetriesInSeconds","Constants.defaultConnectionRetryAttempts","RheaMessageUtil","messageProperties","Sender","log.receiver","SessionEvents","log.batching","log.messageSession","Constants.sessionFilterName","Receiver","Constants.management","Constants.managementRequestKey","log.mgmt","fromSequenceNumber","Constants.fromSequenceNumber","Constants.messageCount","Constants.sessionIdMapKey","Constants.operations","associatedLinkName","Constants.associatedLinkName","Constants.trackingId","Constants.lockTokens","string_to_uuid","sequenceNumbers","Constants.sequenceNumbers","receiverSettleMode","Constants.receiverSettleMode","dispositionStatus","Constants.dispositionStatus","Constants.deadLetterDescription","Constants.deadLetterReason","Constants.propertiesToModify","Constants.descriptorCodes","log.map","log.sessionManager","log.entityCtxt","log.ns"],"mappings":"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ACpf,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,MAAM,KAAK,CAAC,0CAA0C,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAA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AC,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;IACtfrf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;IACxf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,OAAM,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,OAAM,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,OAAM,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE;IACtf,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACrf,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;IAC5f,CAAC,UAAU,CAAC,SAAS,CAAC,SAAS,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,KAAK,SAAS,CAAC,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;IACpf,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,MAAM,QAAQ,MAAM,KAAK,CAAC,qBAAqB,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,MAAM,KAAK,CAAC,2BAA2B,CAAC,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACpff,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,SAAS,GAAG,CAAC,EAAE,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,SAAS,GAAG,CAAC,EAAE,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,MAAM,KAAK,CAAC,0CAA0C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACtfpfrf,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU;IACvf,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,UAAU,CAAC;IAC/f,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC;IACpf,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IAC/f,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,IAAI,CA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"}