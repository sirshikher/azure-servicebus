/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * The parameters supplied to the create or update connection operation.
 *
 */
class ConnectionCreateOrUpdateParameters {
  /**
   * Create a ConnectionCreateOrUpdateParameters.
   * @member {string} name Gets or sets the name of the connection.
   * @member {string} [description] Gets or sets the description of the
   * connection.
   * @member {object} connectionType Gets or sets the connectionType of the
   * connection.
   * @member {string} [connectionType.name] Gets or sets the name of the
   * connection type.
   * @member {object} [fieldDefinitionValues] Gets or sets the field definition
   * properties of the connection.
   */
  constructor() {
  }

  /**
   * Defines the metadata of ConnectionCreateOrUpdateParameters
   *
   * @returns {object} metadata of ConnectionCreateOrUpdateParameters
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'ConnectionCreateOrUpdateParameters',
      type: {
        name: 'Composite',
        className: 'ConnectionCreateOrUpdateParameters',
        modelProperties: {
          name: {
            required: true,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          description: {
            required: false,
            serializedName: 'properties.description',
            type: {
              name: 'String'
            }
          },
          connectionType: {
            required: true,
            serializedName: 'properties.connectionType',
            type: {
              name: 'Composite',
              className: 'ConnectionTypeAssociationProperty'
            }
          },
          fieldDefinitionValues: {
            required: false,
            serializedName: 'properties.fieldDefinitionValues',
            type: {
              name: 'Dictionary',
              value: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          }
        }
      }
    };
  }
}

module.exports = ConnectionCreateOrUpdateParameters;
