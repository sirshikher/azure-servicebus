/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Defines the graph of modules making up the machine learning solution.
 *
 */
class GraphPackage {
  /**
   * Create a GraphPackage.
   * @member {object} [nodes] The set of nodes making up the graph, provided as
   * a nodeId to GraphNode map
   * @member {array} [edges] The list of edges making up the graph.
   * @member {object} [graphParameters] The collection of global parameters for
   * the graph, given as a global parameter name to GraphParameter map. Each
   * parameter here has a 1:1 match with the global parameters values map
   * declared at the WebServiceProperties level.
   */
  constructor() {
  }

  /**
   * Defines the metadata of GraphPackage
   *
   * @returns {object} metadata of GraphPackage
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'GraphPackage',
      type: {
        name: 'Composite',
        className: 'GraphPackage',
        modelProperties: {
          nodes: {
            required: false,
            serializedName: 'nodes',
            type: {
              name: 'Dictionary',
              value: {
                  required: false,
                  serializedName: 'GraphNodeElementType',
                  type: {
                    name: 'Composite',
                    className: 'GraphNode'
                  }
              }
            }
          },
          edges: {
            required: false,
            serializedName: 'edges',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'GraphEdgeElementType',
                  type: {
                    name: 'Composite',
                    className: 'GraphEdge'
                  }
              }
            }
          },
          graphParameters: {
            required: false,
            serializedName: 'graphParameters',
            type: {
              name: 'Dictionary',
              value: {
                  required: false,
                  serializedName: 'GraphParameterElementType',
                  type: {
                    name: 'Composite',
                    className: 'GraphParameter'
                  }
              }
            }
          }
        }
      }
    };
  }
}

module.exports = GraphPackage;
