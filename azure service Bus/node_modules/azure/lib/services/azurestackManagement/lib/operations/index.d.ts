/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
*/

import { ServiceClientOptions, RequestOptions, ServiceCallback, HttpOperationResponse } from 'ms-rest';
import * as models from '../models';


/**
 * @class
 * Operations
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the AzureStackManagementClient.
 */
export interface Operations {


    /**
     * Returns the list of supported REST operations.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<OperationList>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listWithHttpOperationResponse(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.OperationList>>;

    /**
     * Returns the list of supported REST operations.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {OperationList} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {OperationList} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link OperationList} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    list(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.OperationList>;
    list(callback: ServiceCallback<models.OperationList>): void;
    list(options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.OperationList>): void;


    /**
     * Returns the list of supported REST operations.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<OperationList>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.OperationList>>;

    /**
     * Returns the list of supported REST operations.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {OperationList} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {OperationList} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link OperationList} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.OperationList>;
    listNext(nextPageLink: string, callback: ServiceCallback<models.OperationList>): void;
    listNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.OperationList>): void;
}

/**
 * @class
 * Products
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the AzureStackManagementClient.
 */
export interface Products {


    /**
     * Returns a list of products.
     *
     * @param {string} resourceGroup Name of the resource group.
     *
     * @param {string} registrationName Name of the Azure Stack registration.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ProductList>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listWithHttpOperationResponse(resourceGroup: string, registrationName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ProductList>>;

    /**
     * Returns a list of products.
     *
     * @param {string} resourceGroup Name of the resource group.
     *
     * @param {string} registrationName Name of the Azure Stack registration.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ProductList} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ProductList} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ProductList} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    list(resourceGroup: string, registrationName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ProductList>;
    list(resourceGroup: string, registrationName: string, callback: ServiceCallback<models.ProductList>): void;
    list(resourceGroup: string, registrationName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ProductList>): void;


    /**
     * Returns the specified product.
     *
     * @param {string} resourceGroup Name of the resource group.
     *
     * @param {string} registrationName Name of the Azure Stack registration.
     *
     * @param {string} productName Name of the product.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Product>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(resourceGroup: string, registrationName: string, productName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Product>>;

    /**
     * Returns the specified product.
     *
     * @param {string} resourceGroup Name of the resource group.
     *
     * @param {string} registrationName Name of the Azure Stack registration.
     *
     * @param {string} productName Name of the product.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Product} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Product} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link Product} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(resourceGroup: string, registrationName: string, productName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Product>;
    get(resourceGroup: string, registrationName: string, productName: string, callback: ServiceCallback<models.Product>): void;
    get(resourceGroup: string, registrationName: string, productName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Product>): void;


    /**
     * Returns the extended properties of a product.
     *
     * @param {string} resourceGroup Name of the resource group.
     *
     * @param {string} registrationName Name of the Azure Stack registration.
     *
     * @param {string} productName Name of the product.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ExtendedProduct>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listDetailsWithHttpOperationResponse(resourceGroup: string, registrationName: string, productName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ExtendedProduct>>;

    /**
     * Returns the extended properties of a product.
     *
     * @param {string} resourceGroup Name of the resource group.
     *
     * @param {string} registrationName Name of the Azure Stack registration.
     *
     * @param {string} productName Name of the product.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ExtendedProduct} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ExtendedProduct} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ExtendedProduct} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listDetails(resourceGroup: string, registrationName: string, productName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ExtendedProduct>;
    listDetails(resourceGroup: string, registrationName: string, productName: string, callback: ServiceCallback<models.ExtendedProduct>): void;
    listDetails(resourceGroup: string, registrationName: string, productName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ExtendedProduct>): void;


    /**
     * Returns a list of products.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ProductList>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ProductList>>;

    /**
     * Returns a list of products.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ProductList} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ProductList} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ProductList} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ProductList>;
    listNext(nextPageLink: string, callback: ServiceCallback<models.ProductList>): void;
    listNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ProductList>): void;
}

/**
 * @class
 * Registrations
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the AzureStackManagementClient.
 */
export interface Registrations {


    /**
     * Returns a list of all registrations.
     *
     * @param {string} resourceGroup Name of the resource group.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<RegistrationList>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listWithHttpOperationResponse(resourceGroup: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.RegistrationList>>;

    /**
     * Returns a list of all registrations.
     *
     * @param {string} resourceGroup Name of the resource group.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {RegistrationList} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {RegistrationList} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link RegistrationList} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    list(resourceGroup: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.RegistrationList>;
    list(resourceGroup: string, callback: ServiceCallback<models.RegistrationList>): void;
    list(resourceGroup: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.RegistrationList>): void;


    /**
     * Returns the properties of an Azure Stack registration.
     *
     * @param {string} resourceGroup Name of the resource group.
     *
     * @param {string} registrationName Name of the Azure Stack registration.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Registration>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(resourceGroup: string, registrationName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Registration>>;

    /**
     * Returns the properties of an Azure Stack registration.
     *
     * @param {string} resourceGroup Name of the resource group.
     *
     * @param {string} registrationName Name of the Azure Stack registration.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Registration} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Registration} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link Registration} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(resourceGroup: string, registrationName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Registration>;
    get(resourceGroup: string, registrationName: string, callback: ServiceCallback<models.Registration>): void;
    get(resourceGroup: string, registrationName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Registration>): void;


    /**
     * Delete the requested Azure Stack registration.
     *
     * @param {string} resourceGroup Name of the resource group.
     *
     * @param {string} registrationName Name of the Azure Stack registration.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    deleteMethodWithHttpOperationResponse(resourceGroup: string, registrationName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Delete the requested Azure Stack registration.
     *
     * @param {string} resourceGroup Name of the resource group.
     *
     * @param {string} registrationName Name of the Azure Stack registration.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    deleteMethod(resourceGroup: string, registrationName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    deleteMethod(resourceGroup: string, registrationName: string, callback: ServiceCallback<void>): void;
    deleteMethod(resourceGroup: string, registrationName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Create or update an Azure Stack registration.
     *
     * @param {string} resourceGroup Name of the resource group.
     *
     * @param {string} registrationName Name of the Azure Stack registration.
     *
     * @param {object} token Registration token
     *
     * @param {string} token.registrationToken The token identifying registered
     * Azure Stack
     *
     * @param {object} [token.tags] Custom tags for the resource.
     *
     * @param {string} [token.etag] The entity tag used for optimistic concurency
     * when modifying the resource.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Registration>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    createOrUpdateWithHttpOperationResponse(resourceGroup: string, registrationName: string, token: models.RegistrationParameter, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Registration>>;

    /**
     * Create or update an Azure Stack registration.
     *
     * @param {string} resourceGroup Name of the resource group.
     *
     * @param {string} registrationName Name of the Azure Stack registration.
     *
     * @param {object} token Registration token
     *
     * @param {string} token.registrationToken The token identifying registered
     * Azure Stack
     *
     * @param {object} [token.tags] Custom tags for the resource.
     *
     * @param {string} [token.etag] The entity tag used for optimistic concurency
     * when modifying the resource.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Registration} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Registration} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link Registration} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    createOrUpdate(resourceGroup: string, registrationName: string, token: models.RegistrationParameter, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Registration>;
    createOrUpdate(resourceGroup: string, registrationName: string, token: models.RegistrationParameter, callback: ServiceCallback<models.Registration>): void;
    createOrUpdate(resourceGroup: string, registrationName: string, token: models.RegistrationParameter, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Registration>): void;


    /**
     * Returns Azure Stack Activation Key.
     *
     * @param {string} resourceGroup Name of the resource group.
     *
     * @param {string} registrationName Name of the Azure Stack registration.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ActivationKeyResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getActivationKeyWithHttpOperationResponse(resourceGroup: string, registrationName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ActivationKeyResult>>;

    /**
     * Returns Azure Stack Activation Key.
     *
     * @param {string} resourceGroup Name of the resource group.
     *
     * @param {string} registrationName Name of the Azure Stack registration.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ActivationKeyResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ActivationKeyResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ActivationKeyResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    getActivationKey(resourceGroup: string, registrationName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ActivationKeyResult>;
    getActivationKey(resourceGroup: string, registrationName: string, callback: ServiceCallback<models.ActivationKeyResult>): void;
    getActivationKey(resourceGroup: string, registrationName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ActivationKeyResult>): void;


    /**
     * Returns a list of all registrations.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<RegistrationList>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.RegistrationList>>;

    /**
     * Returns a list of all registrations.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {RegistrationList} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {RegistrationList} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link RegistrationList} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.RegistrationList>;
    listNext(nextPageLink: string, callback: ServiceCallback<models.RegistrationList>): void;
    listNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.RegistrationList>): void;
}

/**
 * @class
 * CustomerSubscriptions
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the AzureStackManagementClient.
 */
export interface CustomerSubscriptions {


    /**
     * Returns a list of products.
     *
     * @param {string} resourceGroup Name of the resource group.
     *
     * @param {string} registrationName Name of the Azure Stack registration.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<CustomerSubscriptionList>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listWithHttpOperationResponse(resourceGroup: string, registrationName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.CustomerSubscriptionList>>;

    /**
     * Returns a list of products.
     *
     * @param {string} resourceGroup Name of the resource group.
     *
     * @param {string} registrationName Name of the Azure Stack registration.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {CustomerSubscriptionList} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {CustomerSubscriptionList} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link CustomerSubscriptionList} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    list(resourceGroup: string, registrationName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.CustomerSubscriptionList>;
    list(resourceGroup: string, registrationName: string, callback: ServiceCallback<models.CustomerSubscriptionList>): void;
    list(resourceGroup: string, registrationName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.CustomerSubscriptionList>): void;


    /**
     * Returns the specified product.
     *
     * @param {string} resourceGroup Name of the resource group.
     *
     * @param {string} registrationName Name of the Azure Stack registration.
     *
     * @param {string} customerSubscriptionName Name of the product.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<CustomerSubscription>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(resourceGroup: string, registrationName: string, customerSubscriptionName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.CustomerSubscription>>;

    /**
     * Returns the specified product.
     *
     * @param {string} resourceGroup Name of the resource group.
     *
     * @param {string} registrationName Name of the Azure Stack registration.
     *
     * @param {string} customerSubscriptionName Name of the product.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {CustomerSubscription} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {CustomerSubscription} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link CustomerSubscription} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(resourceGroup: string, registrationName: string, customerSubscriptionName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.CustomerSubscription>;
    get(resourceGroup: string, registrationName: string, customerSubscriptionName: string, callback: ServiceCallback<models.CustomerSubscription>): void;
    get(resourceGroup: string, registrationName: string, customerSubscriptionName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.CustomerSubscription>): void;


    /**
     * Deletes a customer subscription under a registration.
     *
     * @param {string} resourceGroup Name of the resource group.
     *
     * @param {string} registrationName Name of the Azure Stack registration.
     *
     * @param {string} customerSubscriptionName Name of the product.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    deleteMethodWithHttpOperationResponse(resourceGroup: string, registrationName: string, customerSubscriptionName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Deletes a customer subscription under a registration.
     *
     * @param {string} resourceGroup Name of the resource group.
     *
     * @param {string} registrationName Name of the Azure Stack registration.
     *
     * @param {string} customerSubscriptionName Name of the product.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    deleteMethod(resourceGroup: string, registrationName: string, customerSubscriptionName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    deleteMethod(resourceGroup: string, registrationName: string, customerSubscriptionName: string, callback: ServiceCallback<void>): void;
    deleteMethod(resourceGroup: string, registrationName: string, customerSubscriptionName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Creates a new customer subscription under a registration.
     *
     * @param {string} resourceGroup Name of the resource group.
     *
     * @param {string} registrationName Name of the Azure Stack registration.
     *
     * @param {string} customerSubscriptionName Name of the product.
     *
     * @param {object} customerCreationParameters Parameters use to create a
     * customer subscription.
     *
     * @param {string} [customerCreationParameters.tenantId] Tenant Id.
     *
     * @param {object} [customerCreationParameters.tags] Custom tags for the
     * resource.
     *
     * @param {string} [customerCreationParameters.etag] The entity tag used for
     * optimistic concurency when modifying the resource.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<CustomerSubscription>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    createWithHttpOperationResponse(resourceGroup: string, registrationName: string, customerSubscriptionName: string, customerCreationParameters: models.CustomerSubscription, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.CustomerSubscription>>;

    /**
     * Creates a new customer subscription under a registration.
     *
     * @param {string} resourceGroup Name of the resource group.
     *
     * @param {string} registrationName Name of the Azure Stack registration.
     *
     * @param {string} customerSubscriptionName Name of the product.
     *
     * @param {object} customerCreationParameters Parameters use to create a
     * customer subscription.
     *
     * @param {string} [customerCreationParameters.tenantId] Tenant Id.
     *
     * @param {object} [customerCreationParameters.tags] Custom tags for the
     * resource.
     *
     * @param {string} [customerCreationParameters.etag] The entity tag used for
     * optimistic concurency when modifying the resource.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {CustomerSubscription} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {CustomerSubscription} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link CustomerSubscription} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    create(resourceGroup: string, registrationName: string, customerSubscriptionName: string, customerCreationParameters: models.CustomerSubscription, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.CustomerSubscription>;
    create(resourceGroup: string, registrationName: string, customerSubscriptionName: string, customerCreationParameters: models.CustomerSubscription, callback: ServiceCallback<models.CustomerSubscription>): void;
    create(resourceGroup: string, registrationName: string, customerSubscriptionName: string, customerCreationParameters: models.CustomerSubscription, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.CustomerSubscription>): void;


    /**
     * Returns a list of products.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<CustomerSubscriptionList>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.CustomerSubscriptionList>>;

    /**
     * Returns a list of products.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {CustomerSubscriptionList} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {CustomerSubscriptionList} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link CustomerSubscriptionList} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.CustomerSubscriptionList>;
    listNext(nextPageLink: string, callback: ServiceCallback<models.CustomerSubscriptionList>): void;
    listNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.CustomerSubscriptionList>): void;
}
