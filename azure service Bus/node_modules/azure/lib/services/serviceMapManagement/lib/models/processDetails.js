/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Describes process metadata.
 *
 */
class ProcessDetails {
  /**
   * Create a ProcessDetails.
   * @member {string} [persistentKey] A unique indentifier for a process,
   * generally resilient to process restart, computed by Service Map.
   * @member {number} [poolId] Represents the identity of the process pool
   * assigned to the process by Dependency Agent.
   * @member {number} [firstPid] The Operating System Process Idendifier (PID)
   * of the first process in this process pool.
   * @member {string} [description] Process description.
   * @member {string} [companyName] Name of company that created the process
   * executable.
   * @member {string} [internalName] Internal process name.
   * @member {string} [productName] Product name.
   * @member {string} [productVersion] Product version.
   * @member {string} [fileVersion] File version.
   * @member {string} [commandLine] Process command line.
   * @member {string} [executablePath] Process executable path.
   * @member {string} [workingDirectory] Process workingDirectory.
   * @member {array} [services] Collection of services hosted by this Process
   * (Windows only).
   * @member {string} [zoneName] Process zone name (Linux only).
   */
  constructor() {
  }

  /**
   * Defines the metadata of ProcessDetails
   *
   * @returns {object} metadata of ProcessDetails
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'ProcessDetails',
      type: {
        name: 'Composite',
        className: 'ProcessDetails',
        modelProperties: {
          persistentKey: {
            required: false,
            serializedName: 'persistentKey',
            type: {
              name: 'String'
            }
          },
          poolId: {
            required: false,
            serializedName: 'poolId',
            type: {
              name: 'Number'
            }
          },
          firstPid: {
            required: false,
            serializedName: 'firstPid',
            type: {
              name: 'Number'
            }
          },
          description: {
            required: false,
            serializedName: 'description',
            type: {
              name: 'String'
            }
          },
          companyName: {
            required: false,
            serializedName: 'companyName',
            type: {
              name: 'String'
            }
          },
          internalName: {
            required: false,
            serializedName: 'internalName',
            type: {
              name: 'String'
            }
          },
          productName: {
            required: false,
            serializedName: 'productName',
            type: {
              name: 'String'
            }
          },
          productVersion: {
            required: false,
            serializedName: 'productVersion',
            type: {
              name: 'String'
            }
          },
          fileVersion: {
            required: false,
            serializedName: 'fileVersion',
            type: {
              name: 'String'
            }
          },
          commandLine: {
            required: false,
            serializedName: 'commandLine',
            type: {
              name: 'String'
            }
          },
          executablePath: {
            required: false,
            serializedName: 'executablePath',
            type: {
              name: 'String'
            }
          },
          workingDirectory: {
            required: false,
            serializedName: 'workingDirectory',
            type: {
              name: 'String'
            }
          },
          services: {
            required: false,
            serializedName: 'services',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'ProcessHostedServiceElementType',
                  type: {
                    name: 'Composite',
                    className: 'ProcessHostedService'
                  }
              }
            }
          },
          zoneName: {
            required: false,
            serializedName: 'zoneName',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = ProcessDetails;
