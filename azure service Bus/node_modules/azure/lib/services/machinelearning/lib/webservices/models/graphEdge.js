/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Defines an edge within the web service's graph.
 *
 */
class GraphEdge {
  /**
   * Create a GraphEdge.
   * @member {string} [sourceNodeId] The source graph node's identifier.
   * @member {string} [sourcePortId] The identifier of the source node's port
   * that the edge connects from.
   * @member {string} [targetNodeId] The destination graph node's identifier.
   * @member {string} [targetPortId] The identifier of the destination node's
   * port that the edge connects into.
   */
  constructor() {
  }

  /**
   * Defines the metadata of GraphEdge
   *
   * @returns {object} metadata of GraphEdge
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'GraphEdge',
      type: {
        name: 'Composite',
        className: 'GraphEdge',
        modelProperties: {
          sourceNodeId: {
            required: false,
            serializedName: 'sourceNodeId',
            type: {
              name: 'String'
            }
          },
          sourcePortId: {
            required: false,
            serializedName: 'sourcePortId',
            type: {
              name: 'String'
            }
          },
          targetNodeId: {
            required: false,
            serializedName: 'targetNodeId',
            type: {
              name: 'String'
            }
          },
          targetPortId: {
            required: false,
            serializedName: 'targetPortId',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = GraphEdge;
