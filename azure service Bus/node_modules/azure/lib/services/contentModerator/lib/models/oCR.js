/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Contains the text found in image for the language specified.
 *
 */
class OCR {
  /**
   * Create a OCR.
   * @member {object} [status] The evaluate status
   * @member {number} [status.code] Status code.
   * @member {string} [status.description] Status description.
   * @member {string} [status.exception] Exception status.
   * @member {array} [metadata] Array of KeyValue.
   * @member {string} [trackingId] The tracking id.
   * @member {string} [cacheId] The cache id.
   * @member {string} [language] The ISO 639-3 code.
   * @member {string} [text] The found text.
   * @member {array} [candidates] The list of candidate text.
   */
  constructor() {
  }

  /**
   * Defines the metadata of OCR
   *
   * @returns {object} metadata of OCR
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'OCR',
      type: {
        name: 'Composite',
        className: 'OCR',
        modelProperties: {
          status: {
            required: false,
            serializedName: 'Status',
            type: {
              name: 'Composite',
              className: 'Status'
            }
          },
          metadata: {
            required: false,
            serializedName: 'Metadata',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'KeyValuePairElementType',
                  type: {
                    name: 'Composite',
                    className: 'KeyValuePair'
                  }
              }
            }
          },
          trackingId: {
            required: false,
            serializedName: 'TrackingId',
            type: {
              name: 'String'
            }
          },
          cacheId: {
            required: false,
            serializedName: 'CacheId',
            type: {
              name: 'String'
            }
          },
          language: {
            required: false,
            serializedName: 'Language',
            type: {
              name: 'String'
            }
          },
          text: {
            required: false,
            serializedName: 'Text',
            type: {
              name: 'String'
            }
          },
          candidates: {
            required: false,
            serializedName: 'Candidates',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'CandidateElementType',
                  type: {
                    name: 'Composite',
                    className: 'Candidate'
                  }
              }
            }
          }
        }
      }
    };
  }
}

module.exports = OCR;
