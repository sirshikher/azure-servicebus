/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * The response for a Screen text request.
 *
 */
class Screen {
  /**
   * Create a Screen.
   * @member {string} [originalText] The original text.
   * @member {string} [normalizedText] The normalized text.
   * @member {string} [autoCorrectedText] The autocorrected text
   * @member {array} [misrepresentation] The misrepresentation text.
   * @member {object} [classification] The classification details of the text.
   * @member {object} [classification.category1] The category1 score details of
   * the text. <a href="https://aka.ms/textClassifyCategories">Click here</a>
   * for more details on category classification.
   * @member {number} [classification.category1.score] The category1 score.
   * @member {object} [classification.category2] The category2 score details of
   * the text. <a href="https://aka.ms/textClassifyCategories">Click here</a>
   * for more details on category classification.
   * @member {number} [classification.category2.score] The category2 score.
   * @member {object} [classification.category3] The category3 score details of
   * the text. <a href="https://aka.ms/textClassifyCategories">Click here</a>
   * for more details on category classification.
   * @member {number} [classification.category3.score] The category3 score.
   * @member {boolean} [classification.reviewRecommended] The review
   * recommended flag.
   * @member {object} [status] The evaluate status.
   * @member {number} [status.code] Status code.
   * @member {string} [status.description] Status description.
   * @member {string} [status.exception] Exception status.
   * @member {object} [pII] Personal Identifier Information details.
   * @member {array} [pII.email]
   * @member {array} [pII.iPA]
   * @member {array} [pII.phone]
   * @member {array} [pII.address]
   * @member {string} [language] Language of the input text content.
   * @member {array} [terms]
   * @member {string} [trackingId] Unique Content Moderator transaction Id.
   */
  constructor() {
  }

  /**
   * Defines the metadata of Screen
   *
   * @returns {object} metadata of Screen
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'Screen',
      type: {
        name: 'Composite',
        className: 'Screen',
        modelProperties: {
          originalText: {
            required: false,
            serializedName: 'OriginalText',
            type: {
              name: 'String'
            }
          },
          normalizedText: {
            required: false,
            serializedName: 'NormalizedText',
            type: {
              name: 'String'
            }
          },
          autoCorrectedText: {
            required: false,
            serializedName: 'AutoCorrectedText',
            type: {
              name: 'String'
            }
          },
          misrepresentation: {
            required: false,
            serializedName: 'Misrepresentation',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          classification: {
            required: false,
            serializedName: 'Classification',
            type: {
              name: 'Composite',
              className: 'Classification'
            }
          },
          status: {
            required: false,
            serializedName: 'Status',
            type: {
              name: 'Composite',
              className: 'Status'
            }
          },
          pII: {
            required: false,
            serializedName: 'PII',
            type: {
              name: 'Composite',
              className: 'PII'
            }
          },
          language: {
            required: false,
            serializedName: 'Language',
            type: {
              name: 'String'
            }
          },
          terms: {
            required: false,
            serializedName: 'Terms',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'DetectedTermsElementType',
                  type: {
                    name: 'Composite',
                    className: 'DetectedTerms'
                  }
              }
            }
          },
          trackingId: {
            required: false,
            serializedName: 'TrackingId',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = Screen;
