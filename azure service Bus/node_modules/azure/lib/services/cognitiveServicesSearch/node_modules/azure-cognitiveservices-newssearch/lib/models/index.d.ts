/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as moment from "moment";


/**
 * @class
 * Initializes a new instance of the ResponseBase class.
 * @constructor
 * Response base
 *
 * @member {string} _type Polymorphic Discriminator
 */
export interface ResponseBase {
  _type: string;
}

/**
 * @class
 * Initializes a new instance of the Identifiable class.
 * @constructor
 * Defines the identity of a resource.
 *
 * @member {string} [id] A String identifier.
 */
export interface Identifiable extends ResponseBase {
  readonly id?: string;
}

/**
 * @class
 * Initializes a new instance of the Response class.
 * @constructor
 * Defines a response. All schemas that could be returned at the root of a
 * response should inherit from this
 *
 * @member {string} [webSearchUrl] The URL To Bing's search result for this
 * item.
 */
export interface Response extends Identifiable {
  readonly webSearchUrl?: string;
}

/**
 * @class
 * Initializes a new instance of the Thing class.
 * @constructor
 * Defines a thing.
 *
 * @member {string} [name] The name of the thing represented by this object.
 * @member {string} [url] The URL to get more information about the thing
 * represented by this object.
 * @member {object} [image] An image of the item.
 * @member {object} [image.thumbnail] The URL to a thumbnail of the image
 * @member {string} [description] A short description of the item.
 * @member {string} [alternateName] An alias for the item
 * @member {string} [bingId] An ID that uniquely identifies this item.
 */
export interface Thing extends Response {
  readonly name?: string;
  readonly url?: string;
  readonly image?: ImageObject;
  readonly description?: string;
  readonly alternateName?: string;
  readonly bingId?: string;
}

/**
 * @class
 * Initializes a new instance of the CreativeWork class.
 * @constructor
 * The most generic kind of creative work, including books, movies,
 * photographs, software programs, etc.
 *
 * @member {string} [thumbnailUrl] The URL to a thumbnail of the item.
 * @member {array} [provider] The source of the creative work.
 * @member {string} [datePublished] The date on which the CreativeWork was
 * published.
 * @member {object} [video] A video of the item.
 * @member {string} [video.motionThumbnailUrl]
 * @member {string} [video.motionThumbnailId]
 * @member {string} [video.embedHtml]
 * @member {boolean} [video.allowHttpsEmbed]
 * @member {number} [video.viewCount]
 * @member {object} [video.thumbnail]
 * @member {object} [video.thumbnail.thumbnail] The URL to a thumbnail of the
 * image
 * @member {string} [video.videoId]
 * @member {boolean} [video.allowMobileEmbed]
 * @member {boolean} [video.isSuperfresh]
 */
export interface CreativeWork extends Thing {
  readonly thumbnailUrl?: string;
  readonly provider?: Thing[];
  readonly datePublished?: string;
  readonly video?: VideoObject;
}

/**
 * @class
 * Initializes a new instance of the Article class.
 * @constructor
 * @member {number} [wordCount] The number of words in the text of the Article.
 */
export interface Article extends CreativeWork {
  readonly wordCount?: number;
}

/**
 * @class
 * Initializes a new instance of the NewsArticle class.
 * @constructor
 * Defines a news article.
 *
 * @member {string} [category] The news category that the article belongs to.
 * For example, Sports. If the news category cannot be determined, the article
 * does not include this field.
 * @member {boolean} [headline] A Boolean value that indicates whether the news
 * article is a headline. If true, the article is a headline. The article
 * includes this field only for news categories requests that do not specify
 * the category query parameter.
 * @member {array} [clusteredArticles] A list of related news articles.
 */
export interface NewsArticle extends Article {
  readonly category?: string;
  readonly headline?: boolean;
  readonly clusteredArticles?: NewsArticle[];
}

/**
 * @class
 * Initializes a new instance of the Answer class.
 * @constructor
 * Defines an answer.
 *
 * @member {array} [followUpQueries]
 */
export interface Answer extends Response {
  readonly followUpQueries?: Query[];
}

/**
 * @class
 * Initializes a new instance of the SearchResultsAnswer class.
 * @constructor
 * Defines a search result answer.
 *
 * @member {number} [totalEstimatedMatches] The estimated number of webpages
 * that are relevant to the query. Use this number along with the count and
 * offset query parameters to page the results.
 */
export interface SearchResultsAnswer extends Answer {
  readonly totalEstimatedMatches?: number;
}

/**
 * @class
 * Initializes a new instance of the News class.
 * @constructor
 * Defines a news answer.
 *
 * @member {array} value An array of NewsArticle objects that contain
 * information about news articles that are relevant to the query. If there are
 * no results to return for the request, the array is empty.
 * @member {string} [location] Location of local news
 */
export interface News extends SearchResultsAnswer {
  value: NewsArticle[];
  readonly location?: string;
}

/**
 * @class
 * Initializes a new instance of the MediaObject class.
 * @constructor
 * Defines a media object.
 *
 * @member {string} [contentUrl] Original URL to retrieve the source (file) for
 * the media object (e.g the source URL for the image).
 * @member {number} [width] The width of the source media object, in pixels.
 * @member {number} [height] The height of the source media object, in pixels.
 */
export interface MediaObject extends CreativeWork {
  readonly contentUrl?: string;
  readonly width?: number;
  readonly height?: number;
}

/**
 * @class
 * Initializes a new instance of the ImageObject class.
 * @constructor
 * Defines an image
 *
 * @member {object} [thumbnail] The URL to a thumbnail of the image
 */
export interface ImageObject extends MediaObject {
  readonly thumbnail?: ImageObject;
}

/**
 * @class
 * Initializes a new instance of the Query class.
 * @constructor
 * Defines a search query.
 *
 * @member {string} text The query string. Use this string as the query term in
 * a new search request.
 * @member {string} [displayText] The display version of the query term. This
 * version of the query term may contain special characters that highlight the
 * search term found in the query string. The string contains the highlighting
 * characters only if the query enabled hit highlighting
 * @member {string} [webSearchUrl] The URL that takes the user to the Bing
 * search results page for the query.Only related search results include this
 * field.
 * @member {string} [searchLink] The URL that you use to get the results of the
 * related search. Before using the URL, you must append query parameters as
 * appropriate and include the Ocp-Apim-Subscription-Key header. Use this URL
 * if you're displaying the results in your own user interface. Otherwise, use
 * the webSearchUrl URL.
 * @member {object} [thumbnail] The URL to a thumbnail of a related image.
 * @member {object} [thumbnail.thumbnail] The URL to a thumbnail of the image
 */
export interface Query {
  text: string;
  readonly displayText?: string;
  readonly webSearchUrl?: string;
  readonly searchLink?: string;
  readonly thumbnail?: ImageObject;
}

/**
 * @class
 * Initializes a new instance of the NewsTopic class.
 * @constructor
 * @member {boolean} [isBreakingNews] A Boolean value that indicates whether
 * the topic is considered breaking news. If the topic is considered breaking
 * news, the value is true.
 * @member {object} [query] A search query term that returns this trending
 * topic.
 * @member {string} [query.text] The query string. Use this string as the query
 * term in a new search request.
 * @member {string} [query.displayText] The display version of the query term.
 * This version of the query term may contain special characters that highlight
 * the search term found in the query string. The string contains the
 * highlighting characters only if the query enabled hit highlighting
 * @member {string} [query.webSearchUrl] The URL that takes the user to the
 * Bing search results page for the query.Only related search results include
 * this field.
 * @member {string} [query.searchLink] The URL that you use to get the results
 * of the related search. Before using the URL, you must append query
 * parameters as appropriate and include the Ocp-Apim-Subscription-Key header.
 * Use this URL if you're displaying the results in your own user interface.
 * Otherwise, use the webSearchUrl URL.
 * @member {object} [query.thumbnail] The URL to a thumbnail of a related
 * image.
 * @member {object} [query.thumbnail.thumbnail] The URL to a thumbnail of the
 * image
 * @member {string} [newsSearchUrl] The URL to the Bing News search results for
 * the search query term
 */
export interface NewsTopic extends Thing {
  readonly isBreakingNews?: boolean;
  readonly query?: Query;
  readonly newsSearchUrl?: string;
}

/**
 * @class
 * Initializes a new instance of the TrendingTopics class.
 * @constructor
 * @member {array} value A list of trending news topics on Bing
 */
export interface TrendingTopics extends Answer {
  value: NewsTopic[];
}

/**
 * @class
 * Initializes a new instance of the VideoObject class.
 * @constructor
 * Defines a video object that is relevant to the query.
 *
 * @member {string} [motionThumbnailUrl]
 * @member {string} [motionThumbnailId]
 * @member {string} [embedHtml]
 * @member {boolean} [allowHttpsEmbed]
 * @member {number} [viewCount]
 * @member {object} [thumbnail]
 * @member {object} [thumbnail.thumbnail] The URL to a thumbnail of the image
 * @member {string} [videoId]
 * @member {boolean} [allowMobileEmbed]
 * @member {boolean} [isSuperfresh]
 */
export interface VideoObject extends MediaObject {
  readonly motionThumbnailUrl?: string;
  readonly motionThumbnailId?: string;
  readonly embedHtml?: string;
  readonly allowHttpsEmbed?: boolean;
  readonly viewCount?: number;
  readonly thumbnail?: ImageObject;
  readonly videoId?: string;
  readonly allowMobileEmbed?: boolean;
  readonly isSuperfresh?: boolean;
}

/**
 * @class
 * Initializes a new instance of the Organization class.
 * @constructor
 * Defines an organization.
 *
 */
export interface Organization extends Thing {
}

/**
 * @class
 * Initializes a new instance of the ErrorModel class.
 * @constructor
 * Defines the error that occurred.
 *
 * @member {string} code The error code that identifies the category of error.
 * Possible values include: 'None', 'ServerError', 'InvalidRequest',
 * 'RateLimitExceeded', 'InvalidAuthorization', 'InsufficientAuthorization'.
 * Default value: 'None' .
 * @member {string} [subCode] The error code that further helps to identify the
 * error. Possible values include: 'UnexpectedError', 'ResourceError',
 * 'NotImplemented', 'ParameterMissing', 'ParameterInvalidValue',
 * 'HttpNotAllowed', 'Blocked', 'AuthorizationMissing',
 * 'AuthorizationRedundancy', 'AuthorizationDisabled', 'AuthorizationExpired'
 * @member {string} message A description of the error.
 * @member {string} [moreDetails] A description that provides additional
 * information about the error.
 * @member {string} [parameter] The parameter in the request that caused the
 * error.
 * @member {string} [value] The parameter's value in the request that was not
 * valid.
 */
export interface ErrorModel {
  code: string;
  readonly subCode?: string;
  message: string;
  readonly moreDetails?: string;
  readonly parameter?: string;
  readonly value?: string;
}

/**
 * @class
 * Initializes a new instance of the ErrorResponse class.
 * @constructor
 * The top-level response that represents a failed request.
 *
 * @member {array} errors A list of errors that describe the reasons why the
 * request failed.
 */
export interface ErrorResponse extends Response {
  errors: ErrorModel[];
}
