/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as moment from "moment";


/**
 * @class
 * Initializes a new instance of the ResponseBase class.
 * @constructor
 * @member {string} _type Polymorphic Discriminator
 */
export interface ResponseBase {
  _type: string;
}

/**
 * @class
 * Initializes a new instance of the Identifiable class.
 * @constructor
 * Defines the identity of a resource.
 *
 * @member {string} [id] A String identifier.
 */
export interface Identifiable extends ResponseBase {
  readonly id?: string;
}

/**
 * @class
 * Initializes a new instance of the Response class.
 * @constructor
 * Defines a response. All schemas that could be returned at the root of a
 * response should inherit from this
 *
 * @member {string} [webSearchUrl] The URL To Bing's search result for this
 * item.
 */
export interface Response extends Identifiable {
  readonly webSearchUrl?: string;
}

/**
 * @class
 * Initializes a new instance of the Thing class.
 * @constructor
 * @member {string} [name] The name of the thing represented by this object.
 * @member {string} [url] The URL to get more information about the thing
 * represented by this object.
 * @member {object} [image]
 * @member {object} [image.thumbnail] The URL to a thumbnail of the image
 * @member {string} [description] A short description of the item.
 * @member {string} [alternateName]
 * @member {string} [bingId] An ID that uniquely identifies this item.
 */
export interface Thing extends Response {
  readonly name?: string;
  readonly url?: string;
  readonly image?: ImageObject;
  readonly description?: string;
  readonly alternateName?: string;
  readonly bingId?: string;
}

/**
 * @class
 * Initializes a new instance of the CreativeWork class.
 * @constructor
 * @member {string} [thumbnailUrl] The URL to a thumbnail of the item.
 * @member {array} [provider] The source of the creative work.
 * @member {string} [text]
 */
export interface CreativeWork extends Thing {
  readonly thumbnailUrl?: string;
  readonly provider?: Thing[];
  readonly text?: string;
}

/**
 * @class
 * Initializes a new instance of the MediaObject class.
 * @constructor
 * @member {string} [contentUrl] Original URL to retrieve the source (file) for
 * the media object (e.g the source URL for the image).
 * @member {string} [hostPageUrl] URL of the page that hosts the media object.
 * @member {number} [width] The width of the source media object, in pixels.
 * @member {number} [height] The height of the source media object, in pixels.
 */
export interface MediaObject extends CreativeWork {
  readonly contentUrl?: string;
  readonly hostPageUrl?: string;
  readonly width?: number;
  readonly height?: number;
}

/**
 * @class
 * Initializes a new instance of the ImageObject class.
 * @constructor
 * Defines an image
 *
 * @member {object} [thumbnail] The URL to a thumbnail of the image
 */
export interface ImageObject extends MediaObject {
  readonly thumbnail?: ImageObject;
}

/**
 * @class
 * Initializes a new instance of the VideoObject class.
 * @constructor
 * Defines a video object that is relevant to the query.
 *
 * @member {string} [motionThumbnailUrl]
 * @member {string} [motionThumbnailId]
 * @member {string} [embedHtml]
 * @member {boolean} [allowHttpsEmbed]
 * @member {number} [viewCount]
 * @member {object} [thumbnail]
 * @member {object} [thumbnail.thumbnail] The URL to a thumbnail of the image
 * @member {string} [videoId]
 * @member {boolean} [allowMobileEmbed]
 * @member {boolean} [isSuperfresh]
 */
export interface VideoObject extends MediaObject {
  readonly motionThumbnailUrl?: string;
  readonly motionThumbnailId?: string;
  readonly embedHtml?: string;
  readonly allowHttpsEmbed?: boolean;
  readonly viewCount?: number;
  readonly thumbnail?: ImageObject;
  readonly videoId?: string;
  readonly allowMobileEmbed?: boolean;
  readonly isSuperfresh?: boolean;
}

/**
 * @class
 * Initializes a new instance of the Query class.
 * @constructor
 * Defines a search query.
 *
 * @member {string} text The query string. Use this string as the query term in
 * a new search request.
 * @member {string} [displayText] The display version of the query term. This
 * version of the query term may contain special characters that highlight the
 * search term found in the query string. The string contains the highlighting
 * characters only if the query enabled hit highlighting
 * @member {string} [webSearchUrl] The URL that takes the user to the Bing
 * search results page for the query.Only related search results include this
 * field.
 * @member {string} [searchLink]
 * @member {object} [thumbnail]
 * @member {object} [thumbnail.thumbnail] The URL to a thumbnail of the image
 */
export interface Query {
  text: string;
  readonly displayText?: string;
  readonly webSearchUrl?: string;
  readonly searchLink?: string;
  readonly thumbnail?: ImageObject;
}

/**
 * @class
 * Initializes a new instance of the PivotSuggestions class.
 * @constructor
 * @member {string} pivot
 * @member {array} suggestions
 */
export interface PivotSuggestions {
  pivot: string;
  suggestions: Query[];
}

/**
 * @class
 * Initializes a new instance of the Answer class.
 * @constructor
 * @member {array} [followUpQueries]
 */
export interface Answer extends Response {
  readonly followUpQueries?: Query[];
}

/**
 * @class
 * Initializes a new instance of the SearchResultsAnswer class.
 * @constructor
 * @member {number} [totalEstimatedMatches] The estimated number of webpages
 * that are relevant to the query. Use this number along with the count and
 * offset query parameters to page the results.
 * @member {boolean} [isFamilyFriendly]
 */
export interface SearchResultsAnswer extends Answer {
  readonly totalEstimatedMatches?: number;
  readonly isFamilyFriendly?: boolean;
}

/**
 * @class
 * Initializes a new instance of the Videos class.
 * @constructor
 * Defines a video answer.
 *
 * @member {array} value A list of video objects that are relevant to the
 * query.
 * @member {number} [nextOffset]
 * @member {string} [scenario] Possible values include: 'List',
 * 'SingleDominantVideo'
 * @member {array} [queryExpansions]
 * @member {array} [pivotSuggestions]
 */
export interface Videos extends SearchResultsAnswer {
  value: VideoObject[];
  readonly nextOffset?: number;
  readonly scenario?: string;
  readonly queryExpansions?: Query[];
  readonly pivotSuggestions?: PivotSuggestions[];
}

/**
 * @class
 * Initializes a new instance of the QueryContext class.
 * @constructor
 * Defines the query context that Bing used for the request.
 *
 * @member {string} originalQuery The query string as specified in the request.
 * @member {string} [alteredQuery] The query string used by Bing to perform the
 * query. Bing uses the altered query string if the original query string
 * contained spelling mistakes. For example, if the query string is "saling
 * downwind", the altered query string will be "sailing downwind". This field
 * is included only if the original query string contains a spelling mistake.
 * @member {string} [alterationOverrideQuery] The query string to use to force
 * Bing to use the original string. For example, if the query string is "saling
 * downwind", the override query string will be "+saling downwind". Remember to
 * encode the query string which results in "%2Bsaling+downwind". This field is
 * included only if the original query string contains a spelling mistake.
 * @member {boolean} [adultIntent] A Boolean value that indicates whether the
 * specified query has adult intent. The value is true if the query has adult
 * intent; otherwise, false.
 * @member {boolean} [askUserForLocation] A Boolean value that indicates
 * whether Bing requires the user's location to provide accurate results. If
 * you specified the user's location by using the X-MSEdge-ClientIP and
 * X-Search-Location headers, you can ignore this field. For location aware
 * queries, such as "today's weather" or "restaurants near me" that need the
 * user's location to provide accurate results, this field is set to true. For
 * location aware queries that include the location (for example, "Seattle
 * weather"), this field is set to false. This field is also set to false for
 * queries that are not location aware, such as "best sellers".
 * @member {boolean} [isTransactional]
 */
export interface QueryContext {
  originalQuery: string;
  readonly alteredQuery?: string;
  readonly alterationOverrideQuery?: string;
  readonly adultIntent?: boolean;
  readonly askUserForLocation?: boolean;
  readonly isTransactional?: boolean;
}

/**
 * @class
 * Initializes a new instance of the ErrorModel class.
 * @constructor
 * Defines the error that occurred.
 *
 * @member {string} code The error code that identifies the category of error.
 * Possible values include: 'None', 'ServerError', 'InvalidRequest',
 * 'RateLimitExceeded', 'InvalidAuthorization', 'InsufficientAuthorization'.
 * Default value: 'None' .
 * @member {string} [subCode] The error code that further helps to identify the
 * error. Possible values include: 'UnexpectedError', 'ResourceError',
 * 'NotImplemented', 'ParameterMissing', 'ParameterInvalidValue',
 * 'HttpNotAllowed', 'Blocked', 'AuthorizationMissing',
 * 'AuthorizationRedundancy', 'AuthorizationDisabled', 'AuthorizationExpired'
 * @member {string} message A description of the error.
 * @member {string} [moreDetails] A description that provides additional
 * information about the error.
 * @member {string} [parameter] The parameter in the request that caused the
 * error.
 * @member {string} [value] The parameter's value in the request that was not
 * valid.
 */
export interface ErrorModel {
  code: string;
  readonly subCode?: string;
  message: string;
  readonly moreDetails?: string;
  readonly parameter?: string;
  readonly value?: string;
}

/**
 * @class
 * Initializes a new instance of the ErrorResponse class.
 * @constructor
 * The top-level response that represents a failed request.
 *
 * @member {array} errors A list of errors that describe the reasons why the
 * request failed.
 */
export interface ErrorResponse extends Response {
  errors: ErrorModel[];
}

/**
 * @class
 * Initializes a new instance of the TrendingVideosTile class.
 * @constructor
 * @member {object} query
 * @member {string} [query.text] The query string. Use this string as the query
 * term in a new search request.
 * @member {string} [query.displayText] The display version of the query term.
 * This version of the query term may contain special characters that highlight
 * the search term found in the query string. The string contains the
 * highlighting characters only if the query enabled hit highlighting
 * @member {string} [query.webSearchUrl] The URL that takes the user to the
 * Bing search results page for the query.Only related search results include
 * this field.
 * @member {string} [query.searchLink]
 * @member {object} [query.thumbnail]
 * @member {object} [query.thumbnail.thumbnail] The URL to a thumbnail of the
 * image
 * @member {object} image
 * @member {object} [image.thumbnail] The URL to a thumbnail of the image
 */
export interface TrendingVideosTile {
  query: Query;
  image: ImageObject;
}

/**
 * @class
 * Initializes a new instance of the TrendingVideosSubcategory class.
 * @constructor
 * @member {string} title
 * @member {array} tiles
 */
export interface TrendingVideosSubcategory {
  title: string;
  tiles: TrendingVideosTile[];
}

/**
 * @class
 * Initializes a new instance of the TrendingVideosCategory class.
 * @constructor
 * @member {string} title
 * @member {array} subcategories
 */
export interface TrendingVideosCategory {
  title: string;
  subcategories: TrendingVideosSubcategory[];
}

/**
 * @class
 * Initializes a new instance of the TrendingVideos class.
 * @constructor
 * @member {array} bannerTiles
 * @member {array} categories
 */
export interface TrendingVideos extends Response {
  bannerTiles: TrendingVideosTile[];
  categories: TrendingVideosCategory[];
}

/**
 * @class
 * Initializes a new instance of the VideosModule class.
 * @constructor
 * @member {array} [value]
 */
export interface VideosModule {
  readonly value?: VideoObject[];
}

/**
 * @class
 * Initializes a new instance of the VideoDetails class.
 * @constructor
 * @member {object} [relatedVideos]
 * @member {array} [relatedVideos.value]
 * @member {object} [videoResult]
 * @member {string} [videoResult.motionThumbnailUrl]
 * @member {string} [videoResult.motionThumbnailId]
 * @member {string} [videoResult.embedHtml]
 * @member {boolean} [videoResult.allowHttpsEmbed]
 * @member {number} [videoResult.viewCount]
 * @member {object} [videoResult.thumbnail]
 * @member {object} [videoResult.thumbnail.thumbnail] The URL to a thumbnail of
 * the image
 * @member {string} [videoResult.videoId]
 * @member {boolean} [videoResult.allowMobileEmbed]
 * @member {boolean} [videoResult.isSuperfresh]
 */
export interface VideoDetails extends Response {
  readonly relatedVideos?: VideosModule;
  readonly videoResult?: VideoObject;
}
