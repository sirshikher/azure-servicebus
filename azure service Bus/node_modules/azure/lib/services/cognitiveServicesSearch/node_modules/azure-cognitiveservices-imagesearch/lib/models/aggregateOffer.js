/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Defines a list of offers from merchants that are related to the image.
 *
 * @extends models['Offer']
 */
class AggregateOffer extends models['Offer'] {
  /**
   * Create a AggregateOffer.
   * @member {array} [offers] A list of offers from merchants that have
   * offerings related to the image.
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of AggregateOffer
   *
   * @returns {object} metadata of AggregateOffer
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'AggregateOffer',
      type: {
        name: 'Composite',
        polymorphicDiscriminator: {
          serializedName: '_type',
          clientName: '_type'
        },
        uberParent: 'ResponseBase',
        className: 'AggregateOffer',
        modelProperties: {
          _type: {
            required: true,
            serializedName: '_type',
            isPolymorphicDiscriminator: true,
            type: {
              name: 'String'
            }
          },
          id: {
            required: false,
            readOnly: true,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          readLink: {
            required: false,
            readOnly: true,
            serializedName: 'readLink',
            type: {
              name: 'String'
            }
          },
          webSearchUrl: {
            required: false,
            readOnly: true,
            serializedName: 'webSearchUrl',
            type: {
              name: 'String'
            }
          },
          name: {
            required: false,
            readOnly: true,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          url: {
            required: false,
            readOnly: true,
            serializedName: 'url',
            type: {
              name: 'String'
            }
          },
          image: {
            required: false,
            readOnly: true,
            serializedName: 'image',
            type: {
              name: 'Composite',
              polymorphicDiscriminator: {
                serializedName: '_type',
                clientName: '_type'
              },
              uberParent: 'ResponseBase',
              className: 'ImageObject'
            }
          },
          description: {
            required: false,
            readOnly: true,
            serializedName: 'description',
            type: {
              name: 'String'
            }
          },
          alternateName: {
            required: false,
            readOnly: true,
            serializedName: 'alternateName',
            type: {
              name: 'String'
            }
          },
          bingId: {
            required: false,
            readOnly: true,
            serializedName: 'bingId',
            type: {
              name: 'String'
            }
          },
          seller: {
            required: false,
            readOnly: true,
            serializedName: 'seller',
            type: {
              name: 'Composite',
              polymorphicDiscriminator: {
                serializedName: '_type',
                clientName: '_type'
              },
              uberParent: 'ResponseBase',
              className: 'Organization'
            }
          },
          price: {
            required: false,
            readOnly: true,
            serializedName: 'price',
            type: {
              name: 'Number'
            }
          },
          priceCurrency: {
            required: false,
            readOnly: true,
            serializedName: 'priceCurrency',
            defaultValue: 'USD',
            type: {
              name: 'String'
            }
          },
          availability: {
            required: false,
            readOnly: true,
            serializedName: 'availability',
            type: {
              name: 'String'
            }
          },
          aggregateRating: {
            required: false,
            readOnly: true,
            serializedName: 'aggregateRating',
            type: {
              name: 'Composite',
              polymorphicDiscriminator: {
                serializedName: '_type',
                clientName: '_type'
              },
              uberParent: 'PropertiesItem',
              className: 'AggregateRating'
            }
          },
          lastUpdated: {
            required: false,
            readOnly: true,
            serializedName: 'lastUpdated',
            type: {
              name: 'String'
            }
          },
          offers: {
            required: false,
            readOnly: true,
            serializedName: 'offers',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'OfferElementType',
                  type: {
                    name: 'Composite',
                    polymorphicDiscriminator: {
                      serializedName: '_type',
                      clientName: '_type'
                    },
                    uberParent: 'ResponseBase',
                    className: 'Offer'
                  }
              }
            }
          }
        }
      }
    };
  }
}

module.exports = AggregateOffer;
