/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { ServiceClientOptions, RequestOptions, ServiceCallback, HttpOperationResponse, ServiceClientCredentials } from 'ms-rest';
import * as models from "./models";
import * as operations from "./operations";

declare class IntuneResourceManagementClient {
  /**
   * Initializes a new instance of the IntuneResourceManagementClient class.
   * @constructor
   *
   * @class
   * @param {credentials} credentials - Credentials needed for the client to connect to Azure.
   *
   * @param {string} [baseUri] - The base URI of the service.
   *
   * @param {object} [options] - The parameter options
   *
   * @param {Array} [options.filters] - Filters to be added to the request pipeline
   *
   * @param {object} [options.requestOptions] - Options for the underlying request object
   * {@link https://github.com/request/request#requestoptions-callback Options doc}
   *
   * @param {boolean} [options.noRetryPolicy] - If set to true, turn off default retry policy
   *
   * @param {string} [options.apiVersion] - Service Api Version.
   *
   * @param {string} [options.acceptLanguage] - Gets or sets the preferred language for the response.
   *
   * @param {number} [options.longRunningOperationRetryTimeout] - Gets or sets the retry timeout in seconds for Long Running Operations. Default value is 30.
   *
   * @param {boolean} [options.generateClientRequestId] - When set to true a unique x-ms-client-request-id value is generated and included in each request. Default is true.
   *
   */
  constructor(credentials: ServiceClientCredentials, baseUri?: string, options?: ServiceClientOptions);

  credentials: ServiceClientCredentials;

  apiVersion: string;

  acceptLanguage: string;

  longRunningOperationRetryTimeout: number;

  generateClientRequestId: boolean;

  // Operation groups
  ios: operations.Ios;
  android: operations.Android;


  /**
   * Returns location for user tenant.
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<LocationCollection>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getLocationsWithHttpOperationResponse(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.LocationCollection>>;

  /**
   * Returns location for user tenant.
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {LocationCollection} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {LocationCollection} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link LocationCollection} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getLocations(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.LocationCollection>;
  getLocations(callback: ServiceCallback<models.LocationCollection>): void;
  getLocations(options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.LocationCollection>): void;


  /**
   * Returns location for given tenant.
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<Location>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getLocationByHostNameWithHttpOperationResponse(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Location>>;

  /**
   * Returns location for given tenant.
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {Location} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {Location} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link Location} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getLocationByHostName(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Location>;
  getLocationByHostName(callback: ServiceCallback<models.Location>): void;
  getLocationByHostName(options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Location>): void;


  /**
   * Returns Intune Manageable apps.
   *
   * @param {string} hostName Location hostName for the tenant
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {string} [options.filter] The filter to apply on the operation.
   *
   * @param {number} [options.top]
   *
   * @param {string} [options.select] select specific fields in entity.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<ApplicationCollection>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getAppsWithHttpOperationResponse(hostName: string, options?: { filter? : string, top? : number, select? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ApplicationCollection>>;

  /**
   * Returns Intune Manageable apps.
   *
   * @param {string} hostName Location hostName for the tenant
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {string} [options.filter] The filter to apply on the operation.
   *
   * @param {number} [options.top]
   *
   * @param {string} [options.select] select specific fields in entity.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {ApplicationCollection} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {ApplicationCollection} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link ApplicationCollection} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getApps(hostName: string, options?: { filter? : string, top? : number, select? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.ApplicationCollection>;
  getApps(hostName: string, callback: ServiceCallback<models.ApplicationCollection>): void;
  getApps(hostName: string, options: { filter? : string, top? : number, select? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ApplicationCollection>): void;


  /**
   * Get devices for a user.
   *
   * @param {string} hostName Location hostName for the tenant
   *
   * @param {string} userName user unique Name
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {string} [options.filter] The filter to apply on the operation.
   *
   * @param {number} [options.top]
   *
   * @param {string} [options.select] select specific fields in entity.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<DeviceCollection>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getMAMUserDevicesWithHttpOperationResponse(hostName: string, userName: string, options?: { filter? : string, top? : number, select? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.DeviceCollection>>;

  /**
   * Get devices for a user.
   *
   * @param {string} hostName Location hostName for the tenant
   *
   * @param {string} userName user unique Name
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {string} [options.filter] The filter to apply on the operation.
   *
   * @param {number} [options.top]
   *
   * @param {string} [options.select] select specific fields in entity.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {DeviceCollection} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {DeviceCollection} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link DeviceCollection} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getMAMUserDevices(hostName: string, userName: string, options?: { filter? : string, top? : number, select? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.DeviceCollection>;
  getMAMUserDevices(hostName: string, userName: string, callback: ServiceCallback<models.DeviceCollection>): void;
  getMAMUserDevices(hostName: string, userName: string, options: { filter? : string, top? : number, select? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.DeviceCollection>): void;


  /**
   * Get a unique device for a user.
   *
   * @param {string} hostName Location hostName for the tenant
   *
   * @param {string} userName unique user name
   *
   * @param {string} deviceName device name
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {string} [options.select] select specific fields in entity.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<Device>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getMAMUserDeviceByDeviceNameWithHttpOperationResponse(hostName: string, userName: string, deviceName: string, options?: { select? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Device>>;

  /**
   * Get a unique device for a user.
   *
   * @param {string} hostName Location hostName for the tenant
   *
   * @param {string} userName unique user name
   *
   * @param {string} deviceName device name
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {string} [options.select] select specific fields in entity.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {Device} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {Device} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link Device} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getMAMUserDeviceByDeviceName(hostName: string, userName: string, deviceName: string, options?: { select? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.Device>;
  getMAMUserDeviceByDeviceName(hostName: string, userName: string, deviceName: string, callback: ServiceCallback<models.Device>): void;
  getMAMUserDeviceByDeviceName(hostName: string, userName: string, deviceName: string, options: { select? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Device>): void;


  /**
   * Wipe a device for a user.
   *
   * @param {string} hostName Location hostName for the tenant
   *
   * @param {string} userName unique user name
   *
   * @param {string} deviceName device name
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<WipeDeviceOperationResult>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  wipeMAMUserDeviceWithHttpOperationResponse(hostName: string, userName: string, deviceName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.WipeDeviceOperationResult>>;

  /**
   * Wipe a device for a user.
   *
   * @param {string} hostName Location hostName for the tenant
   *
   * @param {string} userName unique user name
   *
   * @param {string} deviceName device name
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {WipeDeviceOperationResult} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {WipeDeviceOperationResult} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link WipeDeviceOperationResult} for more
   *                      information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  wipeMAMUserDevice(hostName: string, userName: string, deviceName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.WipeDeviceOperationResult>;
  wipeMAMUserDevice(hostName: string, userName: string, deviceName: string, callback: ServiceCallback<models.WipeDeviceOperationResult>): void;
  wipeMAMUserDevice(hostName: string, userName: string, deviceName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.WipeDeviceOperationResult>): void;


  /**
   * Returns operationResults.
   *
   * @param {string} hostName Location hostName for the tenant
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {string} [options.filter] The filter to apply on the operation.
   *
   * @param {number} [options.top]
   *
   * @param {string} [options.select] select specific fields in entity.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<OperationResultCollection>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getOperationResultsWithHttpOperationResponse(hostName: string, options?: { filter? : string, top? : number, select? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.OperationResultCollection>>;

  /**
   * Returns operationResults.
   *
   * @param {string} hostName Location hostName for the tenant
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {string} [options.filter] The filter to apply on the operation.
   *
   * @param {number} [options.top]
   *
   * @param {string} [options.select] select specific fields in entity.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {OperationResultCollection} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {OperationResultCollection} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link OperationResultCollection} for more
   *                      information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getOperationResults(hostName: string, options?: { filter? : string, top? : number, select? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.OperationResultCollection>;
  getOperationResults(hostName: string, callback: ServiceCallback<models.OperationResultCollection>): void;
  getOperationResults(hostName: string, options: { filter? : string, top? : number, select? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.OperationResultCollection>): void;


  /**
   * Returns Intune Tenant level statuses.
   *
   * @param {string} hostName Location hostName for the tenant
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<StatusesDefault>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getMAMStatusesWithHttpOperationResponse(hostName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.StatusesDefault>>;

  /**
   * Returns Intune Tenant level statuses.
   *
   * @param {string} hostName Location hostName for the tenant
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {StatusesDefault} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {StatusesDefault} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link StatusesDefault} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getMAMStatuses(hostName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.StatusesDefault>;
  getMAMStatuses(hostName: string, callback: ServiceCallback<models.StatusesDefault>): void;
  getMAMStatuses(hostName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.StatusesDefault>): void;


  /**
   * Returns Intune flagged user collection
   *
   * @param {string} hostName Location hostName for the tenant
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {string} [options.filter] The filter to apply on the operation.
   *
   * @param {number} [options.top]
   *
   * @param {string} [options.select] select specific fields in entity.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<FlaggedUserCollection>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getMAMFlaggedUsersWithHttpOperationResponse(hostName: string, options?: { filter? : string, top? : number, select? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.FlaggedUserCollection>>;

  /**
   * Returns Intune flagged user collection
   *
   * @param {string} hostName Location hostName for the tenant
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {string} [options.filter] The filter to apply on the operation.
   *
   * @param {number} [options.top]
   *
   * @param {string} [options.select] select specific fields in entity.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {FlaggedUserCollection} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {FlaggedUserCollection} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link FlaggedUserCollection} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getMAMFlaggedUsers(hostName: string, options?: { filter? : string, top? : number, select? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.FlaggedUserCollection>;
  getMAMFlaggedUsers(hostName: string, callback: ServiceCallback<models.FlaggedUserCollection>): void;
  getMAMFlaggedUsers(hostName: string, options: { filter? : string, top? : number, select? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.FlaggedUserCollection>): void;


  /**
   * Returns Intune flagged user details
   *
   * @param {string} hostName Location hostName for the tenant
   *
   * @param {string} userName Flagged userName
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {string} [options.select] select specific fields in entity.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<FlaggedUser>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getMAMFlaggedUserByNameWithHttpOperationResponse(hostName: string, userName: string, options?: { select? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.FlaggedUser>>;

  /**
   * Returns Intune flagged user details
   *
   * @param {string} hostName Location hostName for the tenant
   *
   * @param {string} userName Flagged userName
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {string} [options.select] select specific fields in entity.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {FlaggedUser} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {FlaggedUser} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link FlaggedUser} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getMAMFlaggedUserByName(hostName: string, userName: string, options?: { select? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.FlaggedUser>;
  getMAMFlaggedUserByName(hostName: string, userName: string, callback: ServiceCallback<models.FlaggedUser>): void;
  getMAMFlaggedUserByName(hostName: string, userName: string, options: { select? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.FlaggedUser>): void;


  /**
   * Returns Intune flagged enrolled app collection for the User
   *
   * @param {string} hostName Location hostName for the tenant
   *
   * @param {string} userName User name for the tenant
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {string} [options.filter] The filter to apply on the operation.
   *
   * @param {number} [options.top]
   *
   * @param {string} [options.select] select specific fields in entity.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<FlaggedEnrolledAppCollection>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getMAMUserFlaggedEnrolledAppsWithHttpOperationResponse(hostName: string, userName: string, options?: { filter? : string, top? : number, select? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.FlaggedEnrolledAppCollection>>;

  /**
   * Returns Intune flagged enrolled app collection for the User
   *
   * @param {string} hostName Location hostName for the tenant
   *
   * @param {string} userName User name for the tenant
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {string} [options.filter] The filter to apply on the operation.
   *
   * @param {number} [options.top]
   *
   * @param {string} [options.select] select specific fields in entity.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {FlaggedEnrolledAppCollection} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {FlaggedEnrolledAppCollection} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link FlaggedEnrolledAppCollection} for more
   *                      information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getMAMUserFlaggedEnrolledApps(hostName: string, userName: string, options?: { filter? : string, top? : number, select? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.FlaggedEnrolledAppCollection>;
  getMAMUserFlaggedEnrolledApps(hostName: string, userName: string, callback: ServiceCallback<models.FlaggedEnrolledAppCollection>): void;
  getMAMUserFlaggedEnrolledApps(hostName: string, userName: string, options: { filter? : string, top? : number, select? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.FlaggedEnrolledAppCollection>): void;


  /**
   * Returns location for user tenant.
   *
   * @param {string} nextPageLink The NextLink from the previous successful call
   * to List operation.
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<LocationCollection>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getLocationsNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.LocationCollection>>;

  /**
   * Returns location for user tenant.
   *
   * @param {string} nextPageLink The NextLink from the previous successful call
   * to List operation.
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {LocationCollection} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {LocationCollection} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link LocationCollection} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getLocationsNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.LocationCollection>;
  getLocationsNext(nextPageLink: string, callback: ServiceCallback<models.LocationCollection>): void;
  getLocationsNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.LocationCollection>): void;


  /**
   * Returns Intune Manageable apps.
   *
   * @param {string} nextPageLink The NextLink from the previous successful call
   * to List operation.
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<ApplicationCollection>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getAppsNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ApplicationCollection>>;

  /**
   * Returns Intune Manageable apps.
   *
   * @param {string} nextPageLink The NextLink from the previous successful call
   * to List operation.
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {ApplicationCollection} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {ApplicationCollection} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link ApplicationCollection} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getAppsNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ApplicationCollection>;
  getAppsNext(nextPageLink: string, callback: ServiceCallback<models.ApplicationCollection>): void;
  getAppsNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ApplicationCollection>): void;


  /**
   * Get devices for a user.
   *
   * @param {string} nextPageLink The NextLink from the previous successful call
   * to List operation.
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<DeviceCollection>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getMAMUserDevicesNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.DeviceCollection>>;

  /**
   * Get devices for a user.
   *
   * @param {string} nextPageLink The NextLink from the previous successful call
   * to List operation.
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {DeviceCollection} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {DeviceCollection} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link DeviceCollection} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getMAMUserDevicesNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.DeviceCollection>;
  getMAMUserDevicesNext(nextPageLink: string, callback: ServiceCallback<models.DeviceCollection>): void;
  getMAMUserDevicesNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.DeviceCollection>): void;


  /**
   * Returns operationResults.
   *
   * @param {string} nextPageLink The NextLink from the previous successful call
   * to List operation.
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<OperationResultCollection>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getOperationResultsNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.OperationResultCollection>>;

  /**
   * Returns operationResults.
   *
   * @param {string} nextPageLink The NextLink from the previous successful call
   * to List operation.
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {OperationResultCollection} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {OperationResultCollection} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link OperationResultCollection} for more
   *                      information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getOperationResultsNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.OperationResultCollection>;
  getOperationResultsNext(nextPageLink: string, callback: ServiceCallback<models.OperationResultCollection>): void;
  getOperationResultsNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.OperationResultCollection>): void;


  /**
   * Returns Intune Tenant level statuses.
   *
   * @param {string} nextPageLink The NextLink from the previous successful call
   * to List operation.
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<StatusesDefault>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getMAMStatusesNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.StatusesDefault>>;

  /**
   * Returns Intune Tenant level statuses.
   *
   * @param {string} nextPageLink The NextLink from the previous successful call
   * to List operation.
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {StatusesDefault} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {StatusesDefault} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link StatusesDefault} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getMAMStatusesNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.StatusesDefault>;
  getMAMStatusesNext(nextPageLink: string, callback: ServiceCallback<models.StatusesDefault>): void;
  getMAMStatusesNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.StatusesDefault>): void;


  /**
   * Returns Intune flagged user collection
   *
   * @param {string} nextPageLink The NextLink from the previous successful call
   * to List operation.
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<FlaggedUserCollection>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getMAMFlaggedUsersNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.FlaggedUserCollection>>;

  /**
   * Returns Intune flagged user collection
   *
   * @param {string} nextPageLink The NextLink from the previous successful call
   * to List operation.
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {FlaggedUserCollection} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {FlaggedUserCollection} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link FlaggedUserCollection} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getMAMFlaggedUsersNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.FlaggedUserCollection>;
  getMAMFlaggedUsersNext(nextPageLink: string, callback: ServiceCallback<models.FlaggedUserCollection>): void;
  getMAMFlaggedUsersNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.FlaggedUserCollection>): void;


  /**
   * Returns Intune flagged enrolled app collection for the User
   *
   * @param {string} nextPageLink The NextLink from the previous successful call
   * to List operation.
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<FlaggedEnrolledAppCollection>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getMAMUserFlaggedEnrolledAppsNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.FlaggedEnrolledAppCollection>>;

  /**
   * Returns Intune flagged enrolled app collection for the User
   *
   * @param {string} nextPageLink The NextLink from the previous successful call
   * to List operation.
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {FlaggedEnrolledAppCollection} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {FlaggedEnrolledAppCollection} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link FlaggedEnrolledAppCollection} for more
   *                      information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getMAMUserFlaggedEnrolledAppsNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.FlaggedEnrolledAppCollection>;
  getMAMUserFlaggedEnrolledAppsNext(nextPageLink: string, callback: ServiceCallback<models.FlaggedEnrolledAppCollection>): void;
  getMAMUserFlaggedEnrolledAppsNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.FlaggedEnrolledAppCollection>): void;
}

export = IntuneResourceManagementClient;
