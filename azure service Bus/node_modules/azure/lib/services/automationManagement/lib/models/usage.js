/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Definition of Usage.
 *
 */
class Usage {
  /**
   * Create a Usage.
   * @member {string} [id] Gets or sets the id of the resource.
   * @member {object} [name] Gets or sets the usage counter name.
   * @member {string} [name.value] Gets or sets the usage counter name.
   * @member {string} [name.localizedValue] Gets or sets the localized usage
   * counter name.
   * @member {string} [unit] Gets or sets the usage unit name.
   * @member {number} [currentValue] Gets or sets the current usage value.
   * @member {number} [limit] Gets or sets max limit. -1 for unlimited
   * @member {string} [throttleStatus] Gets or sets the throttle status.
   */
  constructor() {
  }

  /**
   * Defines the metadata of Usage
   *
   * @returns {object} metadata of Usage
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'Usage',
      type: {
        name: 'Composite',
        className: 'Usage',
        modelProperties: {
          id: {
            required: false,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          name: {
            required: false,
            serializedName: 'name',
            type: {
              name: 'Composite',
              className: 'UsageCounterName'
            }
          },
          unit: {
            required: false,
            serializedName: 'unit',
            type: {
              name: 'String'
            }
          },
          currentValue: {
            required: false,
            serializedName: 'currentValue',
            type: {
              name: 'Number'
            }
          },
          limit: {
            required: false,
            serializedName: 'limit',
            type: {
              name: 'Number'
            }
          },
          throttleStatus: {
            required: false,
            serializedName: 'throttleStatus',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = Usage;
