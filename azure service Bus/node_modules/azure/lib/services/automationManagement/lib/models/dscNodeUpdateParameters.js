/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * The parameters supplied to the update dsc node operation.
 *
 */
class DscNodeUpdateParameters {
  /**
   * Create a DscNodeUpdateParameters.
   * @member {string} [nodeId] Gets or sets the id of the dsc node.
   * @member {object} [nodeConfiguration] Gets or sets the configuration of the
   * node.
   * @member {string} [nodeConfiguration.name] Gets or sets the name of the dsc
   * nodeconfiguration.
   * @member {object} [properties]
   * @member {string} [properties.name] Gets or sets the name of the dsc
   * nodeconfiguration.
   */
  constructor() {
  }

  /**
   * Defines the metadata of DscNodeUpdateParameters
   *
   * @returns {object} metadata of DscNodeUpdateParameters
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'DscNodeUpdateParameters',
      type: {
        name: 'Composite',
        className: 'DscNodeUpdateParameters',
        modelProperties: {
          nodeId: {
            required: false,
            serializedName: 'nodeId',
            type: {
              name: 'String'
            }
          },
          nodeConfiguration: {
            required: false,
            serializedName: 'nodeConfiguration',
            type: {
              name: 'Composite',
              className: 'DscNodeConfigurationAssociationProperty'
            }
          },
          properties: {
            required: false,
            serializedName: 'properties',
            type: {
              name: 'Composite',
              className: 'DscNodeUpdateParametersProperties'
            }
          }
        }
      }
    };
  }
}

module.exports = DscNodeUpdateParameters;
