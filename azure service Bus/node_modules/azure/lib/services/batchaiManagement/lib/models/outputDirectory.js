/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Output directory for the job.
 *
 */
class OutputDirectory {
  /**
   * Create a OutputDirectory.
   * @member {string} id The name for the output directory. The path of the
   * output directory will be available as a value of an environment variable
   * with AZ_BATCHAI_OUTPUT_<id> name, where <id> is the value of id attribute.
   * @member {string} pathPrefix The prefix path where the output directory
   * will be created. NOTE: This is an absolute path to prefix. E.g.
   * $AZ_BATCHAI_MOUNT_ROOT/MyNFS/MyLogs. You can find the full path to the
   * output directory by combining pathPrefix, jobOutputDirectoryPathSegment
   * (reported by get job) and pathSuffix.
   * @member {string} [pathSuffix] The suffix path where the output directory
   * will be created. The suffix path where the output directory will be
   * created. E.g. models. You can find the full path to the output directory
   * by combining pathPrefix, jobOutputDirectoryPathSegment (reported by get
   * job) and pathSuffix.
   * @member {string} [type] An enumeration, which specifies the type of job
   * output directory. Default value is Custom. The possible values are Model,
   * Logs, Summary, and Custom. Users can use multiple enums for a single
   * directory. Eg. outPutType='Model,Logs, Summary'. Possible values include:
   * 'model', 'logs', 'summary', 'custom'. Default value: 'custom' .
   * @member {boolean} [createNew] True to create new directory. Default is
   * true. If false, then the directory is not created and can be any directory
   * path that the user specifies. Default value: true .
   */
  constructor() {
  }

  /**
   * Defines the metadata of OutputDirectory
   *
   * @returns {object} metadata of OutputDirectory
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'OutputDirectory',
      type: {
        name: 'Composite',
        className: 'OutputDirectory',
        modelProperties: {
          id: {
            required: true,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          pathPrefix: {
            required: true,
            serializedName: 'pathPrefix',
            type: {
              name: 'String'
            }
          },
          pathSuffix: {
            required: false,
            serializedName: 'pathSuffix',
            type: {
              name: 'String'
            }
          },
          type: {
            required: false,
            serializedName: 'type',
            defaultValue: 'custom',
            type: {
              name: 'String'
            }
          },
          createNew: {
            required: false,
            serializedName: 'createNew',
            defaultValue: true,
            type: {
              name: 'Boolean'
            }
          }
        }
      }
    };
  }
}

module.exports = OutputDirectory;
