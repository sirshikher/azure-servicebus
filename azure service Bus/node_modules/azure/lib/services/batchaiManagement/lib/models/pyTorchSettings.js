/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Specifies the settings for pyTorch job.
 *
 */
class PyTorchSettings {
  /**
   * Create a PyTorchSettings.
   * @member {string} pythonScriptFilePath The path and file name of the python
   * script to execute the job.
   * @member {string} [pythonInterpreterPath] The path to python interpreter.
   * @member {string} [commandLineArgs] Specifies the command line arguments
   * for the master task.
   * @member {number} [processCount] Number of processes to launch for the job
   * execution. The default value for this property is equal to nodeCount
   * property.
   * @member {string} [communicationBackend] Type of the communication backend
   * for distributed jobs. Valid values are 'TCP', 'Gloo' or 'MPI'. Not
   * required for non-distributed jobs.
   */
  constructor() {
  }

  /**
   * Defines the metadata of PyTorchSettings
   *
   * @returns {object} metadata of PyTorchSettings
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'PyTorchSettings',
      type: {
        name: 'Composite',
        className: 'PyTorchSettings',
        modelProperties: {
          pythonScriptFilePath: {
            required: true,
            serializedName: 'pythonScriptFilePath',
            type: {
              name: 'String'
            }
          },
          pythonInterpreterPath: {
            required: false,
            serializedName: 'pythonInterpreterPath',
            type: {
              name: 'String'
            }
          },
          commandLineArgs: {
            required: false,
            serializedName: 'commandLineArgs',
            type: {
              name: 'String'
            }
          },
          processCount: {
            required: false,
            serializedName: 'processCount',
            type: {
              name: 'Number'
            }
          },
          communicationBackend: {
            required: false,
            serializedName: 'communicationBackend',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = PyTorchSettings;
