/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Represents a scaling mechanism for adding or removing instances of stateless
 * service partition.
 *
 * @extends models['ScalingMechanismDescription']
 */
class PartitionInstanceCountScaleMechanism extends models['ScalingMechanismDescription'] {
  /**
   * Create a PartitionInstanceCountScaleMechanism.
   * @property {number} minInstanceCount Minimum number of instances of the
   * partition.
   * @property {number} maxInstanceCount Maximum number of instances of the
   * partition.
   * @property {number} scaleIncrement The number of instances to add or remove
   * during a scaling operation.
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of PartitionInstanceCountScaleMechanism
   *
   * @returns {object} metadata of PartitionInstanceCountScaleMechanism
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'PartitionInstanceCount',
      type: {
        name: 'Composite',
        polymorphicDiscriminator: {
          serializedName: 'Kind',
          clientName: 'kind'
        },
        uberParent: 'ScalingMechanismDescription',
        className: 'PartitionInstanceCountScaleMechanism',
        modelProperties: {
          kind: {
            required: true,
            serializedName: 'Kind',
            isPolymorphicDiscriminator: true,
            type: {
              name: 'String'
            }
          },
          minInstanceCount: {
            required: true,
            serializedName: 'MinInstanceCount',
            type: {
              name: 'Number'
            }
          },
          maxInstanceCount: {
            required: true,
            serializedName: 'MaxInstanceCount',
            type: {
              name: 'Number'
            }
          },
          scaleIncrement: {
            required: true,
            serializedName: 'ScaleIncrement',
            type: {
              name: 'Number'
            }
          }
        }
      }
    };
  }
}

module.exports = PartitionInstanceCountScaleMechanism;
