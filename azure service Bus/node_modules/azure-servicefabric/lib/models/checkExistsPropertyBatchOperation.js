/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Represents a PropertyBatchOperation that compares the Boolean existence of a
 * property with the Exists argument.
 * The PropertyBatchOperation operation fails if the property's existence is
 * not equal to the Exists argument.
 * The CheckExistsPropertyBatchOperation is generally used as a precondition
 * for the write operations in the batch.
 * Note that if one PropertyBatchOperation in a PropertyBatch fails,
 * the entire batch fails and cannot be committed in a transactional manner.
 *
 * @extends models['PropertyBatchOperation']
 */
class CheckExistsPropertyBatchOperation extends models['PropertyBatchOperation'] {
  /**
   * Create a CheckExistsPropertyBatchOperation.
   * @property {boolean} exists Whether or not the property should exist for
   * the operation to pass.
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of CheckExistsPropertyBatchOperation
   *
   * @returns {object} metadata of CheckExistsPropertyBatchOperation
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'CheckExists',
      type: {
        name: 'Composite',
        polymorphicDiscriminator: {
          serializedName: 'Kind',
          clientName: 'kind'
        },
        uberParent: 'PropertyBatchOperation',
        className: 'CheckExistsPropertyBatchOperation',
        modelProperties: {
          propertyName: {
            required: true,
            serializedName: 'PropertyName',
            type: {
              name: 'String'
            }
          },
          kind: {
            required: true,
            serializedName: 'Kind',
            isPolymorphicDiscriminator: true,
            type: {
              name: 'String'
            }
          },
          exists: {
            required: true,
            serializedName: 'Exists',
            type: {
              name: 'Boolean'
            }
          }
        }
      }
    };
  }
}

module.exports = CheckExistsPropertyBatchOperation;
