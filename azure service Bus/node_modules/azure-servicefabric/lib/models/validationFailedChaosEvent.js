/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Chaos event corresponding to a failure during validation.
 *
 * @extends models['ChaosEvent']
 */
class ValidationFailedChaosEvent extends models['ChaosEvent'] {
  /**
   * Create a ValidationFailedChaosEvent.
   * @property {string} [reason] Describes why the ValidationFailedChaosEvent
   * was generated. This may happen because more than MaxPercentUnhealthyNodes
   * are unhealthy for more than MaxClusterStabilizationTimeout. This reason
   * will be in the Reason property of the ValidationFailedChaosEvent as a
   * string.
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of ValidationFailedChaosEvent
   *
   * @returns {object} metadata of ValidationFailedChaosEvent
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'ValidationFailed',
      type: {
        name: 'Composite',
        polymorphicDiscriminator: {
          serializedName: 'Kind',
          clientName: 'kind'
        },
        uberParent: 'ChaosEvent',
        className: 'ValidationFailedChaosEvent',
        modelProperties: {
          timeStampUtc: {
            required: true,
            serializedName: 'TimeStampUtc',
            type: {
              name: 'DateTime'
            }
          },
          kind: {
            required: true,
            serializedName: 'Kind',
            isPolymorphicDiscriminator: true,
            type: {
              name: 'String'
            }
          },
          reason: {
            required: false,
            serializedName: 'Reason',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = ValidationFailedChaosEvent;
