/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Wrapper object for health evaluation.
 *
 */
class HealthEvaluationWrapper {
  /**
   * Create a HealthEvaluationWrapper.
   * @property {object} [healthEvaluation] Represents a health evaluation which
   * describes the data and the algorithm used by health manager to evaluate
   * the health of an entity.
   * @property {string} [healthEvaluation.aggregatedHealthState] The health
   * state of a Service Fabric entity such as Cluster, Node, Application,
   * Service, Partition, Replica etc. Possible values include: 'Invalid', 'Ok',
   * 'Warning', 'Error', 'Unknown'
   * @property {string} [healthEvaluation.description] Description of the
   * health evaluation, which represents a summary of the evaluation process.
   * @property {string} [healthEvaluation.kind] Polymorphic Discriminator
   */
  constructor() {
  }

  /**
   * Defines the metadata of HealthEvaluationWrapper
   *
   * @returns {object} metadata of HealthEvaluationWrapper
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'HealthEvaluationWrapper',
      type: {
        name: 'Composite',
        className: 'HealthEvaluationWrapper',
        modelProperties: {
          healthEvaluation: {
            required: false,
            serializedName: 'HealthEvaluation',
            type: {
              name: 'Composite',
              polymorphicDiscriminator: {
                serializedName: 'Kind',
                clientName: 'kind'
              },
              uberParent: 'HealthEvaluation',
              className: 'HealthEvaluation'
            }
          }
        }
      }
    };
  }
}

module.exports = HealthEvaluationWrapper;
