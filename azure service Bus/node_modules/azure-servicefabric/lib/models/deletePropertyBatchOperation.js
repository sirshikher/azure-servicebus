/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Represents a PropertyBatchOperation that deletes a specified property if it
 * exists.
 * Note that if one PropertyBatchOperation in a PropertyBatch fails,
 * the entire batch fails and cannot be committed in a transactional manner.
 *
 * @extends models['PropertyBatchOperation']
 */
class DeletePropertyBatchOperation extends models['PropertyBatchOperation'] {
  /**
   * Create a DeletePropertyBatchOperation.
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of DeletePropertyBatchOperation
   *
   * @returns {object} metadata of DeletePropertyBatchOperation
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'Delete',
      type: {
        name: 'Composite',
        polymorphicDiscriminator: {
          serializedName: 'Kind',
          clientName: 'kind'
        },
        uberParent: 'PropertyBatchOperation',
        className: 'DeletePropertyBatchOperation',
        modelProperties: {
          propertyName: {
            required: true,
            serializedName: 'PropertyName',
            type: {
              name: 'String'
            }
          },
          kind: {
            required: true,
            serializedName: 'Kind',
            isPolymorphicDiscriminator: true,
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = DeletePropertyBatchOperation;
