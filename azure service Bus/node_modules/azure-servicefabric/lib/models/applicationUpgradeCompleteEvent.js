/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Application Upgrade Complete event.
 *
 * @extends models['ApplicationEvent']
 */
class ApplicationUpgradeCompleteEvent extends models['ApplicationEvent'] {
  /**
   * Create a ApplicationUpgradeCompleteEvent.
   * @property {string} applicationTypeName Application type name.
   * @property {string} applicationTypeVersion Application type version.
   * @property {number} overallUpgradeElapsedTimeInMs Overall upgrade time in
   * milli-seconds.
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of ApplicationUpgradeCompleteEvent
   *
   * @returns {object} metadata of ApplicationUpgradeCompleteEvent
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'ApplicationUpgradeComplete',
      type: {
        name: 'Composite',
        polymorphicDiscriminator: {
          serializedName: 'Kind',
          clientName: 'kind'
        },
        uberParent: 'FabricEvent',
        className: 'ApplicationUpgradeCompleteEvent',
        modelProperties: {
          eventInstanceId: {
            required: true,
            serializedName: 'EventInstanceId',
            type: {
              name: 'String'
            }
          },
          timeStamp: {
            required: true,
            serializedName: 'TimeStamp',
            type: {
              name: 'DateTime'
            }
          },
          hasCorrelatedEvents: {
            required: false,
            serializedName: 'HasCorrelatedEvents',
            type: {
              name: 'Boolean'
            }
          },
          kind: {
            required: true,
            serializedName: 'Kind',
            isPolymorphicDiscriminator: true,
            type: {
              name: 'String'
            }
          },
          applicationId: {
            required: true,
            serializedName: 'ApplicationId',
            type: {
              name: 'String'
            }
          },
          applicationTypeName: {
            required: true,
            serializedName: 'ApplicationTypeName',
            type: {
              name: 'String'
            }
          },
          applicationTypeVersion: {
            required: true,
            serializedName: 'ApplicationTypeVersion',
            type: {
              name: 'String'
            }
          },
          overallUpgradeElapsedTimeInMs: {
            required: true,
            serializedName: 'OverallUpgradeElapsedTimeInMs',
            type: {
              name: 'Number'
            }
          }
        }
      }
    };
  }
}

module.exports = ApplicationUpgradeCompleteEvent;
