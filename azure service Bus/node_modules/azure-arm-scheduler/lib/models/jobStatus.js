/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Class representing a JobStatus.
 */
class JobStatus {
  /**
   * Create a JobStatus.
   * @member {number} [executionCount] Gets the number of times this job has
   * executed.
   * @member {number} [failureCount] Gets the number of times this job has
   * failed.
   * @member {number} [faultedCount] Gets the number of faulted occurrences
   * (occurrences that were retried and failed as many times as the retry
   * policy states).
   * @member {date} [lastExecutionTime] Gets the time the last occurrence
   * executed in ISO-8601 format.  Could be empty if job has not run yet.
   * @member {date} [nextExecutionTime] Gets the time of the next occurrence in
   * ISO-8601 format. Could be empty if the job is completed.
   */
  constructor() {
  }

  /**
   * Defines the metadata of JobStatus
   *
   * @returns {object} metadata of JobStatus
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'JobStatus',
      type: {
        name: 'Composite',
        className: 'JobStatus',
        modelProperties: {
          executionCount: {
            required: false,
            readOnly: true,
            serializedName: 'executionCount',
            type: {
              name: 'Number'
            }
          },
          failureCount: {
            required: false,
            readOnly: true,
            serializedName: 'failureCount',
            type: {
              name: 'Number'
            }
          },
          faultedCount: {
            required: false,
            readOnly: true,
            serializedName: 'faultedCount',
            type: {
              name: 'Number'
            }
          },
          lastExecutionTime: {
            required: false,
            readOnly: true,
            serializedName: 'lastExecutionTime',
            type: {
              name: 'DateTime'
            }
          },
          nextExecutionTime: {
            required: false,
            readOnly: true,
            serializedName: 'nextExecutionTime',
            type: {
              name: 'DateTime'
            }
          }
        }
      }
    };
  }
}

module.exports = JobStatus;
