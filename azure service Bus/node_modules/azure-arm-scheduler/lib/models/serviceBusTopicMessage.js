/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Class representing a ServiceBusTopicMessage.
 * @extends models['ServiceBusMessage']
 */
class ServiceBusTopicMessage extends models['ServiceBusMessage'] {
  /**
   * Create a ServiceBusTopicMessage.
   * @member {string} [topicPath] Gets or sets the topic path.
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of ServiceBusTopicMessage
   *
   * @returns {object} metadata of ServiceBusTopicMessage
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'ServiceBusTopicMessage',
      type: {
        name: 'Composite',
        className: 'ServiceBusTopicMessage',
        modelProperties: {
          authentication: {
            required: false,
            serializedName: 'authentication',
            type: {
              name: 'Composite',
              className: 'ServiceBusAuthentication'
            }
          },
          brokeredMessageProperties: {
            required: false,
            serializedName: 'brokeredMessageProperties',
            type: {
              name: 'Composite',
              className: 'ServiceBusBrokeredMessageProperties'
            }
          },
          customMessageProperties: {
            required: false,
            serializedName: 'customMessageProperties',
            type: {
              name: 'Dictionary',
              value: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          message: {
            required: false,
            serializedName: 'message',
            type: {
              name: 'String'
            }
          },
          namespace: {
            required: false,
            serializedName: 'namespace',
            type: {
              name: 'String'
            }
          },
          transportType: {
            required: false,
            serializedName: 'transportType',
            type: {
              name: 'Enum',
              allowedValues: [ 'NotSpecified', 'NetMessaging', 'AMQP' ]
            }
          },
          topicPath: {
            required: false,
            serializedName: 'topicPath',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = ServiceBusTopicMessage;
